{"version":3,"sources":["modules/dashboard-360/redux/constants.js","components/RouteItem.js","components/RouteSwitch.js","redux/action.js","redux/constants.js","serviceWorker.js","modules/dashboard-360/components/GlobalStyles.js","modules/dashboard-360/mixins/chartjs.js","modules/dashboard-360/theme/index.js","modules/dashboard-360/theme/shadows.js","modules/dashboard-360/theme/typography.js","redux/store.js","redux/rootModule.js","components/MainLoader.js","modules/dashboard-360/components/Logo.js","modules/dashboard-360/utils/endpoints.js","components/TopBar.js","modules/dashboard-360/layouts/DashboardLayout/NavBar/NavItem.js","modules/dashboard-360/layouts/DashboardLayout/NavBar/index.js","modules/dashboard-360/redux/action.js","modules/dashboard-360/utils/columns-config.js","components/CommonAlert.js","modules/dashboard-360/views/DashboardView/apiCalls.js","modules/dashboard-360/views/DashboardView/DownloadReport.js","modules/dashboard-360/views/admin/invoices/index.js","modules/dashboard-360/views/admin/orders/index.js","modules/dashboard-360/views/DashboardView/FAQ.js","components/Page.js","modules/dashboard-360/components/CustomTabs.js","modules/dashboard-360/components/BasicTable.js","modules/dashboard-360/views/DashboardView/DealerCard.js","modules/dashboard-360/views/DashboardView/DispositionForm.js","modules/dashboard-360/views/DashboardView/DistributorSelectModal.js","modules/dashboard-360/views/DashboardView/index.js","modules/dashboard-360/views/customer/CustomerListView/data.js","modules/dashboard-360/views/admin/agentlastfive/index.js","modules/dashboard-360/views/admin/distributerlastfive/index.js","modules/dashboard-360/routes/adminRoutes.js","modules/dashboard-360/views/account/AccountView/Profile.js","modules/dashboard-360/views/account/AccountView/ProfileDetails.js","modules/dashboard-360/views/account/AccountView/index.js","modules/dashboard-360/routes/userRoutes.js","modules/dashboard-360/layouts/MainLayout/index.js","modules/dashboard-360/layouts/DashboardLayout/index.js","modules/dashboard-360/routes/index.js","modules/telephony/views/dashboard/DaterangeReport.js","modules/telephony/views/dashboard/DispositionTable.js","modules/telephony/views/dashboard/index.js","modules/telephony/routes/index.js","modules/FAQ/routes/index.js","modules/FAQ/views/dashboard/index.js","modules/auth/views/Login.js","modules/auth/routes/index.js","modules/agentForm/views/dashboard/CreateAgentform.js","modules/agentForm/views/dashboard/EditAgent.js","modules/agentForm/views/dashboard/AgentTable.js","modules/agentForm/views/dashboard/index.js","modules/agentForm/routes/index.js","modules/groupadminForm/views/dashboard/Createform.js","modules/groupadminForm/views/dashboard/Edit.js","modules/groupadminForm/views/dashboard/Table.js","modules/groupadminForm/views/dashboard/index.js","modules/groupadminForm/routes/index.js","routes/index.js","Main.js","App.js","index.js","components/CustomBreadcrumbs.js","redux/reducers.js"],"names":["SET_USER_DATA","SET_DISTRIBUTOR_ORDERS","SET_DISTRIBUTOR_INVOICES","connect","state","activatedRoute","dispatch","setCrumb","route","setNewCrumb","setMatchFound","setUrlMatchFound","setActivatedRoute","useEffect","computedMatch","url","path","exact","render","props","component","routes","map","subRoute","crumb","concat","redirectPath","isRoot","location","useLocation","key","value","from","to","pathname","slice","setLoggedIn","isLoggedIn","type","SET_LOGGED_IN","payload","setUserDetails","details","setAccountType","accType","SET_ACCOUNT_TYPE","SET_ACTIVATED_ROUTE","SET_NEW_CRUMB","val","SET_URL_MATCH_FOUND","setAgentCurrentStatus","SET_AGENT_CURRENT_STATUS","setSearchDistributor","console","log","SET_SEARCH_DISTRIBUTOR","ADMIN","USER","COMMON","Boolean","window","hostname","match","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","color","colors","indigo","common","white","fontSize","fontFamily","fontWeight","lineHeight","letterSpacing","position","minHeight","withRouter","activateRoute","resetMatchFound","loc","useRef","current","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","theme","createMuiTheme","palette","background","dark","default","paper","primary","main","secondary","light","contrastText","text","blueGrey","red","shadows","typography","h1","h2","h3","h4","h5","h6","overline","createStore","id","reducerMap","logInState","accountType","crumbs","urlMatchFound","userData","agentCurrentStatus","searchDistributor","useStyle","dtheme","root","MainLoader","classes","useLoading","loading","indicator","containerProps","indicatorEl","Box","justifyContent","alignItems","display","className","Logo","alt","src","style","UPDATE_CURRENT_STATUS","SOCKETENDPOINT1","SOCKETENDPOINT2","SOCKETENDPOINT3","SOCKETENDPOINT4","SOCKETENDPOINT5","AGENT_SERVICE_URL","avatar","search","borderRadius","shape","fade","marginLeft","breakpoints","up","spacing","searchIcon","pointerEvents","title","marginRight","inputRoot","inputInput","paddingLeft","transition","transitions","create","removeFromQueue","agentId","queue","user_Details","axios","require","method","headers","then","response","catch","error","updateAgentCallStatusV2","callStatusId","data","JSON","stringify","searchtextdist","logout","searchDist","onMobileNavOpen","rest","useSelector","useState","viewAccess","notifications","history","useHistory","logoutUser","localStorage","getItem","loginStatus","jwtToken","Axios","delete","Authorization","clear","reload","AppBar","clsx","elevation","Toolbar","flexGrow","IconButton","onClick","push","Badge","badgeContent","length","variant","Button","Hidden","mdDown","Typography","noWrap","Tooltip","lgUp","item","paddingTop","paddingBottom","button","fontWeightMedium","textTransform","icon","active","NavItem","href","Icon","ListItem","disableGutters","activeClassName","RouterLink","size","user","items","BarChartIcon","UsersIcon","ShoppingBagIcon","UserIcon","SettingsIcon","LockIcon","UserPlusIcon","AlertCircleIcon","mobileDrawer","desktopDrawer","cursor","NavBar","onMobileClose","openMobile","content","flexDirection","p","Avatar","name","Divider","List","Drawer","anchor","onClose","open","defaultProps","setDistributorOrders","orders","setDistributorInvoices","invoices","orderColumns","field","headerName","renderCell","rowData","row","OrderNumber","flex","invoicesColumns","InvoiceNumber","lastFiveCallData","AgentCallColumns","DistributerCallColumns","CommonAlert","Alert","severity","u","getDealerDetails","distributorID","get","params","getDealerJoiningDetails","getDealerOrderDetails","getDealerInvoiceDetails","getSingleInvoiceDetails","orderID","getDealerKYCDetails","DownloadReport","DownloadData","filename","fields","result","Object","keys","header","dgContainer","maxHeight","paddingRight","distributorInvoices","setDistributorInvoicesAction","showLoader","setShowLoader","orderId","setSingleInvoiceDetails","orderIdPrev","res","page","setPage","CustomBreadcrumbs","onPageChange","pageSize","rowsPerPageOptions","pagination","autoHeight","columns","rows","order","maxWidth","distributorOrders","setDistributorOrdersAction","setSingleOrderDetails","maxW50","customLink","chipPrimary","success","rootChip","chipWarning","warning","mt1","marginTop","container1","transform","profileIcon","dialog","minWidth","Page","forwardRef","ref","children","Helmet","textTransformNone","actions","linkContainer","BasicTable","records","redirectLink","redirectLabel","setdealerDetails","setRootData","Card","Table","TableHead","TableRow","col","TableCell","TableBody","record","hover","setItem","asterixUniqueID","index2","DealerCard","obj","split","reduce","o","dealerDetails","showFullDetailsModal","setShowFullDetailsModal","CardContent","Grid","container","justify","Number","substr","substring","SOCKETENDPOINT","makeCall","gutterBottom","align","Dialog","DialogTitle","DialogContent","wrap","xs","flexBasis","DialogActions","fieldContainer","DispositionForm","DLF","APIENDPOINT","addToQueue","getKeyByValue","object","find","server1","server2","server3","server4","server5","sort","b","parseFloat","subcategory","category","comments","subcategoryitem","enable","issuetype","devicetype","connectivitytype","speedtype","ostype","solution","issuedescription","CallerName","callerapplication","L1Name","status","initialValue","setInitialValue","formRef","label","setCategory","categories","setCategories","setLoading","ticketTypeId","ticketType","subCategories","setSubCategories","subCategoryItems","setSubCategoryItems","setSubCategoryItem","setSelected","handleChange","e","s","target","defaultValue","unmounted","createdAt","updatedAt","v","_v","number","DLFDATA","reverse","dispostionFormData","getDLF","getItems","updateCallData","uniqueid","dispostionData","getALF","handleSubmit","values","serverPrefix","AgentQueueStatus","setCurrentCallDetails","updateData","agentCallStatus","callStatus","agentCallEvent","callEvent","agentCallUniqueId","callUniqueId","agentCallType","callType","agentCallDispositionStatus","callDispositionStatus","callerNumber","updateAgentCallStatus","distributerID","anydeskid","L2ID","agenttype","autoCompleteKey","validateOnBlur","initialValues","disform","onSubmit","validate","innerRef","validationSchema","yup","required","typeError","setFieldValue","direction","sm","TextField","multiline","FormControl","Autocomplete","getOptionLabel","option","getOptionSelected","onChange","event","cat","InQuiry","categoryId","subCategory","_id","Compln","getSubCategories","renderInput","setSubCategory","sct","HardWare","subCategoryId","subCategoryItem","Software","getSubCategoryItems","RadioGroup","FormControlLabel","control","Radio","socket1","uuid","socketIOClient","transports","panelBody","dialogActions","modal","timerComp","borderBottomLeftRadius","borderBottomRightRadius","callWrapper","callInbound","callOutbound","drawerHeader","currentCall","setAgentCurrentStatusAction","dist","reduxState","loadingDetails","setLoadingDetails","React","remarks","setRemarks","setTicketType","loginToken","setLoginToken","sla","slaOnHold","executiveEmail","executiveMobile","callDetails","breakStatus","setCurrentCall","userType","AgentId","AgentType","AgentSipId","agent","ALF","setALF","setDLF","disForm","setdisForm","mobile","setmobile","useDispatch","getOpenTickets","agentType","ALFDATA","getAgentCallStatus","agentSipID","contactNumber","role","distributer_id","AgentSIPID","channel","setInterval","GET_CURRENT_STATUS_BY_AGENT_SIP_ID","getCurrentStatus","distributor_id","Promise","allSettled","dealerAPICalls","breakService","BreakStatus","agentID","agentSIPID","on","Event","Channel1","Bridgestate","includes","getInitialData","disProfileByNum","Input","ORIGINATE_CALL_WITH_SIP_ID","Container","lg","md","CardHeader","form","tkstyp","subcat","subcatitem","rks","agentdisposedCalls","setagentdisposedCalls","agentServiceURL","exportButton","calls","Dashboard","Orders","agentDispostionList","distribuerCallDisposedList","Profile","dateText","moment","format","CardActions","fullWidth","states","ProfileDetails","firstName","lastName","email","phone","country","setValues","autoComplete","noValidate","subheader","helperText","select","SelectProps","native","MainLayout","isAdmin","startsWith","RouteSwitch","overflow","wrapper","contentContainer","DashboardLayout","isMobileNavOpen","setMobileNavOpen","adminRoutes","userRoutes","MaterialUIPickers","Date","startDate","setStartDate","endDate","setEndDate","utils","DateFnsUtils","disableToolbar","date","KeyboardButtonProps","grey","getContrastText","menuButton","textAlign","list","toolbar","mixins","listItem","cardcontent","DisInboundTable","Inbound","setInbound","InboundDataList","callarrived","ooohourscalls","callsoffered","callsanswered","queuecalls","shortabandoned","callsansweredwithin20","aht","filteredData","filter","created","toISOString","getIBdata","css","array","ListItemAvatar","ListItemText","Accordion","AccordionSummary","expandIcon","aria-controls","heading","AccordionDetails","livecalls","DispositionTable","useForm","register","firstNameRef","Copyright","Link","image","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","imageWrapper","submit","avatarWrapper","root1","setUserDetailsMain","setAccountTypeMain","setLoggedInMain","setError","post","myObj","userDetails","External_num","accessToken","CssBaseline","Paper","square","password","Yup","max","authenticate","errors","handleBlur","touched","onBlur","my","mt","AgentName","AgentEmail","Agentcontact","Group","Groups","setGroups","fetch","json","group_name","alert","pushAgentCurrentStatusData","TableData","message","preventDefault","resetForm","disabled","DistSelect","InputLabelProps","showModal","setShowModal","Data","EditData","formData","setFormData","EmployeeName","EmailID","GroupName","shrink","group_id","Enabled","DataGridDemo","agents","setAgents","setEditform","editData","setEditData","UserID","checkboxSelection","onSelectionChange","newSelection","GroupAdminName","GroupAdminEmail","groupcontact","lazy","requiresAuth","telephonyRoutes","faqRoutes","agentRoutes","groupRoutes","authRoutes","filteredRoutes","setfilteredRoutes","localLoggedInState","setLocalLoggedIn","setRouteAccess","err","AllowPublic","UserName","OTP","tenetID","tenentId","tenentName","roleids","modules","Server","App","store","rootStore","ThemeProvider","Suspense","fallback","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","breadCrumbLinks","setbreadCrumbLinks","newLink","splice","join","agentInitialState","action","Map","set"],"mappings":"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","file":"static/js/main.d814d0d3.chunk.js","sourcesContent":["export const COMMON = 'COMMON';\nexport const REDIRECT_TO = 'REDIRECT_TO';\nexport const SET_LOGIN_ACTION = 'SET_LOGIN_ACTION';\nexport const SET_USER_DATA = 'SET_USER_DATA';\nexport const SET_PRODUCT_DATA = 'SET_PRODUCT_DATA';\nexport const SET_DISTRIBUTOR_ORDERS = 'SET_DISTRIBUTOR_ORDERS';\nexport const SET_DISTRIBUTOR_INVOICES = 'SET_DISTRIBUTOR_INVOICES';\nexport const SET_DELIVERY_PRICES = 'SET_DELIVERY_PRICES';\nexport const SET_CATEGORIES = 'SET_CATEGORIES';\nexport const SET_CATEGORIES_NAMES_MAP = 'SET_CATEGORIES_NAMES';\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport {\n  setNewCrumb,\n  setUrlMatchFound,\n  setActivatedRoute\n} from 'src/redux/action';\n\n/**\n * Render a route with potential sub routes\n */\nfunction RouteWithSubRoutes(route) {\n  useEffect(() => {\n    if (route.activatedRoute === route.computedMatch.url) {\n      if (route.computedMatch.path !== route.computedMatch.url) {\n        route.setActivatedRoute(route.computedMatch.path);\n      }\n      route.setMatchFound();\n    }\n  }, [route.activatedRoute]);\n  return (\n    <Route\n      path={route.path}\n      exact={route.exact}\n      render={props => (\n        <route.component\n          {...props}\n          routes={route.routes?.map(subRoute => ({\n            ...subRoute,\n            path: route.path + subRoute.path,\n            crumb: (typeof route.crumb === 'string'\n              ? [route.crumb]\n              : route.crumb || []\n            ).concat(subRoute.crumb || [''])\n          }))}\n        />\n      )}\n    />\n  );\n}\nconst mapStateToProps = state => ({\n  activatedRoute: state.activatedRoute\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCrumb: route => dispatch(setNewCrumb(route)),\n  setMatchFound: () => dispatch(setUrlMatchFound(true)),\n  setActivatedRoute: route => dispatch(setActivatedRoute(route))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RouteWithSubRoutes);\n","import React, { useEffect } from 'react';\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { setNewCrumb } from 'src/redux/action';\nimport { connect } from 'react-redux';\nimport RouteWithSubRoutes from './RouteItem';\n\nfunction RouteSwitch({ routes, redirectPath, isRoot, setCrumb }) {\n  const location = useLocation();\n\n  useEffect(() => {\n    routes.map(route => setCrumb({ key: route.path, value: route.crumb }));\n  }, []);\n\n  return (\n    <Switch>\n      {isRoot && (\n        <Redirect from=\"/:url*(/+)\" to={location.pathname.slice(0, -1)} />\n      )}\n      {routes.map(route => {\n        return <RouteWithSubRoutes {...route} key={route} />;\n      })}\n      {redirectPath && (\n        <Route path=\"*\">\n          <Redirect to={redirectPath} />\n        </Route>\n      )}\n    </Switch>\n  );\n}\n\nRouteSwitch.propTypes = {\n  routes: PropTypes.any,\n  redirectPath: PropTypes.string,\n  isRoot: PropTypes.bool,\n  setCrumb: PropTypes.func\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setCrumb: route => dispatch(setNewCrumb(route))\n});\n\nexport default connect(null, mapDispatchToProps)(RouteSwitch);\n","import { SET_USER_DATA } from 'src/modules/dashboard-360/redux/constants';\nimport {\n  SET_LOGGED_IN,\n  SET_ACCOUNT_TYPE,\n  SET_ACTIVATED_ROUTE,\n  SET_NEW_CRUMB,\n  SET_URL_MATCH_FOUND,\n  SET_AGENT_CURRENT_STATUS,\n  SET_SEARCH_DISTRIBUTOR\n} from './constants';\n\nexport const setLoggedIn = isLoggedIn => {\n  return {\n    type: SET_LOGGED_IN,\n    payload: isLoggedIn\n  };\n};\nexport const setUserDetails = details => {\n  return {\n    type: SET_USER_DATA,\n    payload: details\n  };\n};\n\nexport const setAccountType = accType => {\n  return {\n    type: SET_ACCOUNT_TYPE,\n    payload: accType\n  };\n};\nexport const setActivatedRoute = route => {\n  return {\n    type: SET_ACTIVATED_ROUTE,\n    payload: route\n  };\n};\nexport const setNewCrumb = ({ key, value }) => {\n  return {\n    type: SET_NEW_CRUMB,\n    key,\n    value\n  };\n};\nexport const setUrlMatchFound = val => {\n  return {\n    type: SET_URL_MATCH_FOUND,\n    payload: val\n  };\n};\n\nexport const setAgentCurrentStatus = val => {\n  // console.log(\"val\", val)\n  return {\n    type: SET_AGENT_CURRENT_STATUS,\n    payload: val\n  };\n};\nexport const setSearchDistributor = val => {\n  console.log(\"val\", val)\n  return {\n    type: SET_SEARCH_DISTRIBUTOR,\n    payload: val\n  };\n};\n","export const SET_LOGGED_IN = 'SET_LOGGED_IN';\nexport const SET_ACCOUNT_TYPE = 'SET_ACCOUNT_TYPE';\nexport const ADMIN = 'ADMIN';\nexport const USER = 'USER';\nexport const COMMON = 'COMMON';\nexport const SET_ACTIVATED_ROUTE = 'SET_ACTIVATED_ROUTE';\nexport const SET_NEW_CRUMB = 'SET_NEW_CRUMB';\nexport const SET_URL_MATCH_FOUND = 'SET_URL_MATCH_FOUND';\nexport const SET_AGENT_CURRENT_STATUS = 'SET_AGENT_CURRENT_STATUS';\nexport const SET_SEARCH_DISTRIBUTOR='SET_SEARCH_DISTRIBUTOR';","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import { colors, createStyles, makeStyles } from '@material-ui/core';\nimport { useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { setActivatedRoute, setUrlMatchFound } from 'src/redux/action';\nimport { useLocation, withRouter, useRouteMatch } from 'react-router-dom';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    '@global': {\n      '*': {\n        boxSizing: 'border-box',\n        margin: 0,\n        padding: 0\n      },\n      html: {\n        '-webkit-font-smoothing': 'antialiased',\n        '-moz-osx-font-smoothing': 'grayscale',\n        height: '100%',\n        width: '100%'\n      },\n      body: {\n        backgroundColor: '#f4f6f8',\n        height: '100%',\n        width: '100%'\n      },\n      a: {\n        textDecoration: 'none'\n      },\n      '#root': {\n        height: '100%',\n        width: '100%'\n      },\n      '.text-underlined': {\n        textDecoration: 'underline'\n      },\n      '.link-primary': {\n        color: colors.indigo[500]\n      },\n      '.MuiTab-textColorPrimary': {\n        color: colors.indigo[500]\n      },\n      '.MuiChip-root': {\n        color: colors.common.white\n      },\n      '.MuiChip-colorPrimary': {\n        color: colors.common.white\n      },\n      '.MuiChip-colorSecondary': {\n        color: colors.common.white\n      },\n      '.MuiTypography-colorTextSecondary': {\n        color: 'rgba(0, 0, 0, 0.54)'\n      },\n      '.MuiTypography-h6': {\n        fontSize: '1.25rem',\n        fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n        fontWeight: '500',\n        lineHeight: '1.6',\n        letterSpacing: '0.0075em'\n      },\n      '.MuiFormLabel-root': {\n        color: '#3f51b5'\n      },\n      '.position-relative': {\n        position: 'relative'\n      },\n      '.position-absolute': {\n        position: 'absolute'\n      },\n      '.MuiToolbar-regular': {\n        minHeight: 64\n      },\n      '.color-white': {\n        color: 'white'\n      },\n      '.MuiAlert-standardSuccess': {\n        backgroundColor: 'rgb(180 237 168) !important'\n      }\n    }\n  })\n);\n\nconst GlobalStyles = ({\n  activateRoute,\n  location,\n  activatedRoute,\n  resetMatchFound,\n  ...props\n}) => {\n  const loc = useRef(null);\n  useStyles();\n  useEffect(() => {\n    if (loc.current !== location) {\n      resetMatchFound();\n      activateRoute(location.pathname);\n      loc.current = location;\n    }\n  }, [location]);\n  return null;\n};\nconst mapStateToProps = state => ({\n  activatedRoute: state.activatedRoute\n});\n\nconst mapDispatchToProps = dispatch => ({\n  activateRoute: route => dispatch(setActivatedRoute(route)),\n  resetMatchFound: () => dispatch(setUrlMatchFound(false))\n});\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(GlobalStyles)\n);\n","import { Chart } from 'react-chartjs-2';\n\n// ChartJS extension rounded bar chart\n// https://codepen.io/jedtrow/full/ygRYgo\nfunction draw() {\n  const { ctx } = this._chart;\n  const vm = this._view;\n  let { borderWidth } = vm;\n\n  let left;\n  let right;\n  let top;\n  let bottom;\n  let signX;\n  let signY;\n  let borderSkipped;\n  let radius;\n\n  // If radius is less than 0 or is large enough to cause drawing errors a max\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\n  let { cornerRadius } = this._chart.config.options;\n  if (cornerRadius < 0) {\n    cornerRadius = 0;\n  }\n\n  if (typeof cornerRadius === 'undefined') {\n    cornerRadius = 0;\n  }\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || 'bottom';\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || 'left';\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    const halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  const borders = ['bottom', 'left', 'top', 'right'];\n  let startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  let corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (let i = 1; i < 4; i += 1) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    const width = corners[2][0] - corners[1][0];\n    const height = corners[0][1] - corners[1][1];\n    const x = corners[1][0];\n    const y = corners[1][1];\n\n    radius = cornerRadius;\n    // Fix radius being too large\n    if (radius > Math.abs(height) / 2) {\n      radius = Math.floor(Math.abs(height) / 2);\n    }\n    if (radius > Math.abs(width) / 2) {\n      radius = Math.floor(Math.abs(width) / 2);\n    }\n\n    if (height < 0) {\n      // Negative values in a standard bar chart\n      const xTl = x;\n      const xTr = x + width;\n      const yTl = y + height;\n      const yTr = y + height;\n\n      const xBl = x;\n      const xBr = x + width;\n      const yBl = y;\n      const yBr = y;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else if (width < 0) {\n      // Negative values in a horizontal bar chart\n      const xTl = x + width;\n      const xTr = x;\n      const yTl = y;\n      const yTr = y;\n\n      const xBl = x + width;\n      const xBr = x;\n      const yBl = y + height;\n      const yBr = y + height;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else {\n      // Positive Value\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(\n        x + width,\n        y + height,\n        x + width - radius,\n        y + height\n      );\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n    }\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n}\n\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\n  draw\n});\n","import { createMuiTheme, colors } from '@material-ui/core';\nimport shadows from './shadows';\nimport typography from './typography';\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      dark: '#F4F6F8',\n      default: colors.common.white,\n      paper: colors.common.white\n    },\n    primary: {\n      main: colors.indigo[500]\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n    text: {\n      primary: colors.blueGrey[900],\n      secondary: colors.red[600]\n    }\n  },\n  shadows,\n  typography\n});\n\nexport default theme;\n","export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","export default {\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","import { createStore } from 'redux-dynamic-modules-core';\nimport getWeatherModule from './rootModule';\n\nexport default createStore(\n    {\n        id: 'root',\n    },\n    getWeatherModule()\n);\n","import {\n  logInState,\n  accountType,\n  activatedRoute,\n  crumbs,\n  urlMatchFound,\n  userData,\n  agentCurrentStatus,\n  searchDistributor\n} from './reducers';\n\nexport default function getWeatherModule() {\n  return {\n    // Unique id of the module\n    id: 'root',\n    // Maps the Store key to the reducer\n    reducerMap: {\n      logInState,\n      accountType,\n      activatedRoute,\n      crumbs,\n      urlMatchFound,\n      userData,\n      agentCurrentStatus,\n      searchDistributor\n    }\n    // This module uses redux-saga middleware\n    // This property will be be used by the SagaExtension\n    // to run sagas for the moduleD\n  };\n}\n","import { useLoading, Grid } from '@agney/react-loading';\nimport { Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React from 'react';\n\nconst useStyle = makeStyles((dtheme) => ({\n  root: {\n    height: '100%',\n    width: '100%',\n    backgroundColor: dtheme.palette.primary.light,\n    color: 'white'\n  }\n}));\n\nexport default function MainLoader() {\n  const classes = useStyle();\n  const { containerProps, indicatorEl } = useLoading({\n    loading: true,\n    indicator: <Grid width=\"50\" height=\"50\" />,\n  });\n\n  return (\n    <Box\n      {...containerProps}\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      display=\"flex\"\n      className={classes.root}\n    >\n      {indicatorEl}\n    </Box>\n  );\n}\n","import React from 'react';\n\nconst Logo = props => {\n  return (\n    <img\n      alt=\"Logo\"\n      src=\"/static/merittrac.png\"\n      {...props}\n      style={{ height: '50px', width: '50px' }}\n    />\n  );\n};\n\nexport default Logo;\n","export const GET_DEALER_PROFILE = 'http://14.98.23.204/boapi/profileID';\nexport const GET_DEALER_JOINING_DETAILS = 'http://14.98.23.204/boapi/distjoining';\nexport const GET_DEALER_ORDERS = 'http://14.98.23.204/boapi/orders';\nexport const GET_DEALER_SINGLE_ORDERS = 'http://14.98.23.204/boapi/order';\nexport const GET_DEALER_INVOICES = 'http://14.98.23.204/boapi/invoice';\nexport const GET_DEALER_KYC = 'http://14.98.23.204/boapi/kycstatus';\nexport const PUT_BREAK_AGENT = 'http://106.51.86.75:42004/crm/agentbreakservices';\nexport const GET_INTERACTION_BY_DISTRIBUTOR_ID = 'http://106.51.86.75:42004/crm/interactions/getByDistributerID?distributerID=';\nexport const GET_INTERACTION_BY_AGENT_SIP_ID = 'http://106.51.86.75:42004/crm/interactions/getByAgentSIPID?SipID=';\nexport const UPDATE_CURRENT_STATUS = 'http://106.51.86.75:42004/crm/currentstatuses/';\nexport const GET_CURRENT_STATUS_BY_AGENT_SIP_ID = 'http://106.51.86.75:42004/crm/currentstatuses/agentSipID?agentSipID=';\nexport const ORIGINATE_CALL_WITH_SIP_ID = 'http://106.51.86.75:42004/ami/actions/orginatecall?';\nexport const UPDATE_CALL_STATUS = 'http://106.51.86.75:42004/crm/interactions/';\nexport const GET_INBOUND_DASHBOARD_DATA = '/gpreport/service/dashboardcount?AccessKeys=123';\nexport const GET_INTERACTION_BY_CALLER_NUMBER = 'http://106.51.86.75:42004/crm/interactions/getTransferedData?callerNumber=';\nexport const SOCKETENDPOINT1 = 'http://106.51.86.75:42001';\nexport const SOCKETENDPOINT2 = 'http://106.51.86.75:42002';\nexport const SOCKETENDPOINT3 = 'http://106.51.86.75:42003';\nexport const SOCKETENDPOINT4 = 'http://106.51.86.75:42005';\nexport const SOCKETENDPOINT5 = 'http://106.51.86.75:42009';\nexport const AGENT_SERVICE_URL = 'http://106.51.86.75:42004';\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n// import config from '../modules/ticketing/views/config.json';\nimport { Link, Link as RouterLink, useHistory } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Badge,\n  Box,\n  Hidden,\n  IconButton,\n  Toolbar,\n  makeStyles,\n  Typography,\n  InputBase,\n  fade,\n  Tooltip,\n  Button\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport Logo from 'src/modules/dashboard-360/components/Logo';\nimport { SearchIcon } from '@material-ui/data-grid';\nimport AccountBoxRoundedIcon from '@material-ui/icons/AccountBoxRounded';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { setLoggedIn, setSearchDistributor } from 'src/redux/action';\nimport { connect } from 'react-redux';\nimport Axios from 'axios';\nimport { SET_SEARCH_DISTRIBUTOR } from 'src/redux/constants';\nimport {\n  SOCKETENDPOINT1, SOCKETENDPOINT2, SOCKETENDPOINT3, SOCKETENDPOINT4, SOCKETENDPOINT5, UPDATE_CURRENT_STATUS\n} from '../modules/dashboard-360/utils/endpoints'\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  avatar: {\n    width: 60,\n    height: 60\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(4),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontWeight: 500,\n    marginRight: 15,\n    fontSize: '0.96rem',\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  inputRoot: {\n    color: 'white'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '18ch',\n      '&:focus': {\n        width: '30ch'\n      }\n    }\n  }\n}));\n\nvar APIENDPOINT = SOCKETENDPOINT2;\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n/// addToQueue start //////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction addToQueue(agentId, queue) {\n  var axios = require('axios');\n  var data = JSON.stringify({\n    agentId: agentId,\n    queue: queue,\n    action: 'QueueAdd'\n  });\n\n  var config = {\n    method: 'get',\n    url:\n      APIENDPOINT +\n      '/ami/actions/addq?Interface=' + agentId + '&Queue=' +\n      queue +\n      '',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  axios(config)\n    .then(function (response) { })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n/// addToQueue end //////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n/// removeFromQueue start //////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction removeFromQueue(agentId, queue, user_Details) {\n  const axios = require('axios');\n  var APIENDPOINT = '';\n  console.log('userDetails sdsdfgsdfgsdf', user_Details)\n  // if (user_Details.Server === 'server1') {\n  //   APIENDPOINT = SOCKETENDPOINT1\n  // }\n  // if (user_Details.Server === 'server2') {\n  //   APIENDPOINT = SOCKETENDPOINT2\n  // }\n  // if (user_Details.Server === 'server3') {\n  //   APIENDPOINT = SOCKETENDPOINT3\n  // }\n  // if (user_Details.Server === 'server4') {\n  //   APIENDPOINT = SOCKETENDPOINT4\n  // }\n  console.log('remove', agentId);\n  const config1 = {\n    method: 'get',\n    url:\n      `${SOCKETENDPOINT1\n      }/ami/actions/rmq?Queue=${queue\n      }&Interface=${agentId}`,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  axios(config1)\n    .then((response) => {\n\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n\n\n  const config2 = {\n    method: 'get',\n    url:\n      `${SOCKETENDPOINT2\n      }/ami/actions/rmq?Queue=${queue\n      }&Interface=${agentId}`,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  axios(config2)\n    .then((response) => {\n\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n\n\n  const config3 = {\n    method: 'get',\n    url:\n      `${SOCKETENDPOINT3\n      }/ami/actions/rmq?Queue=${queue\n      }&Interface=${agentId}`,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  axios(config3)\n    .then((response) => {\n\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n\n\n  const config4 = {\n    method: 'get',\n    url:\n      `${SOCKETENDPOINT4\n      }/ami/actions/rmq?Queue=${queue\n      }&Interface=${agentId}`,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  axios(config4)\n    .then((response) => {\n\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n\n  const config5 = {\n    method: 'get',\n    url:\n      `${SOCKETENDPOINT5\n      }/ami/actions/rmq?Queue=7003&Interface=${agentId}`,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  axios(config5)\n    .then((response) => {\n\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n/// removeFromQueue end //////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nfunction updateAgentCallStatusV2(callStatusId, data) {\n  // console.log(\"updateData\", updateData)\n  var axios = require('axios');\n  var config = {\n    method: 'put',\n    url: UPDATE_CURRENT_STATUS + callStatusId,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    data: data\n  };\n  axios(config)\n    .then(function (response) {\n      console.log('update', JSON.stringify(response.data));\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n\nconst TopBar = ({\n  className,\n  onMobileNavOpen,\n  logout,\n  searchDist,\n  ...rest\n}) => {\n  const userData = useSelector(state => state.userData);\n  const user_Details = useSelector(state => state.userData)\n  const [createAccess, setCreateAccess] = useState(-1);\n  const [viewAccess, setViewAccess] = useState(-1);\n  const [assignAccess, setAssignAccess] = useState(-1);\n  const [reportsAccess, setReportsAccess] = useState(-1);\n  const [editAccess, setEditAccess] = useState(-1);\n  const [role, setRole] = useState(-1);\n  const classes = useStyles();\n  const [notifications] = useState([]);\n  const [searchText, setSearchText] = useState('');\n  let history = useHistory();\n  useEffect(() => {\n    // const apiUrl = config.APIS_URL + '/access/email/' + userData.email;\n    // fetch(apiUrl)\n    //   .then(res => res.json())\n    //   .then(repos => {\n    //     setRole(repos.role.role);\n    //     setCreateAccess(\n    //       parseInt(\n    //         (\n    //           repos.data.filter(\n    //             access => access.functionalityId === '1'\n    //           )[0] || { accessLevelId: -1 }\n    //         ).accessLevelId\n    //       )\n    //     );\n    //     setViewAccess(\n    //       parseInt(\n    //         (\n    //           repos.data.filter(\n    //             access => access.functionalityId === '2'\n    //           )[0] || { accessLevelId: -1 }\n    //         ).accessLevelId\n    //       )\n    //     );\n    //     setEditAccess(\n    //       parseInt(\n    //         (\n    //           repos.data.filter(\n    //             access => access.functionalityId === '3'\n    //           )[0] || { accessLevelId: -1 }\n    //         ).accessLevelId\n    //       )\n    //     );\n    //     setAssignAccess(\n    //       parseInt(\n    //         (\n    //           repos.data.filter(\n    //             access => access.functionalityId === '4'\n    //           )[0] || { accessLevelId: -1 }\n    //         ).accessLevelId\n    //       )\n    //     );\n    //     setReportsAccess(\n    //       parseInt(\n    //         (\n    //           repos.data.filter(\n    //             access => access.functionalityId === '5'\n    //           )[0] || { accessLevelId: -1 }\n    //         ).accessLevelId\n    //       )\n    //     );\n    //   });\n  }, []);\n  const updateSearchText = evt => {\n    setSearchText(evt.target.value);\n  };\n  const distributorID = evt => {\n    console.log('searchText', searchText);\n    searchDist(searchText);\n  };\n  async function logoutUser() {\n\n    try {\n      removeFromQueue(`Local/5${localStorage.getItem('AgentSIPID')}@from-queue`, 7001, user_Details);\n      // if (localStorage.getItem('Agenttype') === 'L1') {\n      //   // removeFromQueue('Local/5'+localStorage.getItem('AgentSIPID')+'@from-internal', 7001)\n      //   if (user_Details.AgentQueueStatus === 'dynamic') {\n      //     removeFromQueue(`Local/5${localStorage.getItem('AgentSIPID')}@from-queue`, 7001, user_Details);\n      //   }\n      // }\n      // if (localStorage.getItem('Agenttype') === 'L2') {\n      //   // removeFromQueue('Local/3'+localStorage.getItem('AgentSIPID')+'@from-internal', 7002)\n      //   if (user_Details.AgentQueueStatus === 'dynamic') {\n      //     removeFromQueue(`Local/3${localStorage.getItem('AgentSIPID')}@from-queue`, 7002, user_Details);\n      //   }\n      // }\n      updateAgentCallStatusV2(localStorage.getItem('callStatusId'), { loginStatus: 'false' })\n      // axios\n      // .delete(BackendURL.AuthenticationURL + '/auth/api/logout', { headers: { \"authorization\": userData } })\n      const userData = localStorage.jwtToken\n\n      const url = 'http://106.51.86.75:4000/auth/apiM/logout'\n      await Axios.delete(url, { headers: { Authorization: `Bearer ${localStorage.getItem('jwtToken')}` } });\n\n      localStorage.clear();\n\n      logout();\n      window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  var test = \"green\"\n  return (\n    <AppBar className={clsx(classes.root, className)} elevation={0} {...rest} style={{ background: `${test}` }}>\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <Logo />\n        </RouterLink>\n\n        {/* <div className={classes.search}>\n          <div className={classes.searchIcon}>\n            <SearchIcon />\n          </div>\n          <InputBase\n            placeholder=\"Search…\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput\n            }}\n            inputProps={{ 'aria-label': 'search' }}\n            onChange={updateSearchText}\n            value={searchText}\n            onBlur={distributorID}\n          />\n        </div> */}\n        <Box flexGrow={1} />\n        <IconButton color=\"inherit\" onClick={() => history.push('/dash360')}>\n          <Badge\n            badgeContent={notifications.length}\n            color=\"primary\"\n            variant=\"dot\"\n          >\n            <Button variant=\"contained\" color=\"secondary\" > Fetch Info </Button>\n          </Badge>\n        </IconButton>\n\n\n        <Hidden mdDown>\n          {localStorage.getItem(\"role\") === \"Agent\" ? <Typography className={classes.title} variant=\"h5\" noWrap>\n            <Link to=\"/dash360\" className=\"color-white\">\n              Agent {localStorage.getItem('Agenttype') + ' ' + localStorage.getItem('AgentSIPID')}\n            </Link>\n          </Typography> : <></>}\n          {localStorage.getItem(\"role\") === \"Admin\" || localStorage.getItem(\"role\") === \"Group admin\" ? <Typography className={classes.title} variant=\"h5\" noWrap>\n            <Link to=\"/telephony/dashboard\" className=\"color-white\">\n              Telephony\n            </Link>\n          </Typography> : <></>}\n          {localStorage.getItem(\"role\") === \"Admin\" || localStorage.getItem(\"role\") === \"Group admin\" ? <Typography className={classes.title} variant=\"h5\" noWrap>\n            <Link to=\"/agent/dashboard\" className=\"color-white\">\n              Agents\n            </Link>\n          </Typography> : <></>}\n          {localStorage.getItem(\"role\") === \"Admin\" ? <Typography className={classes.title} variant=\"h5\" noWrap>\n            <Link to=\"/group/dashboard\" className=\"color-white\">\n              Groups\n            </Link>\n          </Typography> : <></>}\n          {viewAccess === -1 ? (\n            ''\n          ) : (\n            <></>\n          )}\n          {/* <IconButton color=\"inherit\">\n            <AccountBoxRoundedIcon />\n          </IconButton> */}\n          <Tooltip title=\"Logout\">\n            <IconButton color=\"inherit\" onClick={() => logoutUser()}>\n              <ExitToAppIcon />\n            </IconButton>\n          </Tooltip>\n        </Hidden>\n        <Hidden lgUp>\n        <IconButton color=\"inherit\" onClick={() => logoutUser()}>\n              <ExitToAppIcon />\n            </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\nconst mapStateToProps = state => ({\n  searchtextdist: state.searchDistributor\n});\n\nconst mapDispatchToProps = dispatch => ({\n  logout: () => dispatch(setLoggedIn(false)),\n  searchDist: val => dispatch(setSearchDistributor(val))\n});\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func,\n  logout: PropTypes.func,\n  searchDist: PropTypes.func\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopBar);\n","import React from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  ListItem,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: theme.palette.text.secondary,\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'flex-start',\n    letterSpacing: 0,\n    padding: '10px 8px',\n    textTransform: 'none',\n    width: '100%'\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    marginRight: 'auto'\n  },\n  active: {\n    color: theme.palette.primary.main,\n    '& $title': {\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst NavItem = ({\n  className,\n  href,\n  icon: Icon,\n  title,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem\n      className={clsx(classes.item, className)}\n      disableGutters\n      {...rest}\n    >\n      <Button\n        activeClassName={classes.active}\n        className={classes.button}\n        component={RouterLink}\n        to={href}\n      >\n        {Icon && (\n          <Icon\n            className={classes.icon}\n            size=\"20\"\n          />\n        )}\n        <span className={classes.title}>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  className: PropTypes.string,\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","import React, { useEffect } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Divider,\n  Drawer,\n  Hidden,\n  List,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  AlertCircle as AlertCircleIcon,\n  BarChart as BarChartIcon,\n  Lock as LockIcon,\n  Settings as SettingsIcon,\n  ShoppingBag as ShoppingBagIcon,\n  User as UserIcon,\n  UserPlus as UserPlusIcon,\n  Users as UsersIcon\n} from 'react-feather';\nimport NavItem from './NavItem';\n\nconst user = {\n  avatar: '/static/images/avatars/avatar_6.png',\n  jobTitle: 'Senior Developer',\n  name: 'Katarina Smith'\n};\n\nconst items = [\n  {\n    href: '/app/dashboard',\n    icon: BarChartIcon,\n    title: 'Dashboard'\n  },\n  {\n    href: '/app/customers',\n    icon: UsersIcon,\n    title: 'Customers'\n  },\n  {\n    href: '/app/products',\n    icon: ShoppingBagIcon,\n    title: 'Products'\n  },\n  {\n    href: '/app/account',\n    icon: UserIcon,\n    title: 'Account'\n  },\n  {\n    href: '/app/settings',\n    icon: SettingsIcon,\n    title: 'Settings'\n  },\n  {\n    href: '/login',\n    icon: LockIcon,\n    title: 'Login'\n  },\n  {\n    href: '/register',\n    icon: UserPlusIcon,\n    title: 'Register'\n  },\n  {\n    href: '/404',\n    icon: AlertCircleIcon,\n    title: 'Error'\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  mobileDrawer: {\n    width: 256\n  },\n  desktopDrawer: {\n    width: 256,\n    top: 64,\n    height: 'calc(100% - 64px)'\n  },\n  avatar: {\n    cursor: 'pointer',\n    width: 64,\n    height: 64\n  }\n}));\n\nconst NavBar = ({ onMobileClose, openMobile }) => {\n  const classes = useStyles();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]);\n\n  const content = (\n    <Box height=\"100%\" display=\"flex\" flexDirection=\"column\">\n      <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\" p={2}>\n        <Avatar\n          className={classes.avatar}\n          component={RouterLink}\n          src={user.avatar}\n          to=\"/app/account\"\n        />\n        <Typography className={classes.name} color=\"textPrimary\" variant=\"h5\">\n          {user.name}\n        </Typography>\n        <Typography color=\"textSecondary\" variant=\"body2\">\n          {user.jobTitle}\n        </Typography>\n      </Box>\n      <Divider />\n      <Box p={2}>\n        <List>\n          {items.map(item => (\n            <NavItem\n              href={item.href}\n              key={item.title}\n              title={item.title}\n              icon={item.icon}\n            />\n          ))}\n        </List>\n      </Box>\n      <Box flexGrow={1} />\n    </Box>\n  );\n\n  return (\n    <>\n      <Hidden lgUp>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.mobileDrawer }}\n          onClose={onMobileClose}\n          open={openMobile}\n          variant=\"temporary\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n};\n\nNavBar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool\n};\n\nNavBar.defaultProps = {\n  onMobileClose: () => {},\n  openMobile: false\n};\n\nexport default NavBar;\n","import { SET_DISTRIBUTOR_ORDERS, SET_DISTRIBUTOR_INVOICES } from './constants';\n\n// export const setActionAfterLogIn = (actionType, courseId) => {\n//     return {\n//         type: SET_LOGIN_ACTION,\n//         actionType,\n//         payload: courseId\n//     };\n// };\n\nexport const setDistributorOrders = orders => {\n  return {\n    type: SET_DISTRIBUTOR_ORDERS,\n    payload: orders\n  };\n};\n\nexport const setDistributorInvoices = invoices => {\n  return {\n    type: SET_DISTRIBUTOR_INVOICES,\n    payload: invoices\n  };\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const orderColumns = [\n  {\n    field: 'OrderNumber',\n    headerName: 'Order ID',\n    renderCell: rowData => (\n      <Link to={`/dash360/admin/orders/${rowData.row.OrderNumber}`}>\n        {rowData.row.OrderNumber}\n      </Link>\n    )\n  },\n  {\n    field: 'CreatedType',\n    flex: 1,\n    headerName: 'Created Type'\n  },\n  {\n    field: 'StatusKey',\n    flex: 1,\n    headerName: 'Status'\n  },\n  {\n    flex: 1,\n    field: 'CreatedOn',\n    headerName: 'Created On'\n  }\n];\n\nexport const invoicesColumns = [\n  {\n    renderCell: rowData => (\n      <Link to={`/dash360/admin/invoices/${rowData.row.InvoiceNumber}`}>\n        {rowData.row.InvoiceNumber}\n      </Link>\n    ),\n    headerName: 'Invoice Number',\n    field: 'InvoiceNumber',\n    flex: 1\n  },\n  {\n    field: 'InvoiceAmount',\n    headerName: 'Amount',\n    flex: 1\n  },\n  {\n    field: 'Status',\n    headerName: 'Status',\n    flex: 1\n  },\n  {\n    field: 'BillingMobile',\n    headerName: 'Billing Mobile',\n    flex: 1\n  }\n];\n\n\nexport const lastFiveCallData = [\n  // {\n  //   // renderCell: rowData => (\n  //   //   <Link to={`/dash360/admin/agentlastfive/${rowData.row.InvoiceNumber}`}>\n  //   //     {rowData.row.InvoiceNumber}\n  //   //   </Link>\n  //   // ),\n  //   headerName: 'Unique ID',\n  //   field: 'asterixUniqueID',\n  //   flex: 1\n  // },\n\n  {\n    field: 'CallerName',\n    headerName: 'CallerName',\n    flex: 1\n  },\n  {\n    field: 'type',\n    headerName: 'Type',\n    flex: 1\n  },\n  \n  {\n    field: 'created',\n    headerName: 'Date',\n    flex: 1\n  }\n];\n\nexport const AgentCallColumns = [\n  {\n    // renderCell: rowData => (\n    //   <Link to={`/dash360/admin/agentlastfive/${rowData.row.InvoiceNumber}`}>\n    //     {rowData.row.InvoiceNumber}\n    //   </Link>\n    // ),\n    headerName: 'Unique ID',\n    field: 'asterixUniqueID',\n    flex: 1\n  },\n  // {\n  //   field: 'agentID',\n  //   headerName: 'Agent ID',\n  //   flex: 1\n  // },\n  {\n    field: 'type',\n    headerName: 'Type',\n    flex: 1\n  },\n  {\n    field: 'category',\n    headerName: 'Category',\n    flex: 1\n  },\n  {\n    field: 'subcategory',\n    headerName: 'Sub Category',\n    flex: 1\n  },\n  {\n    field: 'solution',\n    headerName: 'solution',\n    flex: 1\n  },\n  {\n    field: 'comments',\n    headerName: 'Comments',\n    flex: 1\n  },\n  {\n    field: 'created',\n    headerName: 'Date',\n    flex: 1\n  }\n];\nexport const DistributerCallColumns = [\n  {\n    // renderCell: rowData => (\n    //   <Link to={`/dash360/admin/agentlastfive/${rowData.row.InvoiceNumber}`}>\n    //     {rowData.row.InvoiceNumber}\n    //   </Link>\n    // ),\n    headerName: 'Unique ID',\n    field: 'asterixUniqueID',\n    flex: 1\n  },\n  // {\n  //   field: 'agentID',\n  //   headerName: 'Agent ID',\n  //   flex: 1\n  // },\n  {\n    field: 'type',\n    headerName: 'Type',\n    flex: 1\n  },\n  {\n    field: 'category',\n    headerName: 'Category',\n    flex: 1\n  },\n  {\n    field: 'subcategory',\n    headerName: 'Sub Category',\n    flex: 1\n  },\n  {\n    field: 'solution',\n    headerName: 'solution',\n    flex: 1\n  },\n  {\n    field: 'comments',\n    headerName: 'Comments',\n    flex: 1\n  },\n  {\n    field: 'created',\n    headerName: 'Date',\n    flex: 1\n  }\n];\n\n\n","import { Alert } from '@material-ui/lab';\nimport React from 'react';\n\nexport default function CommonAlert({ variant, text, ...rest }) {\n  return (\n    <Alert severity={variant || 'error'} {...rest}>\n      {text || 'Something went wrong! Please try again'}\n    </Alert>\n  );\n}\n","import Axios from 'axios';\nimport {\n  GET_DEALER_INVOICES,\n  GET_DEALER_JOINING_DETAILS,\n  GET_DEALER_KYC,\n  GET_DEALER_ORDERS,\n  GET_DEALER_PROFILE\n} from 'src/modules/dashboard-360/utils/endpoints';\nconst u = 'http://106.51.86.75:3000';\nexport const getDealerDetails = distributorID => {\n  // console.log(\"distributorID\",distributorID)\n  Axios.get(u + GET_DEALER_PROFILE, {\n    params: { distributorID },\n    headers: { \"Access-Control-Allow-Origin\": \"*\" }\n  });\n}\nexport const getDealerJoiningDetails = distributorID =>\n  Axios.get(u + GET_DEALER_JOINING_DETAILS, {\n    params: { distributorID },\n    headers: { \"Access-Control-Allow-Origin\": \"*\" }\n  });\n\nexport const getDealerOrderDetails = distributorID =>\n  Axios.get(u + GET_DEALER_ORDERS, {\n    params: { distributorID },\n    headers: { \"Access-Control-Allow-Origin\": \"*\" }\n  });\n\nexport const getSingleOrderDetails = orderID =>\n  Axios.get(u + GET_DEALER_ORDERS, {\n    params: { orderID },\n    headers: { \"Access-Control-Allow-Origin\": \"*\" }\n  });\n\nexport const getDealerInvoiceDetails = distributorID =>\n  Axios.get(u + GET_DEALER_INVOICES, {\n    params: { distributorID },\n    headers: { \"Access-Control-Allow-Origin\": \"*\" }\n  });\n\nexport const getSingleInvoiceDetails = orderID =>\n  Axios.get(u + GET_DEALER_ORDERS, {\n    params: { orderID },\n    headers: { \"Access-Control-Allow-Origin\": \"*\" }\n  });\n\nexport const getDealerKYCDetails = distributorID =>\n  Axios.get(u + GET_DEALER_KYC, {\n    params: { distributorID },\n    headers: { \"Access-Control-Allow-Origin\": \"*\" }\n  });\n\nexport default distributorID => [\n  getDealerDetails(distributorID),\n  getDealerJoiningDetails(distributorID),\n  getDealerOrderDetails(distributorID),\n  getDealerInvoiceDetails(distributorID),\n  getDealerKYCDetails(distributorID)\n];\n","import React from 'react';\nimport {\n    JsonToCsv,\n  \n} from 'react-json-csv';\n\nexport default function DownloadReport({ DownloadData }) {\n  \n    var filename = 'Download'\n    var fields = {\n        \"no data\": \"no data\"\n    }\n    var style = {\n        padding: \"5px\"\n    }\n    var data = [{\n        \"no data\": \"\"\n    }]\n    var text = \"Download\";\n    if (DownloadData.length) {\n\n        var result = Object.keys(DownloadData[0])\n        var header = {};\n        for (var i = 0; i < result.length; i += 1) {\n            header[result[i]] = result[i];\n        }\n        filename = 'Download'\n        fields = header\n        style = {\n            padding: \"5px\"\n        }\n        data = DownloadData\n        text = \"Download\"\n\n\n    }\n    else {\n        filename = 'Download'\n        fields = {\n            \"no data\": \"\"\n        }\n        style = {\n            padding: \"5px\"\n        }\n        data = [{\n            \"no data\": \"no data\"\n        }]\n        text = \"Download\"\n    }\n    return (\n        <div>\n            {DownloadData.length ? <JsonToCsv\n                data={data}\n                filename={filename}\n                fields={fields}\n                style={style}\n                text={text}\n            /> : <></>}\n        </div>\n\n    );\n}\n","import { DataGrid } from '@material-ui/data-grid';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { setDistributorInvoices } from 'src/modules/dashboard-360/redux/action';\nimport { invoicesColumns } from 'src/modules/dashboard-360/utils/columns-config';\nimport PropTypes from 'prop-types';\nimport CommonAlert from 'src/components/CommonAlert';\nimport MainLoader from 'src/components/MainLoader';\nimport { Box, makeStyles, Typography } from '@material-ui/core';\nimport {\n  getDealerInvoiceDetails,\n  getSingleInvoiceDetails\n} from '../../DashboardView/apiCalls';\nimport CustomBreadcrumbs from 'src/components/CustomBreadcrumbs';\nimport DownloadReport from '../../DashboardView/DownloadReport';\n\nconst style = makeStyles(() => ({\n  dgContainer: {\n    maxHeight: 628,\n    paddingLeft: \"16px\",\npaddingRight: \"16px\",\n  }\n}));\nfunction Invoices({\n  distributorInvoices,\n  setDistributorInvoicesAction,\n  ...props\n}) {\n  const classes = style();\n  const [showLoader, setShowLoader] = useState(true);\n  const {\n    match: {\n      params: { orderId }\n    }\n  } = props;\n\n  const [invoiceDetails, setSingleInvoiceDetails] = useState(null);\n\n  const orderIdPrev = useRef(orderId);\n\n  useEffect(() => {\n    \n    if (!distributorInvoices || orderIdPrev !== orderId) {\n     \n      (async function getDetails() {\n        try {\n          const res = await (orderId\n            ? getSingleInvoiceDetails(orderId)\n            : getDealerInvoiceDetails(1001));\n          if (!orderId) {\n            setDistributorInvoicesAction(res.data.data);\n          } else {\n            setSingleInvoiceDetails(res.data.data);\n          }\n        } catch (error) {\n        } finally {\n          setShowLoader(false);\n        }\n      })();\n    }\n  }, [orderId]);\n  const [page, setPage] = useState(1);\n  return distributorInvoices ? (\n    // <Card>\n    <div className={classes.dgContainer}>\n      <Box>\n        <CustomBreadcrumbs />\n      </Box>\n      <Box padding=\"1rem 0.5rem\">\n        <Typography variant=\"h6\" component=\"h4\">\n          All Invoices\n        </Typography>\n      </Box>\n      {distributorInvoices.length?<DownloadReport\n      DownloadData={distributorInvoices}\n      \n      />:<></>}\n      <DataGrid\n        page={page}\n        onPageChange={params => {\n          setPage(params.page);\n        }}\n        pageSize={10}\n        rowsPerPageOptions={[5, 10, 20]}\n        pagination\n        autoHeight\n        columns={invoicesColumns}\n        rows={distributorInvoices.map(order => ({\n          ...order,\n          id: order.InvoiceNumber\n        }))}\n      />\n    </div>\n  ) : // </Card>\n  showLoader ? (\n    <MainLoader />\n  ) : (\n    <CommonAlert style={{ margin: 20 }} />\n  );\n}\n\nInvoices.propTypes = {\n  distributorInvoices: PropTypes.arrayOf(PropTypes.object),\n  setDistributorInvoicesAction: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  distributorInvoices: state.distributorInvoices\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setDistributorInvoicesAction: invoices =>\n    dispatch(setDistributorInvoices(invoices))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Invoices);\n","import { DataGrid } from '@material-ui/data-grid';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { setDistributorOrders } from 'src/modules/dashboard-360/redux/action';\nimport { orderColumns } from 'src/modules/dashboard-360/utils/columns-config';\nimport PropTypes from 'prop-types';\nimport CommonAlert from 'src/components/CommonAlert';\nimport MainLoader from 'src/components/MainLoader';\nimport { Box, makeStyles, Typography } from '@material-ui/core';\nimport {\n  getDealerOrderDetails,\n  getSingleOrderDetails\n} from '../../DashboardView/apiCalls';\nimport CustomBreadcrumbs from 'src/components/CustomBreadcrumbs';\nimport DownloadReport from '../../DashboardView/DownloadReport';\n\nconst style = makeStyles(() => ({\n  dgContainer: {\n    maxHeight: 628,\n    maxWidth: '100%',\n    paddingLeft: \"16px\",\n    paddingRight: \"16px\",\n  }\n}));\nfunction Orders({ distributorOrders, setDistributorOrdersAction, ...props }) {\n  const classes = style();\n  const [showLoader, setShowLoader] = useState(true);\n  const {\n    match: {\n      params: { orderId }\n    }\n  } = props;\n\n  const [orderDetails, setSingleOrderDetails] = useState(null);\n\n  const orderIdPrev = useRef(orderId);\n\n  useEffect(() => {\n    if (!distributorOrders || orderIdPrev !== orderId) {\n      (async function getDetails() {\n        try {\n          const res = await (orderId\n            ? getSingleOrderDetails(orderId)\n            : getDealerOrderDetails(1001));\n          if (!orderId) {\n            setDistributorOrdersAction(res.data.data);\n          } else {\n            setSingleOrderDetails(res.data.data);\n          }\n        } catch (error) {\n        } finally {\n          setShowLoader(false);\n        }\n      })();\n    }\n  }, [orderId]);\n  const [page, setPage] = useState(1);\n  return distributorOrders ? (\n    // <Card>\n    <div className={classes.dgContainer}>\n      <CustomBreadcrumbs />\n      <Box padding=\"1rem 0.5rem\">\n        <Typography variant=\"h6\" component=\"h4\">\n          All Orders\n        </Typography>\n      </Box>\n      <DownloadReport\n        DownloadData={distributorOrders}\n\n      />\n\n      <DataGrid\n        page={page}\n        onPageChange={params => {\n          setPage(params.page);\n        }}\n        pageSize={10}\n        rowsPerPageOptions={[5, 10, 20]}\n        pagination\n        autoHeight\n        columns={orderColumns}\n        rows={distributorOrders.map(order => ({\n          ...order,\n          id: order.OrderNumber\n        }))}\n      />\n\n    </div>\n  ) : // </Card>\n    showLoader ? (\n      <MainLoader />\n    ) : (\n        <CommonAlert style={{ margin: 20 }} />\n      );\n}\n\nOrders.propTypes = {\n  distributorOrders: PropTypes.arrayOf(PropTypes.object),\n  setDistributorOrdersAction: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  distributorOrders: state.distributorOrders\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setDistributorOrdersAction: orders => dispatch(setDistributorOrders(orders))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);\n","import {\n    Accordion,\n    AccordionSummary,\n    AccordionDetails,\n    Typography\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useState } from 'react';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles(theme => ({\n    maxW50: {\n        maxWidth: '50%',\n        width: '50%'\n    },\n    customLink: {\n        '&:hover': {\n            cursor: 'pointer'\n        }\n    },\n    chipPrimary: {\n        backgroundColor: theme.palette.success.light\n    },\n    rootChip: {\n        color: theme.palette.common.white\n    },\n    chipWarning: {\n        backgroundColor: theme.palette.warning.light\n    },\n    mt1: {\n        marginTop: '0.25rem'\n    },\n    container1: {\n        position: 'relative',\n        '&::after': {\n            content: 'no-open-quote',\n            borderRight: '1px solid rgba(0,0,0,0.2)',\n            height: '60%',\n            position: 'absolute',\n            right: 0,\n            top: '50%',\n            bottom: '50%',\n            transform: 'translateY(-50%)'\n        }\n    },\n    profileIcon: {\n        right: 5\n    },\n    dialog: {\n        minWidth: 400\n    }\n}));\n\nexport default function FAQ({ }) {\n    const classes = useStyles();\n\n\n    return (\n        <div>\n            <Accordion>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                >\n                    <Typography className={classes.heading}>\n                        FAQ Sample 1\n                  </Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <Typography>Details</Typography>\n                </AccordionDetails>\n            </Accordion>\n            <Accordion>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                >\n                    <Typography className={classes.heading}>\n                    FAQ Sample 2\n                  </Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <Typography>Details</Typography>\n                </AccordionDetails>\n            </Accordion>\n            <Accordion>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                >\n                    <Typography className={classes.heading}>\n                    FAQ Sample 3\n                  </Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    <Typography>Details</Typography>\n                </AccordionDetails>\n            </Accordion>\n        </div>\n    );\n}\n","import React, { forwardRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nconst Page = forwardRef(({\n  children,\n  title = '',\n  ...rest\n}, ref) => {\n  return (\n    <div\n      ref={ref}\n      {...rest}\n    >\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport PropTypes from 'prop-types';\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(() => ({\n  textTransformNone: {\n    textTransform: 'none',\n    minWidth: 'fit-content'\n  }\n}));\n\nexport default function CustomTabs({\n  tabNames,\n  setCurrent,\n  children,\n  ...props\n}) {\n  const [value, setValue] = React.useState(0);\n\n  const styles = useStyles();\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    if (setCurrent) {\n      setCurrent(newValue);\n    }\n  };\n\n  function getTabs() {\n    return tabNames.map((tab, index) => (\n      <Tab\n        label={tab}\n        key={`tab-${index}`}\n        {...a11yProps(0)}\n        className={`${styles.textTransformNone} `}\n      />\n    ));\n  }\n\n  return (\n    <Paper square>\n      <Tabs value={value} onChange={handleChange} {...props}>\n        {getTabs()}\n      </Tabs>\n    </Paper>\n  );\n}\n\nCustomTabs.propTypes = {\n  tabNames: PropTypes.array,\n  setCurrent: PropTypes.func,\n  children: PropTypes.node\n};\n","import React from 'react';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Card,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport { Link } from 'react-router-dom';\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  linkContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    fontWeight: 'bold'\n  }\n}));\n\nconst BasicTable = ({\n  columns,\n  className,\n  records,\n  redirectLink,\n  redirectLabel,\n  setRootData,\n  setdealerDetails,\n  ...rest\n}) => {\n  const classes = useStyles();\n  function showthedata(row){\n    console.log('showthedata', row);\n    setdealerDetails(row)\n\n    localStorage.setItem('L1ID',row.asterixUniqueID)\n    // setRootData([[],[{\n    //    callNumber:row.callerNumber,\n    //      callerName:row.CallerName\n    //    }],[],[],[]])\n    // setCallerDetails({\n    //   callNumber:row.callerNumber,\n    //   callerName:row.CallerName\n    // })\n    // props.setdealerDetails({\n    //   callNumber:row.callerNumber,\n    //   callerName:row.CallerName\n    // })\n    \n    // alert('data')\n  }\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <Divider />\n      <PerfectScrollbar>\n        <Box width={'100%'}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {columns.map((col, index) => (\n                  <TableCell key={col.field || index}>\n                    {col.headerName}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {records?.map((record, index) => (\n                <TableRow hover key={record.id || index}  onClick={( ) => showthedata(record)}>\n                  {columns.map((col, index2) => (\n                    <TableCell key={`cell-${index}-${index2}`}>\n                      {col.renderCell\n                        ? col.renderCell({ row: record })\n                        : record[col.field]}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      {redirectLink && (\n        <Box display=\"flex\" justifyContent=\"flex-end\" p={2} alignItems=\"center\">\n          <Link to={redirectLink} className={classes.linkContainer}>\n            {redirectLabel}\n            <ArrowRightIcon />\n          </Link>\n        </Box>\n      )}\n    </Card>\n  );\n};\n\nBasicTable.propTypes = {\n  className: PropTypes.string,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      field: PropTypes.string,\n      headerName: PropTypes.string\n    })\n  ),\n  records: PropTypes.arrayOf(PropTypes.any),\n  redirectLink: PropTypes.string,\n  redirectLabel: PropTypes.string\n};\n\nexport default BasicTable;\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Grid,\n  Tooltip,\n  Typography,\n  CardHeader,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport CallIcon from '@material-ui/icons/Call';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { getAddressFromObj } from '../../utils/util-functions';\nimport { SOCKETENDPOINT2 } from '../../../dashboard-360/utils/endpoints'\n\nconst useStyles = makeStyles(theme => ({\n  maxW50: {\n    maxWidth: '50%',\n    width: '50%'\n  },\n  customLink: {\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n  chipPrimary: {\n    backgroundColor: theme.palette.success.light\n  },\n  rootChip: {\n    color: theme.palette.common.white\n  },\n  chipWarning: {\n    backgroundColor: theme.palette.warning.light\n  },\n  mt1: {\n    marginTop: '0.25rem'\n  },\n  container1: {\n    position: 'relative',\n    '&::after': {\n      content: 'no-open-quote',\n      borderRight: '1px solid rgba(0,0,0,0.2)',\n      height: '60%',\n      position: 'absolute',\n      right: 0,\n      top: '50%',\n      bottom: '50%',\n      transform: 'translateY(-50%)'\n    }\n  },\n  profileIcon: {\n    right: 5\n  },\n  dialog: {\n    minWidth: 400\n  }\n}));\n\nexport default function DealerCard(props) {\n  console.log('dealerDetails', props);\n  const get = function (obj, key) {\n    return key.split(\".\").reduce(function (o, x) {\n      return (typeof o == \"undefined\" || o === null) ? o : o[x];\n    }, obj);\n  }\n  const classes = useStyles();\n  const [state, setState] = useState(props)\n  const [details, setdetails] = useState({\n    \"CallerName\": \"\",\n    \"agentExtension\": \"\",\n    \"agentID\": \"\",\n    \"agenttype\": \"\",\n    \"asterixUniqueID\": \"\",\n    \"callType\": \"\",\n    \"callerNumber\": \"\",\n    \"callerapplication\": \"\",\n    \"campaignID\": \"\",\n    \"category\": \"\",\n    \"comments\": \"\",\n    \"connectivitytype\": \"\",\n    \"created\": \"\",\n    \"devicetype\": \"\",\n    \"distributerID\": \"\",\n    \"distributerName\": \"\",\n    \"enable\": \"\",\n    \"issuedescription\": \"\",\n    \"issuetype\": \"\",\n    \"ostype\": \"\",\n    \"rid\": \"\",\n    \"solution\": \"\",\n    \"speedtype\": \"\",\n    \"status\": \"\",\n    \"subcategory\": \"\",\n    \"subcategoryitem\": \"\",\n    \"tickettype\": \"\",\n    \"type\": \"\"\n  })\n  if ('dealerDetails' in props) {\n    console.log('props me hai', props.dealerDetails)\n    var data = props.dealerDetails;\n    // if(Object.keys(data).length !== 0){\n    //   console.log('clicked iteam', data[0])\n    // setdetails(data)\n    // setState(data)\n    // // localStorage.setItem('callNumber', data[0].callNumber)\n    // // localStorage.setItem('callerName', data[0].callerName)\n    // }\n  } else {\n    console.log('props me nahi hai', props)\n  }\n\n  const [showFullDetailsModal, setShowFullDetailsModal] = useState(false);\n  const SOCKETENDPOINT = SOCKETENDPOINT2;\n  const getIconColor = () => {\n    return 'primary';\n  };\n\n  function makeCall(Number) {\n    console.log('make call', Number)\n    Number = Number.substr(Number.length - 10);\n    if (Number.length === 10) {\n      const axios = require('axios');\n      Number = Number.substring(1);\n      console.log('make call', Number)\n      const config = {\n        method: 'get',\n        // eslint-disable-next-line prefer-template\n        url:\n          SOCKETENDPOINT +\n          'ami/actions/orginatecall?sipAgentID=Local/5' +\n          localStorage.getItem('AgentSIPID') +\n          '@from-internal&NumbertobeCalled=5' + Number\n        ,\n        headers: {}\n      };\n      axios(config)\n        .then(response => {\n          console.log(JSON.stringify(response.data));\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    } else {\n      console.log('Invalide number');\n    }\n  }\n  console.log('details', get(props, 'dealerDetails.CallerName'))\n  console.log('state', state)\n  return (\n    <Card>\n\n      <CardContent>\n\n        <Grid container justify=\"center\" className=\"position-relative\">\n          <Tooltip\n            title=\"View More Details\"\n            className={`position-absolute ${classes.profileIcon} `}\n          >\n            <AccountCircleIcon\n              color=\"primary\"\n              style={{ cursor: 'pointer' }}\n              onClick={() => setShowFullDetailsModal(true)}\n            />\n          </Tooltip>\n          {\n            localStorage.getItem('callDispositionStatus') === 'Disposed' &&\n              localStorage.getItem('callStatus') === 'disconnected' &&\n              localStorage.getItem('breakStatus') === 'OUT' || localStorage.getItem('breakStatus') === 'NA' ? (\n              <CallIcon onClick={() => makeCall(get(props, 'dealerDetails.callerNumber'))} />\n\n            ) : null}\n          {/* <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z\"/></svg> */}\n          <Box>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\" align=\"center\">\n              {/* {display_name} */}\n              {/* {localStorage.getItem('callerName')} */}\n           Caller Name:  {get(props, 'dealerDetails.CallerName')},\n           {/* Caller Application:  { get(props, 'dealerDetails.callerapplication') }\n           Device Type:  { get(props, 'dealerDetails.devicetype') }        \n           Issue Type:  { get(props, 'dealerDetails.issuetype') },            \n           OS Type:  { get(props, 'dealerDetails.ostype') },               \n           Internet Connection Type:{ get(props, 'dealerDetails.connectivitytype') },\n           Internet Speed:  { get(props, 'dealerDetails.speedtype') } */}\n\n            </Typography>\n\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"p\"\n              align=\"center\"\n            >\n              {/* Caller Application:  { get(props, 'dealerDetails.callerapplication') } */}\n              {/* {email_id} */}\n              {/* v.singh2210@gmail.com */}\n              <br />\n              {/* {distributor_rank} */}\n              <br />\n              {/* Member From -  */}\n            </Typography>\n            {/* <Box style={{ marginTop: '0.5rem' }}>\n              <Tooltip title=\"Verified\">\n                <Chip\n                  color=\"primary\"\n                  label=\"Aadhar\"\n                  className={`${classes.chipPrimary} ${classes.rootChip} `}\n                />\n              </Tooltip>\n              &nbsp;\n              <Tooltip title=\"Verification Pending\">\n                <Chip\n                  color=\"secondary\"\n                  label=\"Cheque book\"\n                  className={`${classes.chipWarning} ${classes.rootChip} `}\n                />\n              </Tooltip>\n              &nbsp;\n              <Tooltip title=\"Not Verified\">\n                <Chip\n                  color=\"secondary\"\n                  label=\"PAN\"\n                  className={` ${classes.rootChip} `}\n                />\n              </Tooltip>\n            </Box> */}\n          </Box>\n          {/* <Grid container spacing={4} className={classes.mt1}>\n            <Grid item xs={6} className={classes.container1}>\n              <Grid container direction=\"column\" alignItems=\"flex-end\">\n                <Typography gutterBottom variant=\"h5\" align=\"center\">\n                  Last Order\n                </Typography>\n                <Link to=\"/dash360/orders/1234\">#1234</Link>\n              </Grid>\n            </Grid>\n            <Grid item xs={6}>\n              <Grid container direction=\"column\" alignItems=\"flex-start\">\n                <Typography gutterBottom variant=\"h5\" align=\"center\">\n                  Last Interaction\n                </Typography>\n                <Link to=\"/dash360/orders/1234\">#1234</Link>\n              </Grid>\n            </Grid>\n          </Grid> */}\n        </Grid>\n      </CardContent>\n\n\n\n\n      {showFullDetailsModal && (\n        <Dialog\n          open\n          onClose={() => setShowFullDetailsModal(false)}\n          classes={{ paper: classes.dialog }}\n        >\n          <DialogTitle>Student L1 Disposition Details</DialogTitle>\n          <Divider light />\n          <DialogContent>\n            {/* <Typography variant=\"h6\"> */}\n            {/* {display_name} */}\n            {/* <Tooltip title='active'>\n                <CheckCircleIcon\n                  color={getIconColor()}\n                  style={{ marginBottom: -3, marginLeft: 5 }}\n                />\n              </Tooltip>\n            </Typography> */}\n            {/* <Typography color=\"textSecondary\">id</Typography> */}\n            {/* <Typography color=\"textSecondary\" display=\"inline\" variant=\"p\">\n              Distributor Name:\n            </Typography>\n            <Typography color=\"textSecondary\" display=\"inline\">\n              {display_name}\n            </Typography> */}\n            <br />\n            <Grid container wrap>\n              <Grid container item xs={12} wrap>\n                <Box style={{ flexBasis: '100%' }} marginTop={2} />\n                <Grid item container>\n                  <Grid item xs={5}>\n                    <Typography variant=\"h5\"> Caller Application</Typography>\n                  </Grid>\n                  <Grid item xs={7}>\n                    <Typography variant=\"h5\" color=\"textSecondary\">\n                      {get(props, 'dealerDetails.callerapplication')}\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <Grid item container>\n                  <Grid item xs={5}>\n                    <Typography variant=\"h5\"> Device Type:</Typography>\n                  </Grid>\n                  <Grid item xs={7}>\n                    <Typography variant=\"h5\" color=\"textSecondary\">\n                      {get(props, 'dealerDetails.devicetype')}\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <Grid item container>\n                  <Grid item xs={5}>\n                    <Typography variant=\"h5\">Comments:</Typography>\n                  </Grid>\n\n                </Grid>                <Grid item container>\n                  <Grid item xs={5}>\n                    <Typography variant=\"h5\">  OS Type:</Typography>\n                  </Grid>\n                  <Grid item xs={7}>\n                    <Typography variant=\"h5\" color=\"textSecondary\">\n                      {get(props, 'dealerDetails.ostype')},\n                    </Typography>\n                  </Grid>\n                </Grid>                <Grid item container>\n                  <Grid item xs={5}>\n                    <Typography variant=\"h5\">  Internet Connection Type:</Typography>\n                  </Grid>\n                  <Grid item xs={7}>\n                    <Typography variant=\"h5\" color=\"textSecondary\">\n                      {get(props, 'dealerDetails.connectivitytype')},\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <Grid item container>\n                  <Grid item xs={5}>\n                    <Typography variant=\"h5\"> Speed Type:</Typography>\n                  </Grid>\n                  <Grid item xs={7}>\n                    <Typography variant=\"h5\" color=\"textSecondary\">\n                      {get(props, 'dealerDetails.speedtype')}\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <Grid item container>\n                  <Grid item xs={5}>\n                    <Typography variant=\"h5\"> Issue Type:</Typography>\n                  </Grid>\n                  <Grid item xs={7}>\n                    <Typography variant=\"h5\" color=\"textSecondary\">\n                      {get(props, 'dealerDetails.Category')}\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <Grid item container>\n                  <Grid item xs={5}>\n                    <Typography variant=\"h5\"> Issue Description:</Typography>\n                  </Grid>\n                  <Grid item xs={7}>\n                    <Typography variant=\"h5\" color=\"textSecondary\">\n                      {get(props, 'dealerDetails.issuedescription')}\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <Grid item container>\n                  <Grid item xs={5}>\n                    <Typography variant=\"h5\">Type 1:</Typography>\n                  </Grid>\n                  <Grid item xs={7}>\n                    <Typography variant=\"h5\" color=\"textSecondary\">\n                      {get(props, 'dealerDetails.subcategory')}\n                    </Typography>\n                  </Grid>\n                </Grid>\n\n                <Grid item container>\n                  <Grid item xs={5}>\n                    <Typography variant=\"h5\">OS Type:</Typography>\n                  </Grid>\n                  <Grid item xs={7}>\n                    <Typography variant=\"h5\" color=\"textSecondary\">\n                      {get(props, 'dealerDetails.comments')},\n                    </Typography>\n                  </Grid>\n                </Grid>\n\n\n\n\n\n                {/* <Grid item container>\n                  <Grid item xs={5}>\n                    <Typography variant=\"h5\">Phone Number:</Typography>\n                  </Grid>\n                  <Grid item xs={7}>\n                    <Typography variant=\"h5\" color=\"textSecondary\">\n                      \n                    </Typography>\n                  </Grid>\n                </Grid> */}\n                {/* <Grid item container>\n                  <Grid item xs={5}>\n                    <Typography variant=\"h5\">Billing Address:</Typography>\n                  </Grid>\n                  <Grid item xs={7}>\n                    <Typography variant=\"h5\" color=\"textSecondary\">\n               \n                    </Typography>\n                  </Grid>\n                </Grid> */}\n              </Grid>\n              <Box style={{ flexBasis: '100%' }}>\n                <br />\n              </Box>\n              <Grid container item xs={12}>\n                {/* <Box style={{ flexBasis: '100%' }}>\n                  <Typography variant=\"h4\">Personal Details</Typography>\n                </Box>\n                <Box style={{ flexBasis: '100%' }} marginTop={2} />\n                <Grid item container>\n                  <Grid item xs={5}>\n                    <Typography variant=\"h5\">Caller Name:</Typography>\n                  </Grid>\n                  <Grid item xs={7}>\n                    <Typography variant=\"h5\" color=\"textSecondary\">\n                      Vikram Singh\n                    </Typography>\n                  </Grid>\n                </Grid> */}\n                {/* <Grid item container>\n                  <Grid item xs={5}>\n                    <Typography variant=\"h5\">Aadhar Number:</Typography>\n                  </Grid>\n                  <Grid item xs={7}>\n                    <Typography variant=\"h5\" color=\"textSecondary\">\n                   \n                    </Typography>\n                  </Grid>\n                </Grid> */}\n                {/* <Grid item container>\n                  <Grid item xs={5}>\n                    <Typography variant=\"h5\">PAN Number:</Typography>\n                  </Grid>\n                  <Grid item xs={7}>\n                    <Typography variant=\"h5\" color=\"textSecondary\">\n                      {/* {pan_no} */}\n                {/* </Typography>\n                  </Grid>\n                </Grid> */}\n                {/* <Grid item container>\n                  <Grid item xs={5}>\n                    <Typography variant=\"h5\">Date Of Birth:</Typography>\n                  </Grid>\n                  <Grid item xs={7}>\n                    <Typography variant=\"h5\" color=\"textSecondary\">\n                     \n                    </Typography>\n                  </Grid>\n                </Grid>  */}\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={() => setShowFullDetailsModal(false)}\n            >\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n\n\n    </Card>\n  );\n}\n","import { Field, Form, Formik } from 'formik';\nimport React, { useRef, useState, useEffect } from 'react';\nimport { TextField, RadioGroup } from 'formik-material-ui';\n\nimport {\n  UPDATE_CALL_STATUS,\n  UPDATE_CURRENT_STATUS,\n  GET_INTERACTION_BY_DISTRIBUTOR_ID,\n  GET_INTERACTION_BY_CALLER_NUMBER,\n  SOCKETENDPOINT1, SOCKETENDPOINT2, SOCKETENDPOINT4, SOCKETENDPOINT3, AGENT_SERVICE_URL\n} from 'src/modules/dashboard-360/utils/endpoints';\nimport {\n  Button,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  makeStyles,\n  Radio\n} from '@material-ui/core';\nimport * as yup from 'yup';\n// import config from '../../../ticketing/views/config.json';g\nimport { Autocomplete } from '@material-ui/lab';\nimport { useSelector } from 'react-redux'\n// import { AlternateEmailTwoTone } from '@material-ui/icons';\nconst useStyle = makeStyles(() => ({\n  fieldContainer: {\n    width: '100%'\n  }\n}));\nexport default function DispositionForm(props) {\n  const config = 'http://192.168.3.45:8083/';\n  console.log('props.DLF', props.DLF);\n  const { DLF } = props;\n  let APIENDPOINT = SOCKETENDPOINT2;\n  /// ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n  /// addToQueue start //////////////////////////////////////////////////////////////////////////////////////////\n  /// ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  // function addToQueue(agentId, queue, user_Details) {\n  //   const axios = require('axios');\n\n  //   var APIENDPOINT = '';\n  //   console.log('userDetails sdsdfgsdfgsdf', user_Details)\n  //   if (user_Details.Server === 'server1') {\n  //     APIENDPOINT = SOCKETENDPOINT1\n  //   }\n  //   if (user_Details.Server === 'server2') {\n  //     APIENDPOINT = SOCKETENDPOINT2\n  //   }\n  //   if (user_Details.Server === 'server3') {\n  //     APIENDPOINT = SOCKETENDPOINT3\n  //   }\n  //   if (user_Details.Server === 'server4') {\n  //     APIENDPOINT = SOCKETENDPOINT4\n  //   }\n\n  //   const config = {\n  //     method: 'get',\n  //     url:\n  //       `${APIENDPOINT}/ami/actions/addq?Interface=${agentId}&Queue=${queue}`,\n  //     headers: {\n  //       'Content-Type': 'application/json'\n  //     }\n  //   };\n\n  //   axios(config)\n  //     .then((response) => { })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n\n\n\n  // }\n  /// ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n  /// addToQueue end //////////////////////////////////////////////////////////////////////////////////////////\n  /// ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  /// ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n  /// addToQueue start //////////////////////////////////////////////////////////////////////////////////////////\n  /// ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  function addToQueue(agentId, queue, user_Details) {\n    const axios = require('axios');\n\n    var config1 = {\n      method: 'get',\n      url: 'http://106.51.86.75:42004/crm/serveragentcounts',\n      headers: {}\n    };\n\n    axios(config1)\n      .then(function (response) {\n        console.log(JSON.stringify(response.data));\n\n        var data = response.data\n\n\n        var items = data.items[0];\n        delete items['_id'];\n        delete items['createdAt'];\n        delete items['updatedAt'];\n        delete items['__v'];\n\n        var data = [];\n        data.push(items.server1, items.server2, items.server3, items.server4, items.server5)\n        data = data.sort((a, b) => parseFloat(a) - parseFloat(b));\n\n        function getKeyByValue(object, value) {\n          return Object.keys(object).find(key => object[key] === value);\n        }\n\n        console.log('data', data)\n        console.log(getKeyByValue(items, data[0]));\n        if (getKeyByValue(items, data[0]) === 'server1') {\n          APIENDPOINT = 'http://106.51.86.75:42001';\n        }\n        if (getKeyByValue(items, data[0]) === 'server2') {\n          APIENDPOINT = 'http://106.51.86.75:42002';\n        }\n        if (getKeyByValue(items, data[0]) === 'server3') {\n          APIENDPOINT = 'http://106.51.86.75:42003';\n        }\n        if (getKeyByValue(items, data[0]) === 'server4') {\n          APIENDPOINT = 'http://106.51.86.75:42005';\n        }\n        if (getKeyByValue(items, data[0]) === 'server5') {\n          APIENDPOINT = 'http://106.51.86.75:42009';\n          queue = 7003\n        }\n        const config = {\n          method: 'get',\n          url:\n            `${APIENDPOINT\n            }/ami/actions/addq?Interface=${agentId}&Queue=${queue\n            }`,\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        };\n\n        axios(config)\n          .then((response) => { })\n          .catch((error) => {\n            console.log(error);\n          });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n\n\n\n  }\n  /// ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n  /// addToQueue end //////////////////////////////////////////////////////////////////////////////////////////\n  /// ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n  /// removeFromQueue start //////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  function removeFromQueue(agentId, queue, user_Details) {\n    const axios = require('axios');\n    var APIENDPOINT = '';\n    console.log('userDetails sdsdfgsdfgsdf', user_Details)\n    // if (user_Details.Server === 'server1') {\n    //   APIENDPOINT = SOCKETENDPOINT1\n    // }\n    // if (user_Details.Server === 'server2') {\n    //   APIENDPOINT = SOCKETENDPOINT2\n    // }\n    // if (user_Details.Server === 'server3') {\n    //   APIENDPOINT = SOCKETENDPOINT3\n    // }\n    // if (user_Details.Server === 'server4') {\n    //   APIENDPOINT = SOCKETENDPOINT4\n    // }\n    console.log('remove', agentId);\n    const config1 = {\n      method: 'get',\n      url:\n        `${SOCKETENDPOINT1\n        }/ami/actions/rmq?Queue=${queue\n        }&Interface=${agentId}`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    axios(config1)\n      .then((response) => {\n\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n\n    const config2 = {\n      method: 'get',\n      url:\n        `${SOCKETENDPOINT2\n        }/ami/actions/rmq?Queue=${queue\n        }&Interface=${agentId}`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    axios(config2)\n      .then((response) => {\n\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n\n    const config3 = {\n      method: 'get',\n      url:\n        `${SOCKETENDPOINT3\n        }/ami/actions/rmq?Queue=${queue\n        }&Interface=${agentId}`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    axios(config3)\n      .then((response) => {\n\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n\n    const config4 = {\n      method: 'get',\n      url:\n        `${SOCKETENDPOINT4\n        }/ami/actions/rmq?Queue=${queue\n        }&Interface=${agentId}`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    axios(config4)\n      .then((response) => {\n\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  /// removeFromQueue end //////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n  const [initialValue, setInitialValue] = useState({\n\n    subcategory: '',\n    category: '',\n    comments: '',\n    type: '',\n    subcategoryitem: '',\n    enable: '',\n    issuetype: '',\n    devicetype: '',\n    connectivitytype: '',\n    speedtype: '',\n    ostype: '',\n    solution: '',\n    issuedescription: '',\n    CallerName: '',\n    callerapplication: '',\n    L1Name: '',\n    status: ''\n  });\n  function getDLF() {\n    const axios = require('axios');\n    const number = localStorage.getItem('callerNumber');\n    // number = number.substr(number.length -10);\n    console.log('number', number);\n    const data = '';\n    const config = {\n      method: 'get',\n      url:\n        `${GET_INTERACTION_BY_CALLER_NUMBER\n        + number\n        }`,\n      headers: {},\n      data\n    };\n\n    axios(config)\n      .then(async response => {\n        let DLFDATA = response.data;\n        DLFDATA = await DLFDATA.reverse();\n        console.log('DLFDATA INSIDE THE DIS FORM', DLFDATA);\n        if (DLFDATA.length && localStorage.getItem('Agenttype') === 'L2') {\n          console.log('DLFDATA INSIDE THE dispostionFormData', DLFDATA[0].dispostionFormData);\n          setInitialValue(DLFDATA[0].dispostionFormData);\n        }\n        // setDLF(DLFDATA);\n      })\n\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  const devicetype = [\n    {\n      id: '1', value: 'Mobile',\n    },\n    {\n      id: '2', value: 'Laptop/ Desktop',\n    }\n  ];\n\n  const ostype = [\n    {\n      id: '1', value: 'Android',\n    },\n    {\n      id: '2', value: 'Win-7 / 8/10 '\n    },\n    {\n      id: '3', value: 'MAC / Linux,'\n    }\n  ];\n  const connectivitytype = [\n    {\n      id: '1', value: 'Hotspot',\n    },\n    {\n      id: '2', value: 'DataCard',\n    },\n    {\n      id: '3', value: 'Broadband',\n    }\n  ];\n  const issuetype = [\n\n  ];\n  const speedtype = [\n    {\n      id: '1', value: 'Less than 2 MBPS',\n    },\n    {\n      id: '2', value: 'More than 2 MBPS',\n    }\n  ];\n  const L1Name = [\n    {\n      id: '1', value: 'Chaitra',\n    },\n    {\n      id: '2', value: 'Priya',\n    },\n    {\n      id: '3', value: 'Suma',\n    },\n    {\n      id: '4', value: 'Latha',\n    },\n    {\n      id: '5', value: 'Sonu',\n    }\n  ];\n  const classes = useStyle();\n  const formRef = useRef({});\n  const agentServiceURL = `${AGENT_SERVICE_URL}/`;\n  const [category, setCategory] = useState({\n    value: 'Enquiry',\n    label: 'Enquiry'\n  });\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [ticketTypes, setTicketTypes] = useState([]);\n  const [ticketType, setTicketType] = useState({\n    ticketTypeId: '',\n    ticketType: ''\n  });\n  const [subCategories, setSubCategories] = useState([]);\n  const [subCategory, setSubCategory] = useState({\n    value: '',\n    label: ''\n  });\n  const [subCategoryItems, setSubCategoryItems] = useState([]);\n  const [subCategoryItem, setSubCategoryItem] = useState({\n    value: '',\n    label: ''\n  });\n  const [selected, setSelected] = useState(false);\n  const user_Details = useSelector(state => state.userData)\n  const url = 'http://192.168.3.45:7002';\n  const handleChange = (e, s) => {\n    // updateCallData(localStorage.getItem('callUniqueId'), {\n    //   type: formRef.current.values.type,\n    //   dispostionFormData: formRef.current.values\n    // });\n    // console.log(\"change\",e.target.defaultValue)\n    if (e.target.defaultValue === 'transfercall') {\n      setSelected(true);\n    } else {\n      setSelected(false);\n    }\n  };\n  useEffect(() => {\n    let unmounted = false;\n    getDLF();\n    // console.log('initialValue', initialValue)\n    // if (initialValue.category !== '') {\n    //   getSubCategories(initialValue.category);\n    // }\n    // if (initialValue.subcategory !== ''){\n    //   console.log(\"initialValue.subcategory\", initialValue.subcategory)\n    //   getSubCategoryItems(initialValue.category,initialValue.subcategory);\n    // }\n    async function getItems() {\n      const body = [{\n        id: '600bc52f997c4d29ff4e5609', category: 'Enquiry', active: true, createdAt: '2021-01-19T07:31:02.745Z', updatedAt: '2021-01-19T07:31:02.745Z', v: 0\n      }, {\n        id: '600bc578997c4d29ff4e560a', category: 'Complaints', active: true, createdAt: '2021-01-19T07:31:02.745Z', updatedAt: '2021-01-19T07:31:02.745Z', _v: 0\n      }];\n      if (!unmounted) {\n        body[0]\n          ? setCategory({\n            label: body[0].category,\n            value: body[0].id\n          })\n          : setCategory({});\n\n        setCategories(\n          body.map(({ id, category }) => ({\n            label: category,\n            value: id\n          }))\n        );\n        setLoading(false);\n      }\n    }\n    getItems();\n\n    return () => {\n      unmounted = true;\n    };\n  }, []);\n\n  useEffect(() => {\n\n  }, [initialValue]);\n\n  const getSubCategories = cat => {\n    console.log('value', cat);\n    let unmounted = false;\n    async function getItems() {\n      const InQuiry = [{\n        id: '600bc7a9997c4d29ff4e560b', categoryId: '600bc52f997c4d29ff4e5609', category: 'Enquiry', subCategory: 'Exam Schedule', active: true, createdAt: '2021-01-19T07:44:05.559Z', updatedAt: '2021-01-19T07:44:05.559Z', v: 0\n      }, {\n        _id: '600bc7b9997c4d29ff4e560c', categoryId: '600bc52f997c4d29ff4e5609', category: 'Enquiry', subCategory: 'SEB Link', active: true, createdAt: '2021-01-19T07:44:05.559Z', updatedAt: '2021-01-19T07:44:05.559Z', v: 0\n      }, {\n        _id: '600bcb58997c4d29ff4e560d', categoryId: '600bc52f997c4d29ff4e5609', category: 'Enquiry', subCategory: 'Browser Version', active: true, createdAt: '2021-01-19T07:44:05.559Z', updatedAt: '2021-01-19T07:44:05.559Z', v: 0\n      }, {\n        _id: '600bcb6e997c4d29ff4e560e', categoryId: '600bc52f997c4d29ff4e5609', category: 'Enquiry', subCategory: 'Mobile App Link', active: true, createdAt: '2021-01-19T07:44:05.559Z', updatedAt: '2021-01-19T07:44:05.559Z', v: 0\n      }, {\n        _id: '600bcb78997c4d29ff4e560f', categoryId: '600bc52f997c4d29ff4e5609', category: 'Enquiry', subCategory: 'Minimum System Requirements', active: true, createdAt: '2021-01-19T07:44:05.559Z', updatedAt: '2021-01-19T07:44:05.559Z', v: 0\n      }, {\n        _id: '600c7148f50bb21a5ea0919f', categoryId: '600bc52f997c4d29ff4e5609', category: 'Enquiry', subCategory: 'Internet Bandwidth Required', active: true, createdAt: '2021-01-19T07:44:05.559Z', updatedAt: '2021-01-19T07:44:05.559Z', _v: 0\n      }];\n      const Compln = [{\n        id: '600c738bf50bb21a5ea091a0', categoryId: '600bc578997c4d29ff4e560a', category: 'Complaints', subCategory: 'Hardware', active: true, createdAt: '2021-01-19T07:44:05.559Z', updatedAt: '2021-01-19T07:44:05.559Z', v: 0\n      }, {\n        _id: '600c73adf50bb21a5ea091a1', categoryId: '600bc578997c4d29ff4e560a', category: 'Complaints', subCategory: 'Software', active: true, createdAt: '2021-01-19T07:44:05.559Z', updatedAt: '2021-01-19T07:44:05.559Z', _v: 0\n      }];\n      // const response = await fetch(\n      //   url + '/level2/' + cat.value\n      // );\n      let body = [];\n      if (cat.value === '600bc52f997c4d29ff4e5609') {\n        body = InQuiry;\n      }\n      if (cat.value === '600bc578997c4d29ff4e560a') {\n        body = Compln;\n      }\n\n      if (!unmounted) {\n        setSubCategories(\n          body.map(({ id, subCategory }) => ({\n            label: subCategory,\n            value: id\n          }))\n        );\n\n        setLoading(false);\n      }\n    }\n    getItems();\n    return () => {\n      unmounted = true;\n    };\n  };\n  const getSubCategoryItems = (cat, sct) => {\n    let unmounted = false;\n    async function getItems() {\n      const HardWare = [{\n        id: '600c7421f50bb21a5ea091a2', categoryId: '600bc578997c4d29ff4e560a', category: 'Complaints', subCategoryId: '600c738bf50bb21a5ea091a0', subCategory: 'Hardware', subCategoryItem: 'Webcam Issue', active: true, createdAt: '2021-01-19T07:54:08.427Z', updatedAt: '2021-01-19T07:54:08.427Z', v: 0\n      }, {\n        _id: '600c74d5f50bb21a5ea091a3', categoryId: '600bc578997c4d29ff4e560a', category: 'Complaints', subCategoryId: '600c738bf50bb21a5ea091a0', subCategory: 'Hardware', subCategoryItem: 'Microphone Issue', active: true, createdAt: '2021-01-19T07:54:08.427Z', updatedAt: '2021-01-19T07:54:08.427Z', _v: 0\n      }];\n      const Software = [{\n        id: '600c74e0f50bb21a5ea091a4', categoryId: '600bc578997c4d29ff4e560a', category: 'Complaints', subCategoryId: '600c73adf50bb21a5ea091a1', subCategory: 'Software', subCategoryItem: 'SEB Installation Issue', active: true, createdAt: '2021-01-19T07:54:08.427Z', updatedAt: '2021-01-19T07:54:08.427Z', v: 0\n      }, {\n        _id: '600c74ebf50bb21a5ea091a5', categoryId: '600bc578997c4d29ff4e560a', category: 'Complaints', subCategoryId: '600c73adf50bb21a5ea091a1', subCategory: 'Software', subCategoryItem: 'App Issue', active: true, createdAt: '2021-01-19T07:54:08.427Z', updatedAt: '2021-01-19T07:54:08.427Z', v: 0\n      }, {\n        _id: '600c750df50bb21a5ea091a6', categoryId: '600bc578997c4d29ff4e560a', category: 'Complaints', subCategoryId: '600c73adf50bb21a5ea091a1', subCategory: 'Software', subCategoryItem: 'Browser Issue', active: true, createdAt: '2021-01-19T07:54:08.427Z', updatedAt: '2021-01-19T07:54:08.427Z', v: 0\n      }, {\n        _id: '600c7517f50bb21a5ea091a7', categoryId: '600bc578997c4d29ff4e560a', category: 'Complaints', subCategoryId: '600c73adf50bb21a5ea091a1', subCategory: 'Software', subCategoryItem: 'Login Error', active: true, createdAt: '2021-01-19T07:54:08.427Z', updatedAt: '2021-01-19T07:54:08.427Z', v: 0\n      }, {\n        _id: '600c7522f50bb21a5ea091a8', categoryId: '600bc578997c4d29ff4e560a', category: 'Complaints', subCategoryId: '600c73adf50bb21a5ea091a1', subCategory: 'Software', subCategoryItem: 'RP Initiation Failed', active: true, createdAt: '2021-01-19T07:54:08.427Z', updatedAt: '2021-01-19T07:54:08.427Z', _v: 0\n      }];\n      let data = [];\n      if (sct === '600bc7a9997c4d29ff4e560b') {\n        data = HardWare;\n      }\n      if (sct === '600c738bf50bb21a5ea091a0') {\n        data = Software;\n      }\n      //  alert(JSON.stringify(cat))\n      // const response = await fetch(\n      //   url + '/level3/' + cat + '/' + sct.value\n      // );\n      // const body = await response.json();\n\n      if (!unmounted) {\n        setSubCategoryItems(\n          data.map(({ id, subCategoryItem }) => ({\n            label: subCategoryItem,\n            value: id\n          }))\n        );\n\n        setLoading(false);\n\n        data[0]\n          ? setSubCategoryItem({\n            label: data[0].subCategoryItem,\n            value: data[0].id\n          })\n          : setSubCategoryItem({});\n      }\n    }\n    getItems();\n    return () => {\n      unmounted = true;\n    };\n  };\n  function updateCallData(uniqueid, dispostionData) {\n    const axios = require('axios');\n    const data = JSON.stringify(dispostionData);\n    console.log('updateCAllData', data, uniqueid);\n\n    const config = {\n      method: 'post',\n\n      url: UPDATE_CALL_STATUS + uniqueid,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data\n    };\n\n    axios(config)\n      .then(response => {\n        console.log('dispostionForm', JSON.stringify(response.data));\n        props.getALF();\n      })\n      .catch(error => {\n        console.log('dispostionFrom', error);\n      });\n  }\n\n  function updateAgentCallStatus(updateData) {\n    const axios = require('axios');\n    const data = {\n      agentCallStatus: updateData.callStatus,\n      agentCallEvent: updateData.callEvent,\n      agentCallUniqueId: updateData.callUniqueId,\n      agentCallType: updateData.callType,\n      agentCallDispositionStatus: updateData.callDispositionStatus,\n      callerNumber: updateData.callerNumber\n    };\n    const config = {\n\n      method: 'put',\n      url: UPDATE_CURRENT_STATUS + updateData.callStatusId,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data\n    };\n\n    axios(config)\n      .then((response) => {\n        console.log('update', JSON.stringify(response.data));\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n  function transfercall(Channel) {\n    const axios = require('axios');\n\n    const config = {\n      method: 'get',\n      url: `${SOCKETENDPOINT2}/ami/actions/atxfer?Channel=${Channel}&NumbertobeCalled=7002`,\n      headers: {}\n    };\n\n    axios(config)\n      .then((response) => {\n        console.log(JSON.stringify(response.data));\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n  function handleSubmit(e) {\n    console.log('formRefasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfs', formRef.current.values);\n\n    console.log('state', initialValue);\n    console.log('dispostion', {\n      // tickettype: formRef.current.values.tickettype.label,\n      category: formRef.current.values.category.label,\n      subcategory: formRef.current.values.subcategory.label,\n      subcategoryitem: formRef.current.values.subcategoryitem.label,\n      comments: formRef.current.values.comments,\n      type: formRef.current.values.type,\n\n    });\n\n    localStorage.setItem('callDispositionStatus', 'Disposed');\n    var serverPrefix = localStorage.getItem('callUniqueId');\n\n    // if (user_Details.Server === 'server1') {\n    //   serverPrefix = `325${localStorage.getItem('callUniqueId')}`\n    // }\n    // if (user_Details.Server === 'server2') {\n    //   serverPrefix = `331${localStorage.getItem('callUniqueId')}`\n    // }\n    // if (user_Details.Server === 'server3') {\n    //   serverPrefix = `332${localStorage.getItem('callUniqueId')}`\n    // }\n    // if (user_Details.Server === 'server4') {\n    //   serverPrefix = `334${localStorage.getItem('callUniqueId')}`\n    // }\n    if (localStorage.getItem('Agenttype') === 'L1') {\n      // if (user_Details.AgentQueueStatus === 'dynamic') {\n      //   removeFromQueue(`Local/5${localStorage.getItem('AgentSIPID')}@from-queue`, 7001, user_Details);\n      // }\n\n      if (user_Details.AgentQueueStatus === 'dynamic') {\n        addToQueue('Local/5' + localStorage.getItem('AgentSIPID') + '@from-queue\\n', 7001, user_Details)\n      }\n    }\n    if (localStorage.getItem('Agenttype') === 'L2') {\n      // if (user_Details.AgentQueueStatus === 'dynamic') {\n      //   removeFromQueue(`Local/3${localStorage.getItem('AgentSIPID')}@from-queue`, 7002, user_Details);\n      // }\n\n      if (user_Details.AgentQueueStatus === 'dynamic') {\n        addToQueue('Local/3' + localStorage.getItem('AgentSIPID') + '@from-queue\\n', 7001, user_Details)\n      }\n    }\n    // // props.removeFromQueue(props.AgentSipId, '7001');\n    // // props.addToQueue(props.agentSipID, '7001');\n    // // props.setCurrentCallDetails(localStorage.getItem(\"callUniqueId\"), localStorage.getItem(\"callType\"), localStorage.getItem(\"callStatus\"), localStorage.getItem(\"callEvent\"), localStorage.getItem(\"callDispositionStatus\"))\n    props.setCurrentCallDetails(\n      localStorage.getItem('callStatusId'),\n      localStorage.getItem('callUniqueId'),\n      localStorage.getItem('callType'),\n      localStorage.getItem('callStatus'),\n      localStorage.getItem('callEvent'),\n      localStorage.getItem('callDispositionStatus'),\n      localStorage.getItem('callerNumber'),\n      localStorage.getItem('breakStatus')\n    );\n    updateAgentCallStatus({\n      callStatusId: localStorage.getItem('callStatusId'),\n      callUniqueId: serverPrefix,\n      callType: localStorage.getItem('callType'),\n      callStatus: localStorage.getItem('callStatus'),\n      callEvent: localStorage.getItem('callEvent'),\n      callDispositionStatus: localStorage.getItem('callDispositionStatus'),\n      callerNumber: localStorage.getItem('callerNumber'),\n\n    });\n    if (localStorage.getItem('Agenttype') === 'L1') {\n      updateCallData(serverPrefix, {\n        category: formRef.current.values.category.label,\n        subcategory: formRef.current.values.subcategory.label,\n        subcategoryitem: formRef.current.values.subcategoryitem.label,\n        comments: formRef.current.values.comments,\n        type: formRef.current.values.type,\n        distributerID: localStorage.getItem('distributer_id'),\n        CallerName: formRef.current.values.CallerName,\n        callerapplication: formRef.current.values.callerapplication,\n        connectivitytype: formRef.current.values.connectivitytype.value,\n        devicetype: formRef.current.values.devicetype.value,\n        enable: `${formRef.current.values.enable}`,\n        issuedescription: formRef.current.values.issuedescription,\n        issuetype: formRef.current.values.issuetype,\n        ostype: formRef.current.values.ostype.value,\n        speedtype: formRef.current.values.speedtype.value,\n        status: formRef.current.values.status,\n        subcategoryitem: formRef.current.values.subcategoryitem.label,\n        type: formRef.current.values.type,\n        dispostionFormData: formRef.current.values,\n        anydeskid: formRef.current.values.anydeskid,\n        solution: formRef.current.values.solution,\n        L1ID: serverPrefix\n      });\n    }\n    if (localStorage.getItem('Agenttype') === 'L2') {\n      updateCallData(serverPrefix, {\n        category: formRef.current.values.category.label,\n        subcategory: formRef.current.values.subcategory.label,\n        subcategoryitem: formRef.current.values.subcategoryitem.label,\n        comments: formRef.current.values.comments,\n        type: formRef.current.values.type,\n        distributerID: localStorage.getItem('distributer_id'),\n        CallerName: formRef.current.values.CallerName,\n        callerapplication: formRef.current.values.callerapplication,\n        connectivitytype: formRef.current.values.connectivitytype.value,\n        devicetype: formRef.current.values.devicetype.value,\n        enable: `${formRef.current.values.enable}`,\n        issuedescription: formRef.current.values.issuedescription,\n        issuetype: formRef.current.values.issuetype,\n        ostype: formRef.current.values.ostype.value,\n        speedtype: formRef.current.values.speedtype.value,\n        status: formRef.current.values.status,\n        subcategoryitem: formRef.current.values.subcategoryitem.label,\n        type: formRef.current.values.type,\n        dispostionFormData: formRef.current.values,\n        anydeskid: formRef.current.values.anydeskid,\n        solution: formRef.current.values.solution,\n        L1ID: serverPrefix\n      });\n      updateCallData(localStorage.getItem('L1ID'), {\n        L2ID: serverPrefix,\n        type: formRef.current.values.type,\n        agenttype: 'L2'\n      });\n    }\n    if (localStorage.getItem('Agenttype') === 'L3') {\n      updateCallData(serverPrefix, {\n        category: formRef.current.values.category.label,\n        subcategory: formRef.current.values.subcategory.label,\n        subcategoryitem: formRef.current.values.subcategoryitem.label,\n        comments: formRef.current.values.comments,\n        type: formRef.current.values.type,\n        distributerID: localStorage.getItem('distributer_id'),\n        CallerName: formRef.current.values.CallerName,\n        callerapplication: formRef.current.values.callerapplication,\n        connectivitytype: formRef.current.values.connectivitytype.value,\n        devicetype: formRef.current.values.devicetype.value,\n        enable: `${formRef.current.values.enable}`,\n        issuedescription: formRef.current.values.issuedescription,\n        issuetype: formRef.current.values.issuetype,\n        ostype: formRef.current.values.ostype.value,\n        speedtype: formRef.current.values.speedtype.value,\n        status: formRef.current.values.status,\n        subcategoryitem: formRef.current.values.subcategoryitem.label,\n        type: formRef.current.values.type,\n        dispostionFormData: formRef.current.values,\n        anydeskid: formRef.current.values.anydeskid,\n        solution: formRef.current.values.solution,\n        L1ID: localStorage.getItem('callUniqueId')\n      });\n      updateCallData(localStorage.getItem('L2ID'), {\n        L2ID: localStorage.getItem('callUniqueId'),\n        type: formRef.current.values.type,\n        agenttype: 'L3'\n      });\n    }\n  }\n  const [autoCompleteKey, setAutoCompleteKey] = useState(0);\n  return (\n    <Formik\n      validateOnBlur={false}\n      initialValues={initialValue}\n      disform={initialValue}\n      onSubmit={(e, { validate }) => {\n        handleSubmit(e);\n        validate(e);\n      }}\n      innerRef={formRef}\n      validationSchema={yup.object({\n\n        category: yup\n          .object()\n          .required('Please select a  category')\n          .typeError('Please select a valid  category'),\n        subcategory: yup\n          .object()\n          .required('Please select a  subcategory')\n          .typeError('Please select a valid  subcategory'),\n        subcategoryitem: yup\n          .object()\n          .required('Please select a  subcategoryitem')\n          .typeError('Please select a valid  subcategoryitem'),\n        comments: yup.string().required('Please Enter Comments'),\n        type: yup.string().required('Please Enter type'),\n        issuetype: yup\n          .object()\n          .required('Please select a Issue Type')\n          .typeError('Please select a valid Issue Type'),\n        devicetype: yup\n          .object()\n          .required('Please select a  Device Type')\n          .typeError('Please select a valid  Device Type'),\n        ostype: yup\n          .object()\n          .required('Please select a OS Type ')\n          .typeError('Please select a valid  OS Type'),\n        connectivitytype: yup\n          .object()\n          .required('Please select a  Internet Connectivity Type')\n          .typeError('Please select a valid  Internet Connectivity Type'),\n        speedtype: yup\n          .object()\n          .required('Please select a Internet Speed ')\n          .typeError('Please select a valid  Internet Speed'),\n        L1Name: yup\n          .object()\n          .required('Please select a L2')\n          .typeError('Please select a L2'),\n        anydeskid: yup.string().required('Please Enter Any Desk ID'),\n        CallerName: yup.string().required('Please Enter Caller Name'),\n        callerapplication: yup.string().required('Please Enter Caller Application'),\n        issuedescription: yup.string().required('Please Enter Issue Description'),\n        solution: yup.string().required('Please Enter Response /Solution Provided')\n      })}\n    >\n      {({ setFieldValue }) => (\n        <Form>\n          <Grid container spacing={2} direction=\"row\">\n            <Grid item xs={4} sm={4}>\n              <Field\n                className={classes.fieldContainer}\n                name=\"CallerName\"\n                component={TextField}\n                variant=\"outlined\"\n                multiline\n\n                label=\"Caller Name\"\n              />\n            </Grid>\n            <Grid item xs={4} sm={4}>\n              <Field\n                className={classes.fieldContainer}\n                name=\"callerapplication\"\n                component={TextField}\n                variant=\"outlined\"\n                multiline\n\n                label=\"Caller Application\"\n              />\n            </Grid>\n\n            <Grid item xs={4} sm={4}>\n              <FormControl\n                variant=\"outlined\"\n                className={classes.fieldContainer}\n              >\n\n                <Autocomplete\n                  options={categories}\n                  getOptionLabel={option => option.label}\n                  // style={{ width: 400, overflow: \"hidden\" }}\n                  value={initialValue.category}\n                  getOptionSelected={(option, value) => {\n                    console.log('category', value);\n                    return value.label === option.label;\n                  }}\n                  key={autoCompleteKey}\n                  onChange={(event, value) => {\n                    console.log('value', value);\n                    if (value !== null) {\n                      setFieldValue('category', value);\n\n                      // updateCallData(localStorage.getItem('callUniqueId'), {\n                      //   type: formRef.current.values.type,\n                      //   dispostionFormData: formRef.current.values\n                      // });\n\n                      const i = initialValue;\n                      i.category = value;\n                      //  getSubCategories(value)\n                      //  i.subcategory.value=\"\"\n                      //  i.subcategory.label=\"\"\n                      //  i.subcategoryitem.value=\"\"\n                      //  i.subcategoryitem.label=\"\"\n                      //  setSubCategories([])\n                      getSubCategories(value);\n                      setInitialValue(i);\n                    }\n                  }}\n                  renderInput={params => (\n                    <Field\n                      component={TextField}\n                      {...params}\n                      label=\"Select a Issue Type\"\n                      variant=\"outlined\"\n                      name=\"category\"\n                    />\n                  )}\n                  name=\"category\"\n                />\n              </FormControl>\n            </Grid>\n            {subCategories.length > 0 ? (\n              <Grid item xs={4} sm={4}>\n\n                <Autocomplete\n                  options={subCategories}\n                  getOptionLabel={option => option.label}\n                  // style={{ width: 400, overflow: \"hidden\" }}\n                  getOptionSelected={(option, value) => value.id === option.id}\n                  value={initialValue.subcategory}\n                  key={autoCompleteKey}\n                  onChange={(event, value) => {\n                    if (value !== null) {\n                      setFieldValue('subcategory', value);\n\n                      // updateCallData(localStorage.getItem('callUniqueId'), {\n                      //   type: formRef.current.values.type,\n                      //   dispostionFormData: formRef.current.values\n                      // });\n                      props.setSubCategory(value);\n                      getSubCategoryItems(\n                        formRef.current.values.category.value,\n                        value\n                      );\n                      const i = initialValue;\n                      i.subcategory = value;\n                      setInitialValue(i);\n                    }\n                  }}\n                  renderInput={params => (\n                    <Field\n                      component={TextField}\n                      {...params}\n\n                      label=\"Select a Type1\"\n                      variant=\"outlined\"\n                      name=\"subcategory\"\n                    />\n                  )}\n                  name=\"subcategory\"\n                />\n              </Grid>\n            ) : (\n              <></>\n            )}\n            {subCategoryItems.length > 0 ? (\n              <Grid item xs={4} sm={4}>\n                <FormControl\n                  variant=\"outlined\"\n                  className={classes.fieldContainer}\n                >\n\n                  <Autocomplete\n                    options={subCategoryItems}\n                    getOptionLabel={option => option.label}\n                    // style={{ width: 400, overflow: \"hidden\" }}\n                    value={initialValue.subCategoryItem}\n                    getOptionSelected={(option, value) => value.id === option.id}\n                    key={autoCompleteKey}\n\n                    onChange={(event, value) => {\n                      if (value !== null) {\n                        setFieldValue('subcategoryitem', value);\n                        props.setSubCategoryItem(value);\n\n                        // updateCallData(localStorage.getItem('callUniqueId'), {\n                        //   type: formRef.current.values.type,\n                        //   dispostionFormData: formRef.current.values\n                        // });\n                        const i = initialValue;\n                        i.subCategoryItem = value;\n                        setInitialValue(i);\n                      }\n                    }}\n                    renderInput={params => (\n                      <Field\n                        component={TextField}\n                        {...params}\n                        label=\"Select a Type2\"\n                        variant=\"outlined\"\n                        name=\"subcategoryitem\"\n                      />\n                    )}\n                    name=\"subcategoryitem\"\n                  />\n                </FormControl>\n              </Grid>\n            ) : (\n              <></>\n            )}\n            <Grid item xs={4} sm={4}>\n\n              <Autocomplete\n                options={devicetype}\n                getOptionLabel={option => option.value}\n                // style={{ width: 400, overflow: \"hidden\" }}\n                value={initialValue.devicetype}\n                getOptionSelected={(option, value) => value.id === option.id}\n                key={autoCompleteKey}\n                onChange={(event, value) => {\n                  if (value !== null) {\n                    setFieldValue('devicetype', value);\n\n                    // updateCallData(localStorage.getItem('callUniqueId'), {\n                    //   type: formRef.current.values.type,\n                    //   dispostionFormData: formRef.current.values\n                    // });\n                    const i = initialValue;\n                    i.devicetype = value;\n                    setInitialValue(i);\n                  }\n                  //  props.setSubCategory(value);\n                  //  getSubCategoryItems(\n                  //    formRef.current.values.category.value,\n                  //    value\n                  //  );\n                }}\n                renderInput={params => (\n                  <Field\n                    component={TextField}\n                    {...params}\n                    label=\"Select a Device Type\"\n                    variant=\"outlined\"\n                    name=\"devicetype\"\n                  />\n                )}\n                name=\"devicetype\"\n              />\n            </Grid>\n\n            <Grid item xs={4} sm={4}>\n\n              <Autocomplete\n                options={ostype}\n                getOptionLabel={option => option.value}\n                // style={{ width: 400, overflow: \"hidden\" }}\n                getOptionSelected={(option, value) => {\n                  return value.id === option.id;\n                }}\n                value={initialValue.ostype}\n                key={autoCompleteKey}\n                onChange={(event, value) => {\n                  if (value !== null) {\n                    setFieldValue('ostype', value);\n\n                    // updateCallData(localStorage.getItem('callUniqueId'), {\n                    //   type: formRef.current.values.type,\n                    //   dispostionFormData: formRef.current.values\n                    // });\n                    console.log('asdfasf', initialValue);\n                    initialValue.ostype = value;\n                    setInitialValue(initialValue);\n                  }\n                  //  var inivalues = initialValues;\n                  //  initialValues.ostype = value.label\n                  //  setInitialValue(initialValues)\n                }}\n                renderInput={params => (\n                  <Field\n                    component={TextField}\n                    {...params}\n                    label=\"Select a OS Type\"\n                    variant=\"outlined\"\n                    name=\"ostype\"\n                  />\n                )}\n                name=\"ostype\"\n              />\n            </Grid>\n            <Grid item xs={4} sm={4}>\n              <Field\n                className={classes.fieldContainer}\n                name=\"anydeskid\"\n                component={TextField}\n                variant=\"outlined\"\n                multiline\n                rows={2}\n                label=\"Any desk ID\"\n              />\n            </Grid>\n            <Grid item xs={4} sm={4}>\n\n              <Autocomplete\n                options={connectivitytype}\n                getOptionLabel={option => option.value}\n                // style={{ width: 400, overflow: \"hidden\" }}\n                value={initialValue.connectivitytype}\n                getOptionSelected={(option, value) => value.id === option.id}\n                key={autoCompleteKey}\n                onChange={(event, value) => {\n                  if (value !== null) {\n                    setFieldValue('connectivitytype', value);\n\n                    // updateCallData(localStorage.getItem('callUniqueId'), {\n                    //   type: formRef.current.values.type,\n                    //   dispostionFormData: formRef.current.values\n                    // });\n                    const i = initialValue;\n                    i.connectivitytype = value;\n                    setInitialValue(i);\n                  }\n                }}\n                renderInput={params => (\n                  <Field\n                    component={TextField}\n                    {...params}\n                    label=\"Select a Internet Connectivity Type\"\n                    variant=\"outlined\"\n                    name=\"connectivitytype\"\n                  />\n                )}\n                name=\"connectivitytype\"\n              />\n            </Grid>\n\n            <Grid item xs={4} sm={4}>\n\n              <Autocomplete\n                options={speedtype}\n                getOptionLabel={option => option.value}\n                // style={{ width: 400, overflow: \"hidden\" }}\n                value={initialValue.speedtype}\n                getOptionSelected={(option, value) => value.id === option.id}\n                key={autoCompleteKey}\n                onChange={(event, value) => {\n                  if (value !== null) {\n                    setFieldValue('speedtype', value);\n\n                    // updateCallData(localStorage.getItem('callUniqueId'), {\n                    //   type: formRef.current.values.type,\n                    //   dispostionFormData: formRef.current.values\n                    // });\n                    const i = initialValue;\n                    i.speedtype = value;\n                    setInitialValue(i);\n                  }\n                }}\n                renderInput={params => (\n                  <Field\n                    component={TextField}\n                    {...params}\n                    label=\"Select a Internet Speed\"\n                    variant=\"outlined\"\n                    name=\"speedtype\"\n                  />\n                )}\n                name=\"speedtype\"\n              />\n            </Grid>\n\n            <Grid item xs={4} sm={4}>\n              <Field\n                className={classes.fieldContainer}\n                name=\"issuedescription\"\n                component={TextField}\n                variant=\"outlined\"\n                multiline\n                rows={2}\n                label=\"Issue Description\"\n              />\n            </Grid>\n            <Grid item xs={4} sm={4}>\n              <Field\n                className={classes.fieldContainer}\n                name=\"solution\"\n                component={TextField}\n                variant=\"outlined\"\n                multiline\n                rows={2}\n                label=\"Response /Solution Provided\"\n              />\n            </Grid>\n\n            <Grid item xs={4} sm={4}>\n              <Field\n                className={classes.fieldContainer}\n                name=\"comments\"\n                component={TextField}\n                variant=\"outlined\"\n                multiline\n                rows={2}\n                label=\"Comments\"\n              />\n            </Grid>\n\n            {/* {selected === true ? (<Grid item item xs={4} sm={4}>\n              <FormControl\n                variant=\"outlined\"\n                className={classes.fieldContainer}\n              >\n\n                <Autocomplete\n                  options={L1Name}\n                  getOptionLabel={option => option.value}\n                  // style={{ width: 400, overflow: \"hidden\" }}\n                  getOptionSelected={(option, value) =>\n                    value.id === option.id\n                  }\n                  key={autoCompleteKey}\n                  onChange={(event, value) => {\n                    if (value !== null) {\n\n                      updateCallData(localStorage.getItem('callUniqueId'), {\n                        type: formRef.current.values.type,\n                        dispostionFormData: formRef.current.values\n                      })\n                      setFieldValue('L1Name', value);\n                      transfercall(localStorage.getItem('channel'))\n\n                    }\n\n                  }}\n                  renderInput={params => (\n                    <Field\n                      component={TextField}\n                      {...params}\n                      label=\"Select a L1\"\n                      variant=\"outlined\"\n                      name=\"L1Name\"\n                    />\n                  )}\n                  name=\"L1Name\"\n                />\n              </FormControl>\n\n            </Grid>) : (<></>)\n            } */}\n            <Grid item>\n\n              <Field component={RadioGroup} name=\"type\" row>\n                {/* <FormControlLabel value=\"FCR\" control={<Radio />} label=\"FCR\" /> */}\n                <FormControlLabel\n                  value=\"open\"\n                  control={<Radio />}\n                  label=\"Open\"\n                  onChange={handleChange}\n                />\n                <FormControlLabel\n                  value=\"closed\"\n                  control={<Radio />}\n                  label=\"Closed\"\n                  onChange={handleChange}\n\n                />\n                <FormControlLabel\n                  value=\"disconnected\"\n                  control={<Radio />}\n                  label=\"disconnected\"\n                  onChange={handleChange}\n                />\n                {/* {localStorage.getItem('callStatus') === 'connected' ?                 <FormControlLabel\n                  value=\"transfercall\"\n                  control={<Radio />}\n                  label=\"Transfer Call\"\n                  onChange={handleChange}\n                />: null} */}\n\n              </Field>\n            </Grid>\n          </Grid>\n          <br />\n          {/* {selected === true ?\n\n<Button color=\"primary\" variant=\"contained\"  onClick={(e) =>   transfercall(localStorage.getItem('channel'))}>\nTransfer\n</Button>\n\n                  : null} */}\n          <span>  </span>\n          <span> </span>\n          <span> </span>\n          <span> </span>\n          <Button color=\"primary\" variant=\"contained\" onClick={handleSubmit}>\n            Submit\n          </Button>\n\n        </Form>\n      )}\n    </Formik>\n  );\n}\n","import {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Typography,\n  TextField\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useEffect, useState } from 'react';\n\nconst useStyles = makeStyles(theme => ({\n  dialog: {\n    minWidth: 400\n  }\n}));\n\nexport default function DistSelect({ multipleDistributorDetails, ...props }) {\n  const classes = useStyles();\n  const {\n    distrtbutorDetails,\n    modalValue,\n  } = multipleDistributorDetails;\n\n  const [showModal, setShowModal] = useState(modalValue);\n  const [showModalID, setShowModalID] = useState({ ID: \"\" });\n\n  useEffect(() => {\n    setShowModalID({\n      ID: distrtbutorDetails[0].distributor_id\n    });\n  }, [])\n\n  const handleChange = (e) => {\n    setShowModalID({\n      ...showModalID,\n      [e.target.name]: e.target.value\n    });\n  }\n  const handleSubmit = (e) => {\n    setShowModal(false)\n    props.get(showModalID.ID)\n  }\n\n  return (\n    <div>\n      {showModal && (\n        <Dialog\n          open\n          onClose={() => setShowModal(false)}\n          classes={{ paper: classes.dialog }}\n        >\n          <DialogTitle>Select User Profile</DialogTitle>\n          <Divider light />\n          <DialogContent>\n            <Typography variant=\"h6\">\n              <TextField\n                fullWidth\n                label=\"Select ID\"\n                name=\"ID\"\n                onChange={handleChange}\n                required\n                select\n                SelectProps={{ native: true }}\n                value={showModalID.ID}\n                variant=\"outlined\"\n              >\n                {distrtbutorDetails.map((option) => (\n                  <option\n                    key={option.distributor_id}\n                    value={option.distributor_id}\n                  >\n                    {option.distributor_id}\n                  </option>\n                ))}\n              </TextField>\n              <Box style={{ flexBasis: '100%' }}>\n                <br />\n              </Box>\n            </Typography>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={\n                handleSubmit}\n            >\n              Submit\n              </Button>\n\n          </DialogActions>\n        </Dialog>\n      )}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Grid,\n  makeStyles,\n  Typography,\n\n} from '@material-ui/core';\nimport {\n  PUT_BREAK_AGENT,\n  GET_INTERACTION_BY_DISTRIBUTOR_ID,\n  GET_INTERACTION_BY_AGENT_SIP_ID,\n  UPDATE_CURRENT_STATUS,\n  GET_CURRENT_STATUS_BY_AGENT_SIP_ID,\n  ORIGINATE_CALL_WITH_SIP_ID,\n  SOCKETENDPOINT1,\n  SOCKETENDPOINT2,\n  SOCKETENDPOINT3,\n  SOCKETENDPOINT4,\n  SOCKETENDPOINT5,\n  AGENT_SERVICE_URL,\n} from 'src/modules/dashboard-360/utils/endpoints';\nimport Iframe from 'react-iframe'\nimport axios from 'axios'\nimport { ExpandMore } from '@material-ui/icons';\nimport FAQ from './FAQ'\nimport Input from '@material-ui/core/Input';\nimport PropTypes from 'prop-types';\nimport Page from 'src/components/Page';\nimport CustomTabs from 'src/modules/dashboard-360/components/CustomTabs';\nimport CustomTabPanel from 'src/modules/dashboard-360/components/CustomTabPanel';\nimport BasicTable from 'src/modules/dashboard-360/components/BasicTable';\nimport MainLoader from 'src/components/MainLoader';\nimport {\n  invoicesColumns,\n  orderColumns,\n  lastFiveCallData\n} from 'src/modules/dashboard-360/utils/columns-config';\nimport CommonAlert from 'src/components/CommonAlert';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { connect, useSelector } from 'react-redux';\nimport CustomBreadcrumbs from 'src/components/CustomBreadcrumbs';\n// import CreateTicket from 'src/modules/ticketing/views/create-ticket';\nimport CallIcon from '@material-ui/icons/Call';\nimport DealerCard from './DealerCard';\n// import TicketsList from './TicketsList';\nimport dealerAPICalls from './apiCalls';\nimport { setDistributorOrders } from '../../redux/action';\nimport { setSearchDistributor } from '../../../../redux/action';\nimport { searchDistributor } from '../../../../redux/action';\nimport DispositionForm from './DispositionForm';\nimport socketIOClient from 'socket.io-client';\nimport { setAgentCurrentStatus } from 'src/redux/action';\nimport DistributorSelectPopup from './DistributorSelectModal';\nimport data from '../customer/CustomerListView/data';\nimport { da } from 'date-fns/locale';\nimport { Link, Redirect } from 'react-router-dom'\nimport { useHistory } from \"react-router-dom\";\nimport { setLoggedIn } from '../../../../redux/action'\nimport { useDispatch } from 'react-redux'\n// import CreateCaller from '../../../agentForm/views/dashboard/Createcaller'\n\n\n// const socket1 = socketIOClient(SOCKETENDPOINT1, { transports: ['websocket'] });\n// const socket2 = socketIOClient(SOCKETENDPOINT2 , { transports: ['websocket'] });\n// const socket3 = socketIOClient(SOCKETENDPOINT3, { transports: ['websocket'] });\n// const socket4 = socketIOClient(SOCKETENDPOINT4, { transports: ['websocket'] });\n\nconst socket1 = socketIOClient(SOCKETENDPOINT1, { transports: ['websocket'], 'reconnection limit': 1000, 'max reconnection attempts': 'Infinity' });\nconst socket2 = socketIOClient(SOCKETENDPOINT2, { transports: ['websocket'], 'reconnection limit': 1000, 'max reconnection attempts': 'Infinity' });\nconst socket3 = socketIOClient(SOCKETENDPOINT3, { transports: ['websocket'], 'reconnection limit': 1000, 'max reconnection attempts': 'Infinity' });\nconst socket4 = socketIOClient(SOCKETENDPOINT4, { transports: ['websocket'], 'reconnection limit': 1000, 'max reconnection attempts': 'Infinity' });\nconst socket5 = socketIOClient(SOCKETENDPOINT5, { transports: ['websocket'], 'reconnection limit': 1000, 'max reconnection attempts': 'Infinity' });\n\n\n\n\nconst useStyles = makeStyles(theme => {\n  return {\n    root: {\n      backgroundColor: theme.palette.background.dark,\n      minHeight: '100%',\n      paddingBottom: theme.spacing(3),\n      paddingTop: theme.spacing(3)\n    },\n    panelBody: {\n      padding: 0\n    },\n    dialogActions: {\n      padding: '0 1.5rem 1rem'\n    },\n    modal: {\n      alignItems: 'center',\n      width: '100%',\n      height: '100%'\n    },\n    timerComp: {\n      position: 'absolute',\n      top: 0,\n      left: '55%',\n      color: 'white',\n      fontWeight: 'bold',\n      fontSize: '1.2rem',\n      backgroundColor: theme.palette.secondary.light,\n      padding: '8px 10px',\n      borderBottomLeftRadius: 8,\n      borderBottomRightRadius: 8\n    },\n    callWrapper: {\n      left: 'calc(55% + 90px)'\n    },\n    callInbound: {\n      backgroundColor: theme.palette.success.light\n    },\n    callOutbound: {\n      backgroundColor: theme.palette.secondary.light\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%',\n      padding: theme.spacing(1, 1)\n    }\n  };\n});\n\nconst Dashboard = ({\n  distributorOrders,\n  setDistributorOrdersAction,\n  setAgentCurrentStatusAction,\n  setSearchDistributor,\n  searchDistributor\n}) => {\n  const classes = useStyles();\n  const reduxState = useSelector(state => state);\n  const user_Details = useSelector(state => state.userData)\n  const [tab, setTab] = useState(0);\n  const [loadingDetails, setLoadingDetails] = useState(false);\n  const [rootData, setRootData] = useState(null);\n  const [showCreateTicket, setShowCreateTicket] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [ticketNumber, setTicketNumber] = useState('');\n  const [distributorName, setDistributorName] = useState('');\n  const [distributorId, setDistributorId] = useState('');\n  const [distributorEmail, setDistributorEmail] = useState('');\n  const [distributorMobile, setDistributorMobile] = useState('');\n  const [createdByName, setCreatedByName] = useState('');\n  const [createdById, setCreatedById] = useState('');\n  const [ticketSubject, setTicketSubject] = useState('');\n  const [ticketDescription, setTicketDescription] = useState('');\n  const [remarks, setRemarks] = useState('');\n  const [ticketTypes, setTicketTypes] = useState([]);\n  const [ticketType, setTicketType] = useState({});\n  const [medium, setMedium] = useState([]);\n  const [loginToken, setLoginToken] = useState(true)\n  const [media, setMedia] = useState({\n    value: '',\n    label: ''\n  });\n  const [categories, setCategories] = useState([]);\n  const [category, setCategory] = useState({});\n  const [subCategories, setSubCategories] = useState([]);\n  const [subCategory, setSubCategory] = useState({\n    value: '',\n    label: ''\n  });\n  const [subCategoryItems, setSubCategoryItems] = useState([]);\n  const [subCategoryItem, setSubCategoryItem] = useState({\n    value: '',\n    label: ''\n  });\n  const [departments, setDepartments] = useState([]);\n  const [department, setDepartment] = useState({\n    value: '',\n    label: ''\n  });\n  const [teams, setTeams] = useState([]);\n  const [team, setTeam] = useState({\n    value: '',\n    label: ''\n  });\n  const [priorities, setPriorities] = useState([]);\n  const [priority, setPriority] = useState({\n    value: '',\n    label: '',\n    sla: 0\n  });\n  const [statuses, setStatuses] = useState([]);\n  const [status, setStatus] = useState({\n    value: '',\n    label: '',\n    slaOnHold: false\n  });\n  const [executives, setExecutives] = useState([]);\n  const [executive, setExecutive] = useState({\n    value: '',\n    label: '',\n    executiveEmail: '',\n    executiveMobile: ''\n  });\n  const [ticket, setTicket] = useState({});\n  const [createdTime, setCreatedTime] = useState();\n  const [currentCall, setCurrentCall] = useState({\n    callUniqueId: '',\n    callType: '',\n    callStatus: '',\n    callDetails: '',\n    callDispositionStatus: '',\n    callerNumber: '',\n    breakStatus: ''\n  });\n  const [user, setUserDetails] = useState({\n    userType: 'Agent'\n  });\n  const [agent, setAgent] = useState({\n    AgentId: '1234',\n    AgentType: localStorage.getItem('AgentType'),\n    AgentSipId: localStorage.getItem('AgentSIPID')\n  });\n  const [ALF, setALF] = useState([]);\n  const [DLF, setDLF] = useState([]);\n  const agentServiceURL = '/agentservice/';\n  const [disForm, setdisForm] = useState({});\n  const [mobile, setmobile] = useState('');\n  const [\n    showDistributorDetailsModal,\n    setShowDistributorDetailsModal\n  ] = useState(false);\n  const [dealerDetails, setdealerDetails] = useState({});\n  const [distributorModal, setDistributorModal] = useState({});\n\n  const dispatch = useDispatch()\n  function getDLF() {\n    const axios = require('axios');\n    let data = '';\n    let config = {\n      method: 'get',\n      url:\n        GET_INTERACTION_BY_DISTRIBUTOR_ID +\n        localStorage.getItem('callerNumber') +\n        '',\n      headers: {},\n      data: data\n    };\n\n    axios(config)\n      .then(async response => {\n        var DLFDATA = response.data;\n        DLFDATA = DLFDATA.reverse();\n        console.log(\"DLF\", DLFDATA)\n        setDLF(DLFDATA);\n      })\n\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  useEffect(() => {\n    if (localStorage.getItem('jwtToken')) {\n      setLoginToken(true)\n    }\n  }, [])\n\n  function getALF() {\n    const axios = require('axios');\n    let data = '';\n    let config = {\n      method: 'get',\n      url: GET_INTERACTION_BY_AGENT_SIP_ID + agent.AgentSipId + '',\n      headers: {},\n      data: data\n    };\n\n    axios(config)\n      .then(async response => {\n        var ALFDATA = response.data;\n        ALFDATA = ALFDATA.reverse();\n        setALF(ALFDATA);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  function getOpenTickets(agentType, status) {\n\n    var axios = require('axios');\n\n    var config = {\n      method: 'get',\n      url: `${AGENT_SERVICE_URL}/crm/interactions/getByAgentStatus?type=` + agentType + '&status=' + status + '',\n      headers: {}\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(JSON.stringify(response.data));\n        var ALFDATA = response.data;\n        console.log('calling the open tickets', ALFDATA)\n        // ALFDATA = ALFDATA.reverse();\n        setALF(ALFDATA);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n  }\n\n  function setCurrentCallDetails(\n    callStatusId,\n    callUniqueId,\n    callType,\n    callStatus,\n    callEvent,\n    callDispositionStatus,\n    callerNumber,\n    breakStatus\n  ) {\n    setCurrentCall({\n      callStatusId: callStatusId,\n      callUniqueId: callUniqueId,\n      callType: callType,\n      callStatus: callStatus,\n      callEvent: callEvent,\n      callDispositionStatus: callDispositionStatus,\n      callerNumber: callerNumber,\n      breakStatus: breakStatus\n    });\n    localStorage.setItem('callStatusId', callStatusId);\n    localStorage.setItem('callUniqueId', callUniqueId);\n    localStorage.setItem('callType', callType);\n    localStorage.setItem('callStatus', callStatus);\n    localStorage.setItem('callEvent', callEvent);\n    localStorage.setItem('callDispositionStatus', callDispositionStatus);\n    localStorage.setItem('callerNumber', callerNumber);\n    localStorage.setItem('breakStatus', breakStatus);\n  }\n\n  var APIENDPOINT = SOCKETENDPOINT2;\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  /// addToQueue start //////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  // function addToQueue(agentId, queue, user_Details) {\n  //   var axios = require('axios');\n\n  //   var APIENDPOINT = '';\n  //   console.log('userDetails sdsdfgsdfgsdf', user_Details)\n  //   if (user_Details.Server === 'server1') {\n  //     APIENDPOINT = SOCKETENDPOINT1\n  //   }\n  //   if (user_Details.Server === 'server2') {\n  //     APIENDPOINT = SOCKETENDPOINT2\n  //   }\n  //   if (user_Details.Server === 'server3') {\n  //     APIENDPOINT = SOCKETENDPOINT3\n  //   }\n  //   if (user_Details.Server === 'server4') {\n  //     APIENDPOINT = SOCKETENDPOINT4\n  //   }\n\n\n  //   const config = {\n  //     method: 'get',\n  //     url:\n  //       `${APIENDPOINT\n  //       }/ami/actions/addq?Interface=${agentId}&Queue=${queue\n  //       }`,\n  //     headers: {\n  //       'Content-Type': 'application/json'\n  //     }\n  //   };\n\n  //   axios(config)\n  //     .then((response) => { })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n\n  // }\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  /// addToQueue end //////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  /// ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n  /// addToQueue start //////////////////////////////////////////////////////////////////////////////////////////\n  /// ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  function addToQueue(agentId, queue, user_Details) {\n    const axios = require('axios');\n\n    var config1 = {\n      method: 'get',\n      url: 'http://106.51.86.75:42004/crm/serveragentcounts',\n      headers: {}\n    };\n\n    axios(config1)\n      .then(function (response) {\n        console.log(JSON.stringify(response.data));\n\n        var data = response.data\n\n\n        var items = data.items[0];\n        delete items['_id'];\n        delete items['createdAt'];\n        delete items['updatedAt'];\n        delete items['__v'];\n\n        var data = [];\n        data.push(items.server1, items.server2, items.server3, items.server4, items.server5)\n        data = data.sort((a, b) => parseFloat(a) - parseFloat(b));\n\n        function getKeyByValue(object, value) {\n          return Object.keys(object).find(key => object[key] === value);\n        }\n\n        console.log('data', data)\n        console.log(getKeyByValue(items, data[0]));\n        if (getKeyByValue(items, data[0]) === 'server1') {\n          APIENDPOINT = 'http://106.51.86.75:42001';\n        }\n        if (getKeyByValue(items, data[0]) === 'server2') {\n          APIENDPOINT = 'http://106.51.86.75:42002';\n        }\n        if (getKeyByValue(items, data[0]) === 'server3') {\n          APIENDPOINT = 'http://106.51.86.75:42003';\n        }\n        if (getKeyByValue(items, data[0]) === 'server4') {\n          APIENDPOINT = 'http://106.51.86.75:42005';\n        }\n        if (getKeyByValue(items, data[0]) === 'server5') {\n          APIENDPOINT = 'http://106.51.86.75:42009';\n          queue = 7003\n        }\n        const config = {\n          method: 'get',\n          url:\n            `${APIENDPOINT\n            }/ami/actions/addq?Interface=${agentId}&Queue=${queue\n            }`,\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        };\n\n        axios(config)\n          .then((response) => { })\n          .catch((error) => {\n            console.log(error);\n          });\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n\n\n\n  }\n  /// ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n  /// addToQueue end //////////////////////////////////////////////////////////////////////////////////////////\n  /// ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  /// removeFromQueue start //////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  function removeFromQueue(agentId, queue, user_Details) {\n    const axios = require('axios');\n    var APIENDPOINT = '';\n    console.log('userDetails sdsdfgsdfgsdf', user_Details)\n    // if (user_Details.Server === 'server1') {\n    //   APIENDPOINT = SOCKETENDPOINT1\n    // }\n    // if (user_Details.Server === 'server2') {\n    //   APIENDPOINT = SOCKETENDPOINT2\n    // }\n    // if (user_Details.Server === 'server3') {\n    //   APIENDPOINT = SOCKETENDPOINT3\n    // }\n    // if (user_Details.Server === 'server4') {\n    //   APIENDPOINT = SOCKETENDPOINT4\n    // }\n    console.log('remove', agentId);\n    const config1 = {\n      method: 'get',\n      url:\n        `${SOCKETENDPOINT1\n        }/ami/actions/rmq?Queue=${queue\n        }&Interface=${agentId}`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    axios(config1)\n      .then((response) => {\n\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n\n    const config2 = {\n      method: 'get',\n      url:\n        `${SOCKETENDPOINT2\n        }/ami/actions/rmq?Queue=${queue\n        }&Interface=${agentId}`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    axios(config2)\n      .then((response) => {\n\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n\n    const config3 = {\n      method: 'get',\n      url:\n        `${SOCKETENDPOINT3\n        }/ami/actions/rmq?Queue=${queue\n        }&Interface=${agentId}`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    axios(config3)\n      .then((response) => {\n\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n\n    const config4 = {\n      method: 'get',\n      url:\n        `${SOCKETENDPOINT4\n        }/ami/actions/rmq?Queue=${queue\n        }&Interface=${agentId}`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    axios(config4)\n      .then((response) => {\n\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n    const config5 = {\n      method: 'get',\n      url:\n        `${SOCKETENDPOINT5\n        }/ami/actions/rmq?Queue=7003&Interface=${agentId}`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    axios(config5)\n      .then((response) => {\n\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  /// removeFromQueue end //////////////////////////////////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n  function updateAgentCallStatus(updateData) {\n    console.log(\"updateData\", updateData)\n    var axios = require('axios');\n    var data = {\n      agentCallStatus: updateData.callStatus,\n      agentCallEvent: updateData.callEvent,\n      agentCallUniqueId: updateData.callUniqueId,\n      agentCallType: updateData.callType,\n      agentCallDispositionStatus: updateData.callDispositionStatus,\n      callerNumber: updateData.callerNumber,\n      breakStatus: updateData.breakStatus\n    };\n    var config = {\n      method: 'put',\n      url: UPDATE_CURRENT_STATUS + updateData.callStatusId,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: data\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log('update', JSON.stringify(response.data));\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n\n  function updateAgentCallStatusV2(callStatusId, data) {\n    // console.log(\"updateData\", updateData)\n    var axios = require('axios');\n    var config = {\n      method: 'put',\n      url: UPDATE_CURRENT_STATUS + callStatusId,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: data\n    };\n    axios(config)\n      .then(function (response) {\n        console.log('update', JSON.stringify(response.data));\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  useEffect(() => {\n\n    const agentSipID = localStorage.getItem('AgentSIPID')\n    const interval = setInterval(async () => {\n      const GET_CURRENT_STATUS_BY_AGENT_SIP_ID = `http://106.51.86.75:42004/crm/currentstatuses/agentSipID?agentSipID=${localStorage.getItem('AgentSIPID')}`;\n      const getCurrentStatus = await axios.get(GET_CURRENT_STATUS_BY_AGENT_SIP_ID);\n      //console.log('getCurrentStatus', getCurrentStatus)\n\n      if (localStorage.getItem('jwtToken')) {\n        if (getCurrentStatus.data[0].jwtToken === localStorage.getItem('jwtToken')) {\n          // axios.post('http://106.51.86.75:4000/auth/apiM/verifyClient', {}, { headers: { Authorization: `Bearer ${localStorage.getItem('jwtToken')}` } })\n          // .then((response) => {\n          //   if (response.status != 200) {\n          //     localStorage.clear()\n          //     window.location.reload()\n          //   }else{\n          //     getAgentCallStatus(agentSipID)\n          //   }\n          // });\n\n        } else {\n          localStorage.clear()\n          dispatch(setLoggedIn(false))\n          window.location.reload()\n        }\n      }\n\n    }, 3000);\n\n  }, [])\n\n\n  function getAgentCallStatus(agentSipID) {\n    //console.log('calling the', agentSipID)\n    var axios = require('axios');\n    var config = {\n      method: 'get',\n      url: GET_CURRENT_STATUS_BY_AGENT_SIP_ID + agentSipID,\n      headers: {}\n    };\n\n    axios(config)\n      .then(function (response) {\n\n        if (response.data) {\n          //console.log('getAgentCallStatus....................', response.data);\n          // updateAgentCallStatusV2(response.data[0]._id, { loginStatus: 'true' })\n          setCurrentCallDetails(\n            response.data[0]._id,\n            response.data[0].agentCallUniqueId,\n            response.data[0].agentCallType,\n            response.data[0].agentCallStatus,\n            response.data[0].agentCallEvent,\n            response.data[0].agentCallDispositionStatus,\n            response.data[0].contactNumber,\n            response.data[0].breakStatus\n          );\n          setAgentCurrentStatusAction({\n            AgentType: agent.AgentType,\n            role: user.userType,\n            callUniqueId: response.data[0].agentCallUniqueId,\n            distributer_id: '',\n            callStatusId: response.data[0]._id,\n            callDispositionStatus: response.data[0].agentCallDispositionStatus,\n            callType: response.data[0].agentCallType,\n            callEvent: response.data[0].agentCallEvent,\n            callerNumber: response.data[0].contactNumber,\n            callStatus: response.data[0].agentCallStatus,\n            AgentSIPID: agent.AgentSipId,\n            breakStatus: response.data[0].breakStatus\n          });\n          if (response.data[0].channel !== null || response.data[0].channel !== undefined) {\n            // localStorage.setItem('channel', response.data[0].channel);\n          }\n\n        }\n      })\n      .catch(function (error) {\n        //console.log(error);\n      });\n  }\n\n  const onClick = event => {\n    //console.log('mobile', mobile);\n    if (mobile.length === 10) {\n      // console.log(\n      //   'valid number',\n      //   ORIGINATE_CALL_WITH_SIP_ID +\n      //   'sipAgentID=SIP%2F' +\n      //   agent.AgentSipId +\n      //   '&NumbertobeCalled=5' +\n      //   mobile\n      // );\n\n      const axios = require('axios');\n\n      let config = {\n        method: 'get',\n        url:\n          ORIGINATE_CALL_WITH_SIP_ID +\n          'sipAgentID=SIP%2F' +\n          agent.AgentSipId +\n          '&NumbertobeCalled=5' +\n          mobile,\n        headers: {}\n      };\n\n      axios(config)\n        .then(response => {\n          //console.log(JSON.stringify(response.data));\n        })\n        .catch(error => {\n          //console.log(error);\n        });\n    } else {\n      //console.log('Invalide number');\n    }\n    // alert('clicked', mobile);\n  };\n\n  const onChange = event => {\n    setmobile(event.target.value);\n  };\n\n\n\n  async function disProfileByNum(mobile) {\n\n    // const axios = require('axios');\n\n    // let config = {\n    //   method: 'get',\n    //   url: '/bo/boapi/profile?mobilenumber=' + mobile,\n    //   headers: {}\n    // };\n\n\n    // const response = await axios.get(config.url);\n    // if (response.data.status === '1') {\n    //   var data1 = response.data.data;\n    //   if (data1.length) {\n    //     if (data1.length > 1) {\n    //       multipleDistributorDetails(data1, true);\n    //       setShowDistributorDetailsModal(true);\n    //     } else {\n    //       get(data1[0].distributor_id);\n    //     }\n    //     localStorage.setItem('distributer_id', data1[0].distributor_id);\n    //   }\n    // }\n\n  }\n  function multipleDistributorDetails(distData, popUp) {\n    setDistributorModal({ distrtbutorDetails: distData, modalValue: popUp });\n  }\n  async function get(distributor_id) {\n    try {\n      const response = await Promise.allSettled(dealerAPICalls(distributor_id));\n      setRootData(\n        response.map(res => (res.status === 'fulfilled' ? res.value.data : {}))\n      );\n      setDistributorOrdersAction(\n        response[2].status === 'fulfilled' ? response[2].value.data.data : null\n      );\n      setLoadingDetails(false);\n    } catch (err) {\n      //console.log(err.response);\n    }\n  }\n\n  ///socket1 start\n  if (user.userType === 'Agent') {\n    socket1.on('AstriskEvent', data => {\n\n\n      if (data.Event === 'Bridge') {\n\n      }\n\n      if (data.Event === 'Hangup') {\n\n      }\n      var Channel1 = data.Channel1;\n      var unlinkcounter = 0;\n      if (\n        data.Bridgestate === 'Unlink' &&\n        Channel1.includes('SIP/' + agent.AgentSipId + '')\n      ) {\n        unlinkcounter++;\n        if (\n          localStorage.getItem('callEvent') === 'Bridge' &&\n          unlinkcounter === 1\n        ) {\n\n        }\n      }\n    });\n  }\n\n  function breakService(e) {\n    //console.log('Break', localStorage.getItem('breakStatus'));\n    var BreakStatus = localStorage.getItem('breakStatus');\n    if (BreakStatus === 'NA') {\n      //console.log('Inside the NA');\n      removeFromQueue(`Local/5${localStorage.getItem('AgentSIPID')}@from-queue`, 7001, user_Details);\n      addToQueue('Local/5' + localStorage.getItem('AgentSIPID') + '@from-queue\\n', 7001, user_Details)\n      localStorage.setItem('breakStatus', 'IN');\n    }\n    if (BreakStatus === 'IN') {\n      //console.log('Inside the IN');\n      removeFromQueue(`Local/5${localStorage.getItem('AgentSIPID')}@from-queue`, 7001, user_Details);\n      addToQueue('Local/5' + localStorage.getItem('AgentSIPID') + '@from-queue\\n', 7001, user_Details)\n      localStorage.setItem('breakStatus', 'OUT');\n    }\n    if (BreakStatus === 'OUT') {\n      //console.log('Inside the OUT');\n      localStorage.setItem('breakStatus', 'IN');\n      removeFromQueue(`Local/5${localStorage.getItem('AgentSIPID')}@from-queue`, 7001, user_Details);\n    }\n\n    updateAgentCallStatus({\n      callStatusId: localStorage.getItem('callStatusId'),\n      callUniqueId: localStorage.getItem('callUniqueId'),\n      callType: localStorage.getItem('callType'),\n      callStatus: localStorage.getItem('callStatus'),\n      callEvent: localStorage.getItem('callEvent'),\n      callDispositionStatus: localStorage.getItem('callDispositionStatus'),\n      callerNumber: localStorage.getItem('callerNumber'),\n      breakStatus: localStorage.getItem('breakStatus')\n    });\n\n    setCurrentCallDetails(\n      localStorage.getItem('callStatusId'),\n      localStorage.getItem('callUniqueId'),\n      localStorage.getItem('callType'),\n      localStorage.getItem('callStatus'),\n      localStorage.getItem('callEvent'),\n      localStorage.getItem('callDispositionStatus'),\n      localStorage.getItem('callerNumber'),\n      localStorage.getItem('breakStatus')\n    );\n\n    var axios = require('axios');\n    var data = JSON.stringify({\n      agentID: agent.AgentId,\n      agentSIPID: agent.AgentSipId,\n      breakStatus: localStorage.getItem('breakStatus')\n    });\n\n    var config = {\n      method: 'post',\n      url: PUT_BREAK_AGENT,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: data\n    };\n\n    axios(config)\n      .then(function (response) {\n        //console.log(JSON.stringify(response.data));\n      })\n      .catch(function (error) {\n        // console.log(error);\n      });\n  }\n\n  ///socket1 ends\n  useEffect(() => {\n    // getALF();\n    if (localStorage.getItem('Agenttype') === 'L1') {\n      // getOpenTickets(localStorage.getItem('Agenttype'), 'open');\n    }\n    if (localStorage.getItem('Agenttype') === 'L2') {\n      getOpenTickets('L1', 'open');\n    }\n    if (localStorage.getItem('Agenttype') === 'L3') {\n      getOpenTickets('L2', 'open');\n    }\n\n    async function getInitialData() {\n      try {\n        const response = await getAgentCallStatus(agent.AgentSipId);\n      } catch (err) {\n        //console.log('err', err);\n      }\n    }\n    getInitialData();\n    setRootData(\n      [[], [], [], [], []].map(res =>\n        res.status === 'fulfilled' ? res.value.data : {}\n      )\n    );\n    setLoadingDetails(false);\n    ///socket1 1///////////////////////////////\n    socket1.on('AstriskEvent', data => {\n      if (data.Event === 'Hangup') {\n        // console.log('AstriskEvent', data)\n      }\n      if (data.Event === 'Bridge') {\n        // console.log('AstriskEvent', data)\n      }\n\n    })\n    // socket1.on('ringing1', data => {\n    //   console.log('ringing1', data);\n    //   // var Channel1 = data.Channel1;\n    //   var agentExtension = data.agentNumber;\n    //   if (agentExtension === agent.AgentSipId) {\n\n    //     localStorage.setItem('channel', data.event.Channel)\n    //     //   console.log('AstriskEventBridgeOutbound', data);\n\n    //     // setCurrentCallDetails(\n    //     //   localStorage.getItem('callStatusId'),\n    //     //   data.Uniqueid,\n    //     //   agent.AgentType,\n    //     //   'connected',\n    //     //   'Bridge',\n    //     //   'NotDisposed',\n    //     //   '',\n    //     //   localStorage.getItem('breakStatus')\n    //     // );\n    //   }\n    // });\n\n    // socket1.on('ringing2', data => {\n    //   console.log('ringing2', data)\n    //   // var Channel1 = data.Channel1;\n    //   var agentExtension = data.agentNumber;\n    //   if (agentExtension === agent.AgentSipId) {\n\n    //     localStorage.setItem('callUniqueId', \"325\" + data.event.Uniqueid)\n    //     localStorage.setItem('callerNumber', data.event.ConnectedLineNum)\n    //     // //   console.log('AstriskEventBridgeOutbound', data);\n\n    //     //   setCurrentCallDetails(\n    //     //     localStorage.getItem('callStatusId'),\n    //     //     localStorage.getItem('callUniqueId'),\n    //     //     agent.AgentType,\n    //     //     'connected',\n    //     //     'Bridge',\n    //     //     'NotDisposed',\n    //     //     data.contactNumber,\n    //     //     localStorage.getItem('breakStatus')\n    //     //   );\n    //   }\n    // });\n    // socket1.on('transfercallnumber', data => {\n    //   if (localStorage.getItem('Agenttype') === 'L2') {\n    //     localStorage.setItem('callerNumber', data.contactnumber)\n    //   }\n\n    // })\n    // socket1.on('connected', data => {\n    //   console.log('connected', data);\n    //   var agentExtension = data.agentNumber;\n    //   if (agentExtension === agent.AgentSipId) {\n    //     // getInitialData();\n    //     // console.log('AstriskEventBridgeInbound', data);\n    //     localStorage.setItem('distributer_id', agent.AgentSipId);\n    //     setCurrentCallDetails(\n    //       localStorage.getItem('callStatusId'),\n    //       localStorage.getItem('callUniqueId'),\n    //       agent.AgentType,\n    //       'connected',\n    //       'Bridge',\n    //       'NotDisposed',\n    //       localStorage.getItem('callerNumber'),\n    //       localStorage.getItem('breakStatus')\n    //     );\n    //     // removeFromQueue(agent.AgentSipId, '7001');\n    //   }\n    // });\n    // socket1.on('hangup', data => {\n    //   console.log('hangup', data);\n    //   // var str = data.Channel;\n    //   // var agentsipid = str.substring(4, 8);\n    //   // console.log('agentsipid', agentsipid);\n    //   var agentExtension = data.agentNumber;\n    //   if (agentExtension === agent.AgentSipId) {\n    //     // console.log('AstriskEventHangup', data);\n    //     setCurrentCallDetails(\n    //       localStorage.getItem('callStatusId'),\n    //       localStorage.getItem('callUniqueId'),\n    //       localStorage.getItem('callType'),\n    //       'disconnected',\n    //       'Hangup',\n    //       localStorage.getItem('callDispositionStatus'),\n    //       localStorage.getItem('callerNumber'),\n    //       localStorage.getItem('breakStatus')\n    //     );\n    //   }\n    // });\n    // /////////////////////////////////////////////\n\n    // ////////////////////////////////////////////////////////////////////////////////////////////\n    // //1//////////////////////////////////////////////////////////////////////////////////\n    // socket2.on('AstriskEvent', data => {\n    //   if (data.Event === 'Hangup') {\n    //     // console.log('AstriskEvent', data)\n    //   }\n    //   if (data.Event === 'Bridge') {\n    //     // console.log('AstriskEvent', data)\n    //   }\n\n    // })\n    // socket2.on('ringing1', data => {\n    //   console.log('ringing1', data);\n    //   // var Channel1 = data.Channel1;\n    //   var agentExtension = data.agentNumber;\n    //   if (agentExtension === agent.AgentSipId) {\n\n    //     localStorage.setItem('channel', data.event.Channel)\n    //     //   console.log('AstriskEventBridgeOutbound', data);\n\n    //     // setCurrentCallDetails(\n    //     //   localStorage.getItem('callStatusId'),\n    //     //   data.Uniqueid,\n    //     //   agent.AgentType,\n    //     //   'connected',\n    //     //   'Bridge',\n    //     //   'NotDisposed',\n    //     //   '',\n    //     //   localStorage.getItem('breakStatus')\n    //     // );\n    //   }\n    // });\n\n    // socket2.on('ringing2', data => {\n    //   console.log('ringing2', data)\n    //   // var Channel1 = data.Channel1;\n    //   var agentExtension = data.agentNumber;\n    //   if (agentExtension === agent.AgentSipId) {\n\n    //     localStorage.setItem('callUniqueId', \"331\" + data.event.Uniqueid)\n    //     localStorage.setItem('callerNumber', data.event.ConnectedLineNum)\n    //     // //   console.log('AstriskEventBridgeOutbound', data);\n\n    //     //   setCurrentCallDetails(\n    //     //     localStorage.getItem('callStatusId'),\n    //     //     localStorage.getItem('callUniqueId'),\n    //     //     agent.AgentType,\n    //     //     'connected',\n    //     //     'Bridge',\n    //     //     'NotDisposed',\n    //     //     data.contactNumber,\n    //     //     localStorage.getItem('breakStatus')\n    //     //   );\n    //   }\n    // });\n    // socket2.on('transfercallnumber', data => {\n    //   if (localStorage.getItem('Agenttype') === 'L2') {\n    //     localStorage.setItem('callerNumber', data.contactnumber)\n    //   }\n\n    // })\n    // socket2.on('connected', data => {\n    //   console.log('connected', data);\n    //   var agentExtension = data.agentNumber;\n    //   if (agentExtension === agent.AgentSipId) {\n    //     // getInitialData();\n    //     // console.log('AstriskEventBridgeInbound', data);\n    //     localStorage.setItem('distributer_id', agent.AgentSipId);\n    //     setCurrentCallDetails(\n    //       localStorage.getItem('callStatusId'),\n    //       localStorage.getItem('callUniqueId'),\n    //       agent.AgentType,\n    //       'connected',\n    //       'Bridge',\n    //       'NotDisposed',\n    //       localStorage.getItem('callerNumber'),\n    //       localStorage.getItem('breakStatus')\n    //     );\n    //     // removeFromQueue(agent.AgentSipId, '7001');\n    //   }\n    // });\n    // socket2.on('hangup', data => {\n    //   console.log('hangup', data);\n    //   // var str = data.Channel;\n    //   // var agentsipid = str.substring(4, 8);\n    //   // console.log('agentsipid', agentsipid);\n    //   var agentExtension = data.agentNumber;\n    //   if (agentExtension === agent.AgentSipId) {\n    //     // console.log('AstriskEventHangup', data);\n    //     setCurrentCallDetails(\n    //       localStorage.getItem('callStatusId'),\n    //       localStorage.getItem('callUniqueId'),\n    //       localStorage.getItem('callType'),\n    //       'disconnected',\n    //       'Hangup',\n    //       localStorage.getItem('callDispositionStatus'),\n    //       localStorage.getItem('callerNumber'),\n    //       localStorage.getItem('breakStatus')\n    //     );\n    //   }\n    // });\n\n\n    // /////////////////////////////////////////////////////////////////////////////////////////\n\n    // ////////////////////////////////////////////////////////////////////////////////////////////\n    // //socket3//////////////////////////////////////////////////////////////////////////////////\n    // socket3.on('AstriskEvent', data => {\n    //   if (data.Event === 'Hangup') {\n    //     // console.log('AstriskEvent', data)\n    //   }\n    //   if (data.Event === 'Bridge') {\n    //     // console.log('AstriskEvent', data)\n    //   }\n\n    // })\n    // socket3.on('ringing1', data => {\n    //   console.log('ringing1', data);\n    //   // var Channel1 = data.Channel1;\n    //   var agentExtension = data.agentNumber;\n    //   if (agentExtension === agent.AgentSipId) {\n\n    //     localStorage.setItem('channel', data.event.Channel)\n    //     //   console.log('AstriskEventBridgeOutbound', data);\n\n    //     // setCurrentCallDetails(\n    //     //   localStorage.getItem('callStatusId'),\n    //     //   data.Uniqueid,\n    //     //   agent.AgentType,\n    //     //   'connected',\n    //     //   'Bridge',\n    //     //   'NotDisposed',\n    //     //   '',\n    //     //   localStorage.getItem('breakStatus')\n    //     // );\n    //   }\n    // });\n\n    // socket3.on('ringing2', data => {\n    //   console.log('ringing2', data)\n    //   // var Channel1 = data.Channel1;\n    //   var agentExtension = data.agentNumber;\n    //   if (agentExtension === agent.AgentSipId) {\n\n    //     localStorage.setItem('callUniqueId', \"332\" + data.event.Uniqueid)\n    //     localStorage.setItem('callerNumber', data.event.ConnectedLineNum)\n    //     // //   console.log('AstriskEventBridgeOutbound', data);\n\n    //     //   setCurrentCallDetails(\n    //     //     localStorage.getItem('callStatusId'),\n    //     //     localStorage.getItem('callUniqueId'),\n    //     //     agent.AgentType,\n    //     //     'connected',\n    //     //     'Bridge',\n    //     //     'NotDisposed',\n    //     //     data.contactNumber,\n    //     //     localStorage.getItem('breakStatus')\n    //     //   );\n    //   }\n    // });\n    // socket3.on('transfercallnumber', data => {\n    //   if (localStorage.getItem('Agenttype') === 'L2') {\n    //     localStorage.setItem('callerNumber', data.contactnumber)\n    //   }\n\n    // })\n    // socket3.on('connected', data => {\n    //   console.log('connected', data);\n    //   var agentExtension = data.agentNumber;\n    //   if (agentExtension === agent.AgentSipId) {\n    //     // getInitialData();\n    //     // console.log('AstriskEventBridgeInbound', data);\n    //     localStorage.setItem('distributer_id', agent.AgentSipId);\n    //     setCurrentCallDetails(\n    //       localStorage.getItem('callStatusId'),\n    //       localStorage.getItem('callUniqueId'),\n    //       agent.AgentType,\n    //       'connected',\n    //       'Bridge',\n    //       'NotDisposed',\n    //       localStorage.getItem('callerNumber'),\n    //       localStorage.getItem('breakStatus')\n    //     );\n    //     // removeFromQueue(agent.AgentSipId, '7001');\n    //   }\n    // });\n    // socket3.on('hangup', data => {\n    //   console.log('hangup', data);\n    //   // var str = data.Channel;\n    //   // var agentsipid = str.substring(4, 8);\n    //   // console.log('agentsipid', agentsipid);\n    //   var agentExtension = data.agentNumber;\n    //   if (agentExtension === agent.AgentSipId) {\n    //     // console.log('AstriskEventHangup', data);\n    //     setCurrentCallDetails(\n    //       localStorage.getItem('callStatusId'),\n    //       localStorage.getItem('callUniqueId'),\n    //       localStorage.getItem('callType'),\n    //       'disconnected',\n    //       'Hangup',\n    //       localStorage.getItem('callDispositionStatus'),\n    //       localStorage.getItem('callerNumber'),\n    //       localStorage.getItem('breakStatus')\n    //     );\n    //   }\n    // });\n\n\n    // /////////////////////////////////////////////////////////////////////////////////////////\n\n    // ////////////////////////////////////////////////////////////////////////////////////////////\n    // //socket4//////////////////////////////////////////////////////////////////////////////////\n    // socket4.on('AstriskEvent', data => {\n    //   if (data.Event === 'Hangup') {\n    //     // console.log('AstriskEvent', data)\n    //   }\n    //   if (data.Event === 'Bridge') {\n    //     // console.log('AstriskEvent', data)\n    //   }\n\n    // })\n    // socket4.on('ringing1', data => {\n    //   console.log('ringing1', data);\n    //   // var Channel1 = data.Channel1;\n    //   var agentExtension = data.agentNumber;\n    //   if (agentExtension === agent.AgentSipId) {\n\n    //     localStorage.setItem('channel', data.event.Channel)\n    //     //   console.log('AstriskEventBridgeOutbound', data);\n\n    //     // setCurrentCallDetails(\n    //     //   localStorage.getItem('callStatusId'),\n    //     //   data.Uniqueid,\n    //     //   agent.AgentType,\n    //     //   'connected',\n    //     //   'Bridge',\n    //     //   'NotDisposed',\n    //     //   '',\n    //     //   localStorage.getItem('breakStatus')\n    //     // );\n    //   }\n    // });\n\n    // socket4.on('ringing2', data => {\n    //   console.log('ringing2', data)\n    //   // var Channel1 = data.Channel1;\n    //   var agentExtension = data.agentNumber;\n    //   if (agentExtension === agent.AgentSipId) {\n\n    //     localStorage.setItem('callUniqueId', \"334\" + data.event.Uniqueid)\n    //     localStorage.setItem('callerNumber', data.event.ConnectedLineNum)\n    //     // //   console.log('AstriskEventBridgeOutbound', data);\n\n    //     //   setCurrentCallDetails(\n    //     //     localStorage.getItem('callStatusId'),\n    //     //     localStorage.getItem('callUniqueId'),\n    //     //     agent.AgentType,\n    //     //     'connected',\n    //     //     'Bridge',\n    //     //     'NotDisposed',\n    //     //     data.contactNumber,\n    //     //     localStorage.getItem('breakStatus')\n    //     //   );\n    //   }\n    // });\n    // socket4.on('transfercallnumber', data => {\n    //   if (localStorage.getItem('Agenttype') === 'L2') {\n    //     localStorage.setItem('callerNumber', data.contactnumber)\n    //   }\n\n    // })\n    // socket4.on('connected', data => {\n    //   console.log('connected', data);\n    //   var agentExtension = data.agentNumber;\n    //   if (agentExtension === agent.AgentSipId) {\n    //     // getInitialData();\n    //     // console.log('AstriskEventBridgeInbound', data);\n    //     localStorage.setItem('distributer_id', agent.AgentSipId);\n    //     setCurrentCallDetails(\n    //       localStorage.getItem('callStatusId'),\n    //       localStorage.getItem('callUniqueId'),\n    //       agent.AgentType,\n    //       'connected',\n    //       'Bridge',\n    //       'NotDisposed',\n    //       localStorage.getItem('callerNumber'),\n    //       localStorage.getItem('breakStatus')\n    //     );\n    //     // removeFromQueue(agent.AgentSipId, '7001');\n    //   }\n    // });\n    // socket4.on('hangup', data => {\n    //   console.log('hangup', data);\n    //   // var str = data.Channel;\n    //   // var agentsipid = str.substring(4, 8);\n    //   // console.log('agentsipid', agentsipid);\n    //   var agentExtension = data.agentNumber;\n    //   if (agentExtension === agent.AgentSipId) {\n    //     // console.log('AstriskEventHangup', data);\n    //     setCurrentCallDetails(\n    //       localStorage.getItem('callStatusId'),\n    //       localStorage.getItem('callUniqueId'),\n    //       localStorage.getItem('callType'),\n    //       'disconnected',\n    //       'Hangup',\n    //       localStorage.getItem('callDispositionStatus'),\n    //       localStorage.getItem('callerNumber'),\n    //       localStorage.getItem('breakStatus')\n    //     );\n    //   }\n    // });\n\n\n    // /////////////////////////////////////////////////////////////////////////////////////////\n\n\n\n    // ////////////////////////////////////////////////////////////////////////////////////////////\n    // //socket5//////////////////////////////////////////////////////////////////////////////////\n    // socket5.on('AstriskEvent', data => {\n    //   if (data.Event === 'Hangup') {\n    //     // console.log('AstriskEvent', data)\n    //   }\n    //   if (data.Event === 'Bridge') {\n    //     // console.log('AstriskEvent', data)\n    //   }\n\n    // })\n    // socket5.on('ringing1', data => {\n    //   console.log('ringing1', data);\n    //   // var Channel1 = data.Channel1;\n    //   var agentExtension = data.agentNumber;\n    //   if (agentExtension === agent.AgentSipId) {\n\n    //     localStorage.setItem('channel', data.event.Channel)\n    //     //   console.log('AstriskEventBridgeOutbound', data);\n\n    //     // setCurrentCallDetails(\n    //     //   localStorage.getItem('callStatusId'),\n    //     //   data.Uniqueid,\n    //     //   agent.AgentType,\n    //     //   'connected',\n    //     //   'Bridge',\n    //     //   'NotDisposed',\n    //     //   '',\n    //     //   localStorage.getItem('breakStatus')\n    //     // );\n    //   }\n    // });\n\n    // socket5.on('ringing2', data => {\n    //   console.log('ringing2', data)\n    //   // var Channel1 = data.Channel1;\n    //   var agentExtension = data.agentNumber;\n    //   if (agentExtension === agent.AgentSipId) {\n\n    //     localStorage.setItem('callUniqueId', \"3011\" + data.event.Uniqueid)\n    //     localStorage.setItem('callerNumber', data.event.ConnectedLineNum)\n    //     // //   console.log('AstriskEventBridgeOutbound', data);\n\n    //     //   setCurrentCallDetails(\n    //     //     localStorage.getItem('callStatusId'),\n    //     //     localStorage.getItem('callUniqueId'),\n    //     //     agent.AgentType,\n    //     //     'connected',\n    //     //     'Bridge',\n    //     //     'NotDisposed',\n    //     //     data.contactNumber,\n    //     //     localStorage.getItem('breakStatus')\n    //     //   );\n    //   }\n    // });\n    // socket5.on('transfercallnumber', data => {\n    //   if (localStorage.getItem('Agenttype') === 'L2') {\n    //     localStorage.setItem('callerNumber', data.contactnumber)\n    //   }\n\n    // })\n    // socket5.on('connected', data => {\n    //   console.log('connected', data);\n    //   var agentExtension = data.agentNumber;\n    //   if (agentExtension === agent.AgentSipId) {\n    //     // getInitialData();\n    //     // console.log('AstriskEventBridgeInbound', data);\n    //     localStorage.setItem('distributer_id', agent.AgentSipId);\n    //     setCurrentCallDetails(\n    //       localStorage.getItem('callStatusId'),\n    //       localStorage.getItem('callUniqueId'),\n    //       agent.AgentType,\n    //       'connected',\n    //       'Bridge',\n    //       'NotDisposed',\n    //       localStorage.getItem('callerNumber'),\n    //       localStorage.getItem('breakStatus')\n    //     );\n    //     // removeFromQueue(agent.AgentSipId, '7001');\n    //   }\n    // });\n    // socket5.on('hangup', data => {\n    //   console.log('hangup', data);\n    //   // var str = data.Channel;\n    //   // var agentsipid = str.substring(4, 8);\n    //   // console.log('agentsipid', agentsipid);\n    //   var agentExtension = data.agentNumber;\n    //   if (agentExtension === agent.AgentSipId) {\n    //     // console.log('AstriskEventHangup', data);\n    //     setCurrentCallDetails(\n    //       localStorage.getItem('callStatusId'),\n    //       localStorage.getItem('callUniqueId'),\n    //       localStorage.getItem('callType'),\n    //       'disconnected',\n    //       'Hangup',\n    //       localStorage.getItem('callDispositionStatus'),\n    //       localStorage.getItem('callerNumber'),\n    //       localStorage.getItem('breakStatus')\n    //     );\n    //   }\n    // });\n\n\n    /////////////////////////////////////////////////////////////////////////////////////////\n\n\n\n    return () => {\n      // socket1.off('ringing');\n      // socket1.off('connected');\n      // socket1.off('hangup');\n      // socket1.off('transfercallnumber');\n\n      // socket2.off('ringing');\n      // socket2.off('connected');\n      // socket2.off('hangup');\n      // socket2.off('transfercallnumber');\n\n      // socket3.off('ringing');\n      // socket3.off('connected');\n      // socket3.off('hangup');\n      // socket3.off('transfercallnumber');\n\n      // socket4.off('ringing');\n      // socket4.off('connected');\n      // socket4.off('hangup');\n      // socket4.off('transfercallnumber');\n\n      // socket5.off('ringing');\n      // socket5.off('connected');\n      // socket5.off('hangup');\n      // socket5.off('transfercallnumber');\n\n    };\n  }, []);\n\n  useEffect(() => {\n    // console.log('data second useEffect', currentCall);\n    // console.log('currentCall.callerNumber', currentCall.callerNumber);\n\n\n    if (\n      currentCall.callerNumber !== '' &&\n      currentCall.callDispositionStatus === 'NotDisposed'\n    ) {\n      disProfileByNum(currentCall.callerNumber);\n      getDLF();\n\n    }\n    // getALF();\n    if (localStorage.getItem('Agenttype') === 'L1') {\n      // getOpenTickets(localStorage.getItem('Agenttype'), 'open');\n    }\n    if (localStorage.getItem('Agenttype') === 'L2') {\n      getOpenTickets('L1', 'open');\n    }\n    if (localStorage.getItem('Agenttype') === 'L3') {\n      getOpenTickets('L2', 'open');\n    }\n\n  }, [\n    currentCall.callDispositionStatus,\n    currentCall.callStatus,\n    currentCall.breakStatus\n  ]);\n\n  let history = useHistory();\n\n  useEffect(() => {\n    // console.log(\"currentCall\", currentCall)\n    if (reduxState.searchDistributor.length >= 4) {\n      get(reduxState.searchDistributor);\n    } else {\n      get();\n    }\n  }, [reduxState.searchDistributor]);\n\n\n  return !loadingDetails && loginToken ? (\n    <div style={{ position: 'relative' }}>\n      {currentCall.callStatus === 'connected' && currentCall.callDispositionStatus != 'Disposed' ? (\n        <div>\n\n          <Box\n            alignItems=\"center\"\n            display=\"flex\"\n            className={`${classes.timerComp} ${classes.callWrapper} ${classes.callInbound}`}\n          >\n            <CallIcon />\n            &nbsp;\n            <Typography display=\"inline\">\n              Inbound Call In Progress\n            </Typography>\n          </Box>{' '}\n        </div>\n      ) : null}\n      {currentCall.callDispositionStatus === 'NotDisposed' &&\n        currentCall.callStatus === 'disconnected' ? (\n        <div>\n\n          <Box\n            alignItems=\"center\"\n            display=\"flex\"\n            className={`${classes.timerComp} ${classes.callWrapper} ${classes.callOutbound}`}\n          >\n            <CallIcon />\n            &nbsp;\n            <Typography display=\"inline\">\n              Inbound Call Is Disconnected\n            </Typography>\n          </Box>{' '}\n        </div>\n      ) : null}\n      <CustomBreadcrumbs />\n      {/* <button onClick={history.push(\"/dash360\")}>fetch info</button> */}\n\n      {\n        agent.AgentType === 'Outbound' &&\n          localStorage.getItem('callDispositionStatus') === 'Disposed' &&\n          localStorage.getItem('callStatus') === 'disconnected' &&\n          localStorage.getItem('breakStatus') === 'OUT' ? (\n          <div>\n            <Input value={mobile} onChange={onChange} margin=\"dense\" />\n            <CallIcon onClick={onClick} />\n\n          </div>\n        ) : null\n      }\n      <Page className={classes.root} title=\"Dashboard\">\n        <Container maxWidth={false}>\n          <Grid container spacing={3}>\n            <Grid item lg={4} md={6} xs={12}>\n              {user_Details.AgentQueueStatus === 'dynamic' ?\n                <Grid item>\n\n\n                  {currentCall.callDispositionStatus === 'Disposed' ? <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    style={{ color: 'white' }}\n                    onClick={(e) => breakService(e)}\n                  >\n                    {currentCall.breakStatus === 'OUT' || currentCall.breakStatus === 'NA' ? <label>TAKE A BREAK</label> : <label>YOU ARE IN BREAK</label>}\n                  </Button> : null}\n                  {/* <Button\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  style={{ color: 'white' }}\n                  onClick={e => breakService(e)}\n                >\n\n                  <label>Break IN</label>\n\n                </Button> */}\n\n                </Grid> : null}\n\n\n            </Grid>\n\n\n\n          </Grid>\n          <Grid container spacing={3}>\n            <Grid item lg={4} md={4} xs={12}>\n\n              <Grid item>\n                {localStorage.getItem('Agenttype') === 'L2' ?\n                  <Card>\n                    <CardHeader title={'Caller details'} />\n\n                    <div>\n                      <DealerCard\n                        dealerDetails={dealerDetails}\n                      />\n                    </div>\n\n                  </Card> : null}\n                <br />\n                {/* <Card>\n                  <CardHeader title={'Caller last five interactions'} />\n                  {DLF.length && currentCall.callDispositionStatus === 'NotDisposed'? (\n                    <div>\n                      <BasicTable\n                        columns={lastFiveCallData}\n                        records={ALF.slice(0, 3)}\n                        redirectLink=\"/dash360/admin/distributerDisposedCallList\"\n                        redirectLabel=\"View All\"\n                      />\n                    </div>\n                  ) : (\n                      <CommonAlert text=\"Unable to get Caller details\" />\n                    )}\n                </Card> */}\n                <br />\n                {localStorage.getItem('Agenttype') === 'L2' ?\n                  <Card>\n                    <CardHeader\n                      title={\n                        'Open Tickets (' + agent.AgentSipId + ')'\n                      }\n                    />\n                    {ALF.length ? (\n                      <div>\n                        <BasicTable\n                          setRootData={setRootData}\n                          setdealerDetails={setdealerDetails}\n                          columns={lastFiveCallData}\n                          records={ALF.slice(0, 3)}\n                        // redirectLink=\"/dash360/admin/agentlastfive\"\n                        // redirectLabel=\"View All\"\n                        />\n                      </div>\n                    ) : (\n                      <CommonAlert text=\"N/A\" />\n                    )}\n                  </Card> : null}\n              </Grid>\n            </Grid>\n            {localStorage.getItem('Agenttype') === 'L2' ?\n              <Grid item lg={8} md={12} xs={12}>\n\n                <Card>\n                  <CardHeader title=\"Interaction Details\" />\n                  <Divider />\n                  {currentCall.callDispositionStatus === 'NotDisposed' &&\n                    user.userType === 'Agent' ? (<CardContent>\n                      <DispositionForm\n                        agentSipID={agent.AgentSipId}\n                        DLF={DLF}\n                        setCurrentCallDetails={setCurrentCallDetails}\n                        addToQueue={addToQueue}\n                        removeFromQueue={removeFromQueue}\n                        // getALF={getALF}\n                        disForm={disForm}\n                        setdisForm={form => {\n                          setdisForm(form);\n                        }}\n                        category={category}\n                        setCategory={cat => {\n                          setCategory(cat);\n                        }}\n                        ticketType={ticketType}\n                        setTicketType={tkstyp => {\n                          setTicketType(tkstyp);\n                        }}\n                        subCategory={subCategory}\n                        setSubCategory={subcat => {\n                          setSubCategory(subcat);\n                        }}\n                        subCategoryItem={subCategoryItem}\n                        setSubCategoryItem={subcatitem => {\n                          setSubCategoryItem(subcatitem);\n                        }}\n                        remarks={remarks}\n                        setRemarks={rks => {\n                          setRemarks(rks);\n                        }}\n                      />\n                    </CardContent>\n                  ) : (\n                    <></>\n                    // <CommonAlert text=\"Unable to get disposition details\" />\n                  )}\n                </Card>\n\n\n                <br />\n                {/* <FAQ /> */}\n                <Iframe url=\"http://106.51.86.75:4444\"\n                  position=\"absolute\"\n                  width=\"100%\"\n                  height=\"500Px\"\n                  id=\"myId\"\n                  className=\"myClassname\"\n                  display=\"initial\"\n                  position=\"relative\" />\n              </Grid> :\n              <Grid item lg={12} md={12} xs={12}>\n\n                <Card>\n                  {currentCall.callDispositionStatus === 'NotDisposed' ? <CardHeader title={`Disposition Details-Call Reference Id :: ${localStorage.getItem('callUniqueId')}`} />\n                    : <CardHeader title={`Disposition Details`} />}\n                  <Divider />\n                  {currentCall.callDispositionStatus === 'NotDisposed' &&\n                    user.userType === 'Agent' ? (<CardContent>\n                      <DispositionForm\n                        agentSipID={agent.AgentSipId}\n                        DLF={DLF}\n                        setCurrentCallDetails={setCurrentCallDetails}\n                        addToQueue={addToQueue}\n                        removeFromQueue={removeFromQueue}\n                        // getALF={getALF}\n                        disForm={disForm}\n                        setdisForm={form => {\n                          setdisForm(form);\n                        }}\n                        category={category}\n                        setCategory={cat => {\n                          setCategory(cat);\n                        }}\n                        ticketType={ticketType}\n                        setTicketType={tkstyp => {\n                          setTicketType(tkstyp);\n                        }}\n                        subCategory={subCategory}\n                        setSubCategory={subcat => {\n                          setSubCategory(subcat);\n                        }}\n                        subCategoryItem={subCategoryItem}\n                        setSubCategoryItem={subcatitem => {\n                          setSubCategoryItem(subcatitem);\n                        }}\n                        remarks={remarks}\n                        setRemarks={rks => {\n                          setRemarks(rks);\n                        }}\n                      />\n                    </CardContent>\n                  ) : (\n                    <></>\n                    // <CommonAlert text=\"Unable to get disposition details\" />\n                  )}\n                </Card>\n\n\n                <br />\n                {/* <FAQ /> */}\n                <Iframe url=\"http://106.51.86.75:4444\"\n                  width=\"100%\"\n                  height=\"500Px\"\n                  id=\"myId\"\n                  className=\"myClassname\"\n                  display=\"initial\"\n                  position=\"relative\" />\n              </Grid>\n            }\n\n          </Grid>\n\n        </Container>\n      </Page>\n\n    </div >\n  ) : (\n    <MainLoader />\n  );\n};\nDashboard.propTypes = {\n  distributorOrders: PropTypes.arrayOf(PropTypes.object),\n  agentCurrentStatus: PropTypes.arrayOf(PropTypes.object),\n  setDistributorOrdersAction: PropTypes.func,\n  setAgentCurrentStatusAction: PropTypes.func,\n  searchDistributor: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    distributorOrders: state.distributorOrders,\n    agentCurrentStatus: state.currentCall,\n    searchDistributor: state.searchDistributor\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDistributorOrdersAction: orders =>\n      dispatch(setDistributorOrders(orders)),\n    setAgentCurrentStatusAction: currentCall =>\n      dispatch(setAgentCurrentStatus(currentCall)),\n    setSearchDistributor: dist => dispatch(setSearchDistributor(dist))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n","import { v4 as uuid } from 'uuid';\n\nexport default [\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'West Virginia',\n      city: 'Parkersburg',\n      street: '2849 Fulton Street'\n    },\n    avatarUrl: '/static/images/avatars/avatar_3.png',\n    createdAt: 1555016400000,\n    email: 'ekaterina.tankova@devias.io',\n    name: 'Ekaterina Tankova',\n    phone: '304-428-3097'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Bristow',\n      city: 'Iowa',\n      street: '1865  Pleasant Hill Road'\n    },\n    avatarUrl: '/static/images/avatars/avatar_4.png',\n    createdAt: 1555016400000,\n    email: 'cao.yu@devias.io',\n    name: 'Cao Yu',\n    phone: '712-351-5711'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Georgia',\n      city: 'Atlanta',\n      street: '4894  Lakeland Park Drive'\n    },\n    avatarUrl: '/static/images/avatars/avatar_2.png',\n    createdAt: 1555016400000,\n    email: 'alexa.richardson@devias.io',\n    name: 'Alexa Richardson',\n    phone: '770-635-2682'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Ohio',\n      city: 'Dover',\n      street: '4158  Hedge Street'\n    },\n    avatarUrl: '/static/images/avatars/avatar_5.png',\n    createdAt: 1554930000000,\n    email: 'anje.keizer@devias.io',\n    name: 'Anje Keizer',\n    phone: '908-691-3242'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Texas',\n      city: 'Dallas',\n      street: '75247'\n    },\n    avatarUrl: '/static/images/avatars/avatar_6.png',\n    createdAt: 1554757200000,\n    email: 'clarke.gillebert@devias.io',\n    name: 'Clarke Gillebert',\n    phone: '972-333-4106'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'California',\n      city: 'Bakerfield',\n      street: '317 Angus Road'\n    },\n    avatarUrl: '/static/images/avatars/avatar_1.png',\n    createdAt: 1554670800000,\n    email: 'adam.denisov@devias.io',\n    name: 'Adam Denisov',\n    phone: '858-602-3409'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'California',\n      city: 'Redondo Beach',\n      street: '2188  Armbrester Drive'\n    },\n    avatarUrl: '/static/images/avatars/avatar_7.png',\n    createdAt: 1554325200000,\n    email: 'ava.gregoraci@devias.io',\n    name: 'Ava Gregoraci',\n    phone: '415-907-2647'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Nevada',\n      city: 'Las Vegas',\n      street: '1798  Hickory Ridge Drive'\n    },\n    avatarUrl: '/static/images/avatars/avatar_8.png',\n    createdAt: 1523048400000,\n    email: 'emilee.simchenko@devias.io',\n    name: 'Emilee Simchenko',\n    phone: '702-661-1654'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Michigan',\n      city: 'Detroit',\n      street: '3934  Wildrose Lane'\n    },\n    avatarUrl: '/static/images/avatars/avatar_9.png',\n    createdAt: 1554702800000,\n    email: 'kwak.seong.min@devias.io',\n    name: 'Kwak Seong-Min',\n    phone: '313-812-8947'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Utah',\n      city: 'Salt Lake City',\n      street: '368 Lamberts Branch Road'\n    },\n    avatarUrl: '/static/images/avatars/avatar_10.png',\n    createdAt: 1522702800000,\n    email: 'merrile.burgett@devias.io',\n    name: 'Merrile Burgett',\n    phone: '801-301-7894'\n  }\n];\n","import { DataGrid } from '@material-ui/data-grid';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { setDistributorInvoices } from 'src/modules/dashboard-360/redux/action';\nimport { AgentCallColumns } from 'src/modules/dashboard-360/utils/columns-config';\nimport PropTypes from 'prop-types';\nimport CommonAlert from 'src/components/CommonAlert';\nimport MainLoader from 'src/components/MainLoader';\nimport { Box, makeStyles, Typography } from '@material-ui/core';\nimport {\n  getDealerInvoiceDetails,\n  getSingleInvoiceDetails\n} from '../../DashboardView/apiCalls';\nimport { AGENT_SERVICE_URL } from '../../../utils/endpoints';\nimport CustomBreadcrumbs from 'src/components/CustomBreadcrumbs';\nimport DownloadReport from '../../DashboardView/DownloadReport';\n\nconst style = makeStyles(() => ({\n  dgContainer: {\n    maxHeight: 628,\n    paddingLeft: '16px',\n    paddingRight: '16px'\n  }\n}));\nfunction Invoices({\n  distributorInvoices,\n  setDistributorInvoicesAction,\n  ...props\n}) {\n  const classes = style();\n  const [showLoader, setShowLoader] = useState(true);\n  const {\n    match: {\n      params: { orderId }\n    }\n  } = props;\n\n\n  const [invoiceDetails, setSingleInvoiceDetails] = useState(null);\n  const [agentdisposedCalls, setagentdisposedCalls] = useState([]);\n\n  const orderIdPrev = useRef(orderId);\n\n  const agentServiceURL = `${AGENT_SERVICE_URL}/`;\n  function getALF() {\n    const axios = require('axios');\n    let data = '';\n\n    let config = {\n      method: 'get',\n      url:\n        agentServiceURL +\n        'crm/interactions/getByAgentSIPID?SipID=' +\n        localStorage.getItem('AgentSIPID') +\n        '',\n      headers: {},\n      data: data\n    };\n\n    axios(config)\n      .then(async response => {\n        var ALFDATA = response.data;\n        console.log('ALFDATA', ALFDATA);\n        ALFDATA = ALFDATA.reverse();\n        setagentdisposedCalls(ALFDATA);\n      })\n\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  useEffect(() => {\n    getALF();\n    if (!distributorInvoices || orderIdPrev !== orderId) {\n      (async function getDetails() {\n        try {\n          const res = await (orderId\n            ? getSingleInvoiceDetails(orderId)\n            : getDealerInvoiceDetails(1001));\n          if (!orderId) {\n            setDistributorInvoicesAction(res.data.data);\n          } else {\n            setSingleInvoiceDetails(res.data.data);\n          }\n        } catch (error) {\n        } finally {\n          setShowLoader(false);\n        }\n      })();\n    }\n  }, [orderId]);\n  const [page, setPage] = useState(1);\n  return agentdisposedCalls ? (\n    // <Card>\n    <div className={classes.dgContainer}>\n      <Box>\n        <CustomBreadcrumbs />\n      </Box>\n      <Box padding=\"1rem 0.5rem\">\n        <Typography variant=\"h6\" component=\"h4\">\n          All Disposed Calls\n        </Typography>\n      </Box>\n      {agentdisposedCalls.length ? (\n        <DownloadReport DownloadData={agentdisposedCalls} />\n      ) : (\n        <></>\n      )}\n      <DataGrid\n        page={page}\n        onPageChange={params => {\n          setPage(params.page);\n        }}\n        pageSize={10}\n        rowsPerPageOptions={[5, 10, 20]}\n        pagination\n        autoHeight\n        columns={AgentCallColumns}\n        exportButton={true}\n        rows={agentdisposedCalls.map(calls => ({\n          ...calls,\n          id: calls._id\n        }))}\n      />\n    </div>\n  ) : // </Card>\n    showLoader ? (\n      <MainLoader />\n    ) : (\n      <CommonAlert style={{ margin: 20 }} />\n    );\n}\n\nInvoices.propTypes = {\n  distributorInvoices: PropTypes.arrayOf(PropTypes.object),\n  setDistributorInvoicesAction: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  distributorInvoices: state.distributorInvoices\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setDistributorInvoicesAction: invoices =>\n    dispatch(setDistributorInvoices(invoices))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Invoices);\n","import { DataGrid } from '@material-ui/data-grid';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { setDistributorInvoices } from 'src/modules/dashboard-360/redux/action';\nimport { DistributerCallColumns } from 'src/modules/dashboard-360/utils/columns-config';\nimport PropTypes from 'prop-types';\nimport CommonAlert from 'src/components/CommonAlert';\nimport MainLoader from 'src/components/MainLoader';\nimport { Box, makeStyles, Typography } from '@material-ui/core';\nimport {\n  getDealerInvoiceDetails,\n  getSingleInvoiceDetails\n} from '../../DashboardView/apiCalls';\nimport CustomBreadcrumbs from 'src/components/CustomBreadcrumbs';\nimport DownloadReport from '../../DashboardView/DownloadReport';\n\nconst style = makeStyles(() => ({\n  dgContainer: {\n    maxHeight: 628,\n    paddingLeft: '16px',\n    paddingRight: '16px'\n  }\n}));\nfunction Invoices({\n  distributorInvoices,\n  setDistributorInvoicesAction,\n  ...props\n}) {\n  const classes = style();\n  const [showLoader, setShowLoader] = useState(true);\n  const {\n    match: {\n      params: { orderId }\n    }\n  } = props;\n\n  const [invoiceDetails, setSingleInvoiceDetails] = useState(null);\n  const [agentdisposedCalls, setagentdisposedCalls] = useState([]);\n\n  const orderIdPrev = useRef(orderId);\n\n  const agentServiceURL = `Agent_service_url/`;\n  function getALF() {\n    const axios = require('axios');\n    let data = '';\n    let config = {\n      method: 'get',\n      url:\n        agentServiceURL +\n        'crm/interactions/getByDistributerID?distributerID=' +\n        localStorage.getItem('distributer_id') +\n        '',\n      headers: {},\n      data: data\n    };\n\n    axios(config)\n      .then(async response => {\n        var ALFDATA = response.data;\n        ALFDATA = ALFDATA.reverse();\n        setagentdisposedCalls(ALFDATA);\n      })\n\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  useEffect(() => {\n    getALF();\n    if (!distributorInvoices || orderIdPrev !== orderId) {\n      (async function getDetails() {\n        try {\n          const res = await (orderId\n            ? getSingleInvoiceDetails(orderId)\n            : getDealerInvoiceDetails(1001));\n          if (!orderId) {\n            setDistributorInvoicesAction(res.data.data);\n          } else {\n            setSingleInvoiceDetails(res.data.data);\n          }\n        } catch (error) {\n        } finally {\n          setShowLoader(false);\n        }\n      })();\n    }\n  }, [orderId]);\n  const [page, setPage] = useState(1);\n  return agentdisposedCalls ? (\n    // <Card>\n    <div className={classes.dgContainer}>\n      <Box>\n        <CustomBreadcrumbs />\n      </Box>\n      <Box padding=\"1rem 0.5rem\">\n        <Typography variant=\"h6\" component=\"h4\">\n          All Disposed Calls\n        </Typography>\n      </Box>\n      {agentdisposedCalls.length > 0 ? (\n        <DownloadReport DownloadData={agentdisposedCalls} />\n      ) : (\n        <></>\n      )}\n      <DataGrid\n        page={page}\n        onPageChange={params => {\n          setPage(params.page);\n        }}\n        pageSize={10}\n        rowsPerPageOptions={[5, 10, 20]}\n        pagination\n        autoHeight\n        columns={DistributerCallColumns}\n        rows={agentdisposedCalls.map(calls => ({\n          ...calls,\n          id: calls._id\n        }))}\n      />\n    </div>\n  ) : // </Card>\n    showLoader ? (\n      <MainLoader />\n    ) : (\n      <CommonAlert style={{ margin: 20 }} />\n    );\n}\n\nInvoices.propTypes = {\n  distributorInvoices: PropTypes.arrayOf(PropTypes.object),\n  setDistributorInvoicesAction: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  distributorInvoices: state.distributorInvoices\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setDistributorInvoicesAction: invoices =>\n    dispatch(setDistributorInvoices(invoices))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Invoices);\n","import invoices from '../views/admin/invoices';\nimport Orders from '../views/admin/orders';\nimport Dashboard from '../views/DashboardView/index';\nimport agentDispostionList from '../views/admin/agentlastfive';\nimport distribuerCallDisposedList from '../views/admin/distributerlastfive';\n\nexport default [\n  {\n    path: '/dashboard',\n    exact: false,\n    key: 'dashboard',\n    component: Dashboard\n  },\n  {\n    path: '/orders',\n    exact: true,\n    key: 'order',\n    component: Orders,\n    crumb: 'Orders'\n  },\n  {\n    path: '/orders/:orderId',\n    exact: true,\n    key: 'orderWithId',\n    component: Orders\n  },\n  {\n    path: '/invoices',\n    exact: true,\n    key: 'invoices',\n    component: invoices,\n    crumb: 'Invoices'\n  },\n  {\n    path: '/invoices/:orderId',\n    exact: true,\n    key: 'invoicesWithId',\n    component: invoices\n  },\n  {\n    path: '/agentlastfive',\n    exact: true,\n    key: 'agentlastfive',\n    component: agentDispostionList,\n    crumb: 'Agent Dispositon List'\n  },\n  {\n    path: '/agentlastfive/:uniqueId',\n    exact: true,\n    key: 'uniqueId',\n    component: agentDispostionList\n  },\n  {\n    path: '/distributerDisposedCallList',\n    exact: true,\n    key: 'distributerDisposedCallList',\n    component: distribuerCallDisposedList,\n    crumb: 'Distributer Call Dispositon List'\n  },\n  {\n    path: '/distributercall/:uniqueId',\n    exact: true,\n    key: 'distributerCallById',\n    component: distribuerCallDisposedList\n  }\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst user = {\n  avatar: '/static/images/avatars/avatar_6.png',\n  city: 'Los Angeles',\n  country: 'USA',\n  jobTitle: 'Senior Developer',\n  name: 'Katarina Smith',\n  timezone: 'GTM-7'\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    height: 100,\n    width: 100\n  }\n}));\n\nconst Profile = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Box\n          alignItems=\"center\"\n          display=\"flex\"\n          flexDirection=\"column\"\n        >\n          <Avatar\n            className={classes.avatar}\n            src={user.avatar}\n          />\n          <Typography\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            {user.name}\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"body1\"\n          >\n            {`${user.city} ${user.country}`}\n          </Typography>\n          <Typography\n            className={classes.dateText}\n            color=\"textSecondary\"\n            variant=\"body1\"\n          >\n            {`${moment().format('hh:mm A')} ${user.timezone}`}\n          </Typography>\n        </Box>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button\n          color=\"primary\"\n          fullWidth\n          variant=\"text\"\n        >\n          Upload picture\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nProfile.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\n\nconst states = [\n  {\n    value: 'alabama',\n    label: 'Alabama'\n  },\n  {\n    value: 'new-york',\n    label: 'New York'\n  },\n  {\n    value: 'san-francisco',\n    label: 'San Francisco'\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst ProfileDetails = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    firstName: 'Katarina',\n    lastName: 'Smith',\n    email: 'demo@devias.io',\n    phone: '',\n    state: 'Alabama',\n    country: 'USA'\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <form\n      autoComplete=\"off\"\n      noValidate\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"The information can be edited\"\n          title=\"Profile\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                helperText=\"Please specify the first name\"\n                label=\"First name\"\n                name=\"firstName\"\n                onChange={handleChange}\n                required\n                value={values.firstName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                name=\"lastName\"\n                onChange={handleChange}\n                required\n                value={values.lastName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                onChange={handleChange}\n                required\n                value={values.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Phone Number\"\n                name=\"phone\"\n                onChange={handleChange}\n                type=\"number\"\n                value={values.phone}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Country\"\n                name=\"country\"\n                onChange={handleChange}\n                required\n                value={values.country}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Select State\"\n                name=\"state\"\n                onChange={handleChange}\n                required\n                select\n                SelectProps={{ native: true }}\n                value={values.state}\n                variant=\"outlined\"\n              >\n                {states.map((option) => (\n                  <option\n                    key={option.value}\n                    value={option.value}\n                  >\n                    {option.label}\n                  </option>\n                ))}\n              </TextField>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Save details\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nProfileDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProfileDetails;\n","import React from 'react';\nimport { Container, Grid, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Profile from './Profile';\nimport ProfileDetails from './ProfileDetails';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Account = () => {\n  const classes = useStyles();\n\n  return (\n    <Page className={classes.root} title=\"Account\">\n      <Container maxWidth=\"lg\">\n        <Grid container spacing={3}>\n          <Grid item lg={4} md={6} xs={12}>\n            <Profile />\n          </Grid>\n          <Grid item lg={8} md={6} xs={12}>\n            <ProfileDetails />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Account;\n","import Account from '../views/account/AccountView';\n\nexport default [\n    {\n        path: '/profile',\n        exact: false,\n        key: 'profile',\n        component: Account\n    }\n];\n","import React from 'react';\nimport { useLocation } from 'react-router';\nimport RouteSwitch from 'src/components/RouteSwitch';\n\n\nconst MainLayout = ({ routes }) => {\n\n  const location = useLocation();\n\n  const isAdmin = location.pathname.startsWith('/admin');\n\n  return (\n    <>\n      {/* Moved to App.js */}\n      {/* <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\n      <NavBar\n        onMobileClose={() => setMobileNavOpen(false)}\n        openMobile={isMobileNavOpen}\n      /> */}\n      <RouteSwitch\n        routes={routes}\n        redirectPath={isAdmin ? '/admin/dashboard' : ''}\n      />\n    </>\n  );\n};\n\nexport default MainLayout;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport TopBar from 'src/components/TopBar';\nimport NavBar from './NavBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 256\n    }\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst DashboardLayout = () => {\n  const classes = useStyles();\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n\n  return (\n    <div className={classes.root}>\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\n      <NavBar\n        onMobileClose={() => setMobileNavOpen(false)}\n        openMobile={isMobileNavOpen}\n      />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <span>XYZ</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardLayout;\n","import { ADMIN, USER } from '../../../redux/constants';\nimport adminRoutes from './adminRoutes';\nimport userRoutes from './userRoutes';\nimport MainLayout from '../layouts/MainLayout/index';\nimport DashboardLayout from '../layouts/DashboardLayout/index';\n\nexport default [\n    {\n        path: '/admin',\n        accountType: ADMIN,\n        routes: adminRoutes,\n        key: 'admin',\n        component: MainLayout\n    },\n    {\n        path: '/user',\n        accountType: USER,\n        routes: userRoutes,\n        key: 'user',\n        component: DashboardLayout\n    }\n];\n","import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { Button } from '@material-ui/core';\n\nexport default function MaterialUIPickers(props) {\n  const [startDate, setStartDate] = React.useState(new Date());\n  const [endDate, setEndDate] = React.useState(new Date());\n  const handleSubmit = (e) => {\n    props.getALF(startDate, endDate)\n  };\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid item lg={3} sm={6}>\n        <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"dd/MM/yyyy\"\n          margin=\"normal\"\n          id=\"date-picker-inline\"\n          label=\"Start Date\"\n          value={startDate}\n          onChange={date => {\n            props.handleChange()\n            setStartDate(date)\n          }}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n      </Grid>\n      <Grid item lg={3} sm={6}>\n        <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"dd/MM/yyyy\"\n          margin=\"normal\"\n          id=\"date-picker-inline\"\n          label=\"End Date\"\n          value={endDate}\n          onChange={date => {\n            props.handleChange()\n            setEndDate(date)\n          }}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n      </Grid>\n      <Grid item lg={3} sm={6}>\n        <br />\n        <Button size=\"large\" variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Submit</Button>\n      </Grid>\n      <Grid item lg={3} sm={6}>\n        <br />\n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { DistributerCallColumns } from '../../../../../src/modules/dashboard-360/utils/columns-config';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        display: 'flex'\n    },\n    grey: {\n        color: theme.palette.getContrastText(grey[50]),\n        backgroundColor: grey[50]\n    },\n    menuButton: {\n        marginRight: theme.spacing(2)\n    },\n    title: {\n        flexGrow: 1\n    },\n    paper: {\n        textAlign: 'center'\n    },\n    list: {},\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.default,\n        marginRight: '0.5vw'\n    },\n    listItem: {\n        padding: 0\n    },\n    cardcontent: {\n        padding: '0 0 0 5%',\n        '&:last-child': {\n            paddingBottom: 0\n        }\n    }\n}));\n\n\nconst DisInboundTable = (props) => {\n    const classes = useStyles();\n    const [page, setPage] = useState(1);\n    const [agentdisposedCalls, setagentdisposedCalls] = useState([])\n    useEffect(() => {\n        if (props.agentdisposedCalls.length) {\n            setagentdisposedCalls(props.agentdisposedCalls)\n        }\n\n    }, [agentdisposedCalls]);\n    return (\n        <>\n            <div className={classes.root}>\n\n                {agentdisposedCalls.length ?\n                    <DataGrid\n                        page={page}\n                        onPageChange={params => {\n                            setPage(params.page);\n                        }}\n                        pageSize={10}\n                        rowsPerPageOptions={[5, 10, 20]}\n                        pagination\n                        autoHeight\n                        columns={DistributerCallColumns}\n                        rows={agentdisposedCalls.map(calls => ({\n                            ...calls,\n                            id: calls._id\n                        }))}\n                    />\n                    : <></>}\n            </div>\n\n        </>\n    );\n};\nexport default DisInboundTable;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Avatar,\n  Grid,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles,\n  Typography,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Card,\n  CardContent,\n  Box\n} from '@material-ui/core';\nimport {\n  GET_INBOUND_DASHBOARD_DATA,\n  GET_INTERACTION_BY_AGENT_SIP_ID,\n  AGENT_SERVICE_URL\n} from 'src/modules/dashboard-360/utils/endpoints';\nimport CallIcon from '@material-ui/icons/Call';\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\nimport AddIcCallIcon from '@material-ui/icons/AddIcCall';\nimport CallReceivedIcon from '@material-ui/icons/CallReceived';\nimport QueueIcon from '@material-ui/icons/Queue';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport AvTimerIcon from '@material-ui/icons/AvTimer';\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\nimport VoicemailIcon from '@material-ui/icons/Voicemail';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport QuestionAnswerRoundedIcon from '@material-ui/icons/QuestionAnswerRounded';\nimport TimelapseRoundedIcon from '@material-ui/icons/TimelapseRounded';\nimport Timer10RoundedIcon from '@material-ui/icons/Timer10Rounded';\nimport HourglassEmptyRoundedIcon from '@material-ui/icons/HourglassEmptyRounded';\nimport StarsIcon from '@material-ui/icons/Stars';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { grey } from '@material-ui/core/colors';\n\nimport socketIOClient from 'socket.io-client';\nimport DaterangeReport from './DaterangeReport';\nimport DownloadReport from '../../../dashboard-360/views/DashboardView/DownloadReport';\nimport DispositionTable from './DispositionTable';\nimport { DataGrid } from '@material-ui/data-grid';\nimport CurrentStatus from './CurrentStatus'\nimport { SOCKETENDPOINT2 } from '../../../dashboard-360/utils/endpoints'\nimport {\n\n  lastFiveCallData\n} from 'src/modules/dashboard-360/utils/columns-config';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    display: 'flex'\n  },\n  grey: {\n    color: theme.palette.getContrastText(grey[50]),\n    backgroundColor: grey[50]\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  paper: {\n    textAlign: 'center'\n  },\n  list: {},\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    marginRight: '0.5vw'\n  },\n  listItem: {\n    padding: 0\n  },\n  cardcontent: {\n    padding: '0 0 0 5%',\n    '&:last-child': {\n      paddingBottom: 0\n    }\n  }\n}));\n\n\nconst Inbound = () => {\n  const classes = useStyles();\n  const [agentdisposedCalls, setagentdisposedCalls] = useState([])\n  const [Inbound, setInbound] = useState(\n    {\n      \"callarrived\": 0,\n      \"callsoffered\": 0,\n      \"callsanswered\": 0,\n      \"callsabandonedonivr\": 0,\n      \"callsabandonedonqueue\": 0,\n      \"shortabandoned\": 0,\n      \"shortabandoned_ten\": 0,\n      \"callsansweredwithin20\": 0,\n      \"callsansweredwithin10\": 0,\n      \"servicelevel\": null,\n      \"answerlevel\": null,\n      \"servicelevel_ten\": null,\n      \"answerlevel_ten\": null,\n      \"aht\": null,\n      \"ooohourscalls\": 0,\n      \"livecalls\": 0,\n      \"queuecalls\": 0,\n      \"callstransferedtoCSAT\": 0,\n      \"GaveCSAT\": 0,\n      \"totalcsatscore\": null\n    }\n  )\n\n  const InboundDataList = [\n    {\n      icon: <CallIcon color=\"primary\" />,\n      data: Inbound.callarrived,\n      label: 'I/B Calls Arrived'\n    },\n    {\n      icon: <QueryBuilderIcon color=\"primary\" />,\n      data: Inbound.ooohourscalls,\n      label: 'OOO Hours Calls'\n    },\n    {\n      icon: <AddIcCallIcon color=\"primary\" />,\n      data: Inbound.callsoffered,\n      label: 'I/B Calls Offered'\n    },\n    {\n      icon: <CallReceivedIcon color=\"primary\" />,\n      data: Inbound.callsanswered,\n      label: 'I/B Calls Answered'\n    },\n    {\n      icon: <QueueIcon color=\"primary\" />,\n      data: Inbound.queuecalls,\n      label: 'I/B Calls in Queue'\n    },\n    {\n      icon: <SupervisorAccountIcon color=\"primary\" />,\n      data: '0',\n      label: 'I/B Agents Available'\n    },\n    {\n      icon: <AvTimerIcon color=\"primary\" />,\n      data: '0',\n      label: 'I/B Ans within SL'\n    },\n    {\n      icon: <RecordVoiceOverIcon color=\"primary\" />,\n      data: Inbound.shortabandoned,\n      label: 'I/B IVR Aband'\n    },\n    {\n      icon: <VoicemailIcon color=\"primary\" />,\n      data: '0',\n      label: 'I/B Queue Aband'\n    },\n    {\n      icon: <ListAltIcon color=\"primary\" />,\n      data: '0',\n      label: 'I/B Service Level (SL-20)'\n    },\n    {\n      icon: <QuestionAnswerRoundedIcon color=\"primary\" />,\n      data: Inbound.callsansweredwithin20,\n      label: 'I/B Answer Level (SL-20)'\n    },\n    {\n      icon: <TimelapseRoundedIcon color=\"primary\" />,\n      data: Inbound.aht,\n      label: 'I/B AHT'\n    }\n    // {\n    //   icon: <Timer10RoundedIcon color=\"primary\" />,\n    //   data: '0',\n    //   label: 'TeI/B Ans within SL=10 sec'\n    // },\n    // {\n    //   icon: <HourglassEmptyRoundedIcon color=\"primary\" />,\n    //   data: '09',\n    //   label: 'I/B Service Level (SL-10)'\n    // },\n    // {\n    //   icon: <StarsIcon color=\"primary\" />,\n    //   data: '09',\n    //   label: 'I/B Answer Level (SL-10)'\n    // },\n    // {\n    //   icon: <StarsIcon color=\"primary\" />,\n    //   data: '09',\n    //   label: 'I/B Answer Level (SL-10)'\n    // }\n  ];\n  function getALF(startDate, endDate) {\n\n    const axios = require('axios');\n    let data = '';\n    let u = AGENT_SERVICE_URL\n    let config = {\n      method: 'get',\n      url: u + GET_INTERACTION_BY_AGENT_SIP_ID + localStorage.getItem('AgentSIPID') + '',\n      headers: {},\n      data: data\n    };\n\n    axios(config)\n      .then(async (response) => {\n        var ALFDATA = response.data;\n        ALFDATA = ALFDATA.reverse();\n        var filteredData = ALFDATA.filter(data => data.created.substring(0, 10) >= startDate.toISOString().substring(0, 10) && data.created.substring(0, 10) <= endDate.toISOString().substring(0, 10))\n        setagentdisposedCalls(filteredData)\n        return filteredData;\n      })\n\n      .catch((error) => {\n        console.log(error);\n      });\n\n\n  }\n  function handleChange() {\n    setagentdisposedCalls([])\n  }\n  function getIBdata() {\n    const axios = require('axios');\n\n    let config = {\n      method: 'get',\n      url: GET_INBOUND_DASHBOARD_DATA,\n      headers: {}\n    };\n\n    axios(config)\n      .then((response) => {\n\n        var data = response.data;\n\n        setInbound(data[0][0])\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n\n\n  }\n  const SOCKETENDPOINT = SOCKETENDPOINT2;\n\n  useEffect(() => {\n\n    getIBdata();\n    const socket = socketIOClient(SOCKETENDPOINT);\n\n    socket.on('AstriskEvent', data => {\n      if (data.Event === 'Bridge' && data.Bridgestate === 'Link') {\n        getIBdata()\n      }\n      if (data.Event === 'Hangup') {\n        getIBdata()\n      }\n    })\n\n  }, [])\n\n  return (\n    <>\n      <div className={classes.root}>\n        <Box css={{ margin: '0.5rem' }}>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"flex-start\"\n            spacing={1}\n          >\n            <Grid container item xs={9} spacing={1}>\n              {InboundDataList.map((array, index) => (\n                <Grid item lg={3} sm={6} key={index}>\n                  <Card>\n                    <CardContent className={classes.cardcontent}>\n                      <List key={index} className={classes.list}>\n                        <ListItem classes={{ root: classes.listItem }}>\n                          <ListItemAvatar>\n                            <Avatar className={classes.grey}>\n                              {array.icon}\n                            </Avatar>\n                          </ListItemAvatar>\n                          <ListItemText\n                            primary={array.data}\n                            secondary={array.label}\n                          />\n                        </ListItem>\n                      </List>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              ))}\n\n              <DaterangeReport\n                getALF={getALF}\n                handleChange={handleChange}\n              />\n              <Grid item lg={3} sm={6}>\n                <br />\n                {agentdisposedCalls.length > 0 ? <DownloadReport\n                  DownloadData={agentdisposedCalls}\n\n                /> : <></>}\n              </Grid>\n\n            </Grid>\n            <Grid item xs={3}>\n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                >\n                  <Typography className={classes.heading}>\n                    Calls in Queue (0)\n                  </Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Typography>Details</Typography>\n                </AccordionDetails>\n              </Accordion>\n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                >\n                  <Typography className={classes.heading}>\n                    Live Calls ({Inbound.livecalls})\n                  </Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Typography>Details</Typography>\n                </AccordionDetails>\n              </Accordion>\n              <Accordion>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                >\n                  <Typography className={classes.heading}>\n                    Agents Live Status :: Logged in (34) / On Break (17)\n                  </Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Typography>Details</Typography>\n                </AccordionDetails>\n              </Accordion>\n            </Grid>\n          </Grid>\n        </Box>\n        {/* <CurrentStatus/> */}\n      </div>\n      {agentdisposedCalls.length > 0 ? <DispositionTable getALF={getALF} agentdisposedCalls={agentdisposedCalls} /> : <></>}\n\n    </>\n  );\n};\n\nexport default Inbound;\n","import dashboard from '../views/dashboard';\n\nexport default [\n  {\n    path: '/dashboard',\n    key: 'dashboard',\n    component: dashboard\n  }\n];\n","import dashboard from '../views/dashboard';\n\nexport default [\n  {\n    path: '/dashboard',\n    key: 'dashboard',\n    component: dashboard\n  }\n];\n","import React, { useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nexport default function App() {\n  const { register, handleSubmit } = useForm();\n  const firstNameRef = useRef();\n  const onSubmit = data => console.log(data);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input name=\"firstName\" ref={(e) => {\n        register(e)\n        firstNameRef.current = e // you can still assign to ref\n      }} />\n      <input name=\"lastName\" ref={(e) => {\n        // register's first argument is ref, and second is validation rules\n        register(e, { required: true })\n      }} />\n\n      <button>Submit</button>\n    </form>\n  );\n}","import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { Formik } from 'formik';\nimport Alert from '@material-ui/lab/Alert';\nimport * as Yup from 'yup';\nimport { useSelector } from 'react-redux'\nimport {\n  setLoggedIn,\n  setUserDetails,\n  setAccountType\n} from '../../../redux/action';\nimport {\n  SOCKETENDPOINT1,\n  SOCKETENDPOINT2,\n  SOCKETENDPOINT3,\n  SOCKETENDPOINT4,\n  SOCKETENDPOINT5,\n  AGENT_SERVICE_URL,\n  UPDATE_CURRENT_STATUS\n} from '../../dashboard-360/utils/endpoints'\nimport Axios from 'axios';\nimport { ADMIN, USER } from 'src/redux/constants';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n// import Typography from '@material-ui/core/Typography';\nimport Logo from '../../dashboard-360/components/loginlogo'\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://www.grssl.com/\">\n        Grassroots\n      </Link>{' '}\n      {2021}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createMuiTheme();\n\ntheme.typography.h6 = {\n  fontSize: '1rem',\n  '@media (min-width:600px)': {\n    fontSize: '1rem',\n  },\n  [theme.breakpoints.up('md')]: {\n    fontSize: '1rem',\n  },\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh'\n  },\n  image: {\n    backgroundImage: 'url(/static/images/merittrack.jpg)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light'\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center'\n  },\n  paper: {\n    margin: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1)\n  },\n  imageWrapper: {\n    background:\n      'linear-gradient(45eg, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.15))',\n    height: '100%',\n    width: '100%'\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  avatarWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  root1: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n\n}));\n\n\nvar APIENDPOINT = SOCKETENDPOINT2;\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n/// addToQueue start //////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n\n// function addToQueue(agentId, queue, user_Details) {\n//   const axios = require('axios');\n//   console.log(user_Details, \"addddd\")\n//   var APIENDPOINT = '';\n//   console.log('userDetails sdsdfgsdfgsdf', user_Details)\n//   if (user_Details.Server === 'server1') {\n//     APIENDPOINT = SOCKETENDPOINT1\n//   }\n//   if (user_Details.Server === 'server2') {\n//     APIENDPOINT = SOCKETENDPOINT2\n//   }\n//   if (user_Details.Server === 'server3') {\n//     APIENDPOINT = SOCKETENDPOINT3\n//   }\n//   if (user_Details.Server === 'server4') {\n//     APIENDPOINT = SOCKETENDPOINT4\n//   }\n\n//   const config = {\n//     method: 'get',\n//     url:\n//       `${APIENDPOINT\n//       }/ami/actions/addq?Interface=${agentId}&Queue=${queue\n//       }`,\n//     headers: {\n//       'Content-Type': 'application/json'\n//     }\n//   };\n\n//   axios(config)\n//     .then((response) => { })\n//     .catch((error) => {\n//       console.log(error);\n//     });\n\n// }\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n/// addToQueue end //////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\nfunction updateAgentCallStatusV2(callStatusId, data) {\n  // console.log(\"updateData\", updateData)\n  var axios = require('axios');\n  var config = {\n    method: 'put',\n    url: UPDATE_CURRENT_STATUS + callStatusId,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    data: data\n  };\n  axios(config)\n    .then(function (response) {\n      // console.log('update', JSON.stringify(response.data));\n    })\n    .catch(function (error) {\n      // console.log(error);\n    });\n}\n/// ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n/// addToQueue start //////////////////////////////////////////////////////////////////////////////////////////\n/// ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction addToQueue(agentId, queue, user_Details) {\n  const axios = require('axios');\n\n  var config1 = {\n    method: 'get',\n    url: 'http://106.51.86.75:42004/crm/serveragentcounts',\n    headers: {}\n  };\n\n  axios(config1)\n    .then(function (response) {\n      // console.log(JSON.stringify(response.data));\n\n      var data = response.data\n\n\n      var items = data.items[0];\n      delete items['_id'];\n      delete items['createdAt'];\n      delete items['updatedAt'];\n      delete items['__v'];\n\n      var data = [];\n      data.push(items.server1, items.server2, items.server3, items.server4, items.server5)\n      data = data.sort((a, b) => parseFloat(a) - parseFloat(b));\n\n      function getKeyByValue(object, value) {\n        return Object.keys(object).find(key => object[key] === value);\n      }\n\n      // console.log(' logiiiiidata', data)\n      // console.log(getKeyByValue(items, data[0]));\n      if (getKeyByValue(items, data[0]) === 'server1') {\n        APIENDPOINT = 'http://106.51.86.75:42001';\n      }\n      if (getKeyByValue(items, data[0]) === 'server2') {\n        APIENDPOINT = 'http://106.51.86.75:42002';\n      }\n      if (getKeyByValue(items, data[0]) === 'server3') {\n        APIENDPOINT = 'http://106.51.86.75:42003';\n      }\n      if (getKeyByValue(items, data[0]) === 'server4') {\n        APIENDPOINT = 'http://106.51.86.75:42005';\n      }\n      if (getKeyByValue(items, data[0]) === 'server5') {\n        APIENDPOINT = 'http://106.51.86.75:42009';\n        queue = 7003\n      }\n\n      const config = {\n        method: 'get',\n        url:\n          `${APIENDPOINT\n          }/ami/actions/addq?Interface=${agentId}&Queue=${queue\n          }`,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n\n      axios(config)\n        .then((response) => { })\n        .catch((error) => {\n          // console.log(error);\n        });\n    })\n    .catch(function (error) {\n      // console.log(error);\n    });\n\n\n\n\n}\n/// ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n/// addToQueue end //////////////////////////////////////////////////////////////////////////////////////////\n/// ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n/// removeFromQueue start //////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction removeFromQueue(agentId, queue, user_Details) {\n  const axios = require('axios');\n  var APIENDPOINT = '';\n  // console.log('userDetails sdsdfgsdfgsdf', user_Details)\n  // if (user_Details.Server === 'server1') {\n  //   APIENDPOINT = SOCKETENDPOINT1\n  // }\n  // if (user_Details.Server === 'server2') {\n  //   APIENDPOINT = SOCKETENDPOINT2\n  // }\n  // if (user_Details.Server === 'server3') {\n  //   APIENDPOINT = SOCKETENDPOINT3\n  // }\n  // if (user_Details.Server === 'server4') {\n  //   APIENDPOINT = SOCKETENDPOINT4\n  // }\n  // console.log('remove', agentId);\n  const config1 = {\n    method: 'get',\n    url:\n      `${SOCKETENDPOINT1\n      }/ami/actions/rmq?Queue=${queue\n      }&Interface=${agentId}`,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  axios(config1)\n    .then((response) => {\n      // console.log(\"remove queue 1\")\n    })\n    .catch((error) => {\n      // console.log(error);\n    });\n\n\n  const config2 = {\n    method: 'get',\n    url:\n      `${SOCKETENDPOINT2\n      }/ami/actions/rmq?Queue=${queue\n      }&Interface=${agentId}`,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  axios(config2)\n    .then((response) => {\n      // console.log(\"remove queue 2\")\n    })\n    .catch((error) => {\n      // console.log(error);\n    });\n\n\n  const config3 = {\n    method: 'get',\n    url:\n      `${SOCKETENDPOINT3\n      }/ami/actions/rmq?Queue=${queue\n      }&Interface=${agentId}`,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  axios(config3)\n    .then((response) => {\n      // console.log(\"remove queue 3\")\n    })\n    .catch((error) => {\n      // console.log(error);\n    });\n\n\n  const config4 = {\n    method: 'get',\n    url:\n      `${SOCKETENDPOINT4\n      }/ami/actions/rmq?Queue=${queue\n      }&Interface=${agentId}`,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  axios(config4)\n    .then((response) => {\n      //console.log(\"remove queue 4\")\n    })\n    .catch((error) => {\n      // console.log(error);\n    });\n\n\n  const config5 = {\n    method: 'get',\n    url:\n      `${SOCKETENDPOINT5\n      }/ami/actions/rmq?Queue=7003&Interface=${agentId}`,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  axios(config5)\n    .then((response) => {\n      //console.log(\"remove queue 5\")\n    })\n    .catch((error) => {\n      //console.log(error);\n    });\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n/// removeFromQueue end //////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction Login({ setLoggedInMain, setAccountTypeMain, setUserDetailsMain }) {\n  const classes = useStyles();\n  const [error, setError] = useState(false);\n  const user_Details = useSelector(state => state.userData)\n\n  //console.log(user_Details)\n\n  async function authenticate(values) {\n    setError('');\n    try {\n      const url = 'http://106.51.86.75:4000/auth/apiM/login'\n      // const url='http://192.168.3.45:42009/user/login'\n      //console.log(\"values\", values)\n\n      const res = await Axios.post(url, values);\n      var myObj = res.data;\n      if ('statusCode' in myObj) {\n        setLoggedInMain(false);\n        setError(true);\n      } if ('status' in myObj) {\n        const GET_CURRENT_STATUS_BY_AGENT_SIP_ID = `http://106.51.86.75:42004/crm/currentstatuses/agentSipID?agentSipID=${res.data.userDetails.External_num}`;\n        const getCurrentStatus = await Axios.get(GET_CURRENT_STATUS_BY_AGENT_SIP_ID, values);\n        // console.log('getCurrentStatus', getCurrentStatus)\n\n        // console.log(\"login api\", res.data)\n        const obj = res.data.userDetails;\n        const { accessToken } = res.data;\n        updateAgentCallStatusV2(getCurrentStatus.data[0]._id, {\n          \"jwtToken\": accessToken,\n          \"loginStatus\": \"true\"\n        })\n\n\n        if (res.data.userDetails.AgentType === 'L1') {\n          // addToQueue('Local/5'+localStorage.getItem('AgentSIPID')+'@from-internal', 5000)\n          // var queue=res.data.userDetails.AgentQueueStatus\n          if (res.data.userDetails.AgentQueueStatus === 'dynamic' && getCurrentStatus.data[0].agentCallDispositionStatus === 'Disposed') {\n            removeFromQueue('Local/5' + res.data.userDetails.External_num + '@from-queue\\n', 7001, res.data.userDetails);\n            addToQueue('Local/5' + res.data.userDetails.External_num + '@from-queue\\n', 7001, res.data.userDetails)\n          }\n          // console.log('data resppppp', res.data)\n          localStorage.setItem(\"jwtToken\", accessToken);\n          localStorage.setItem('AgentSIPID', res.data.userDetails.External_num);\n          localStorage.setItem('role', res.data.userDetails.role);\n          localStorage.setItem('Agenttype', res.data.userDetails.AgentType);\n          localStorage.setItem('AgentType', 'Inbound')\n          setUserDetailsMain(obj);\n          setAccountTypeMain(obj.role === 'Agent' ? ADMIN : USER);\n          setLoggedInMain(true);\n        } else if (res.data.userDetails.AgentType === 'L2') {\n          setError(true)\n        }\n      } else {\n        setLoggedInMain(false);\n        setError(true);\n      }\n\n    } catch (err) {\n      setLoggedInMain(false);\n      setError(true);\n    }\n  }\n\n\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={8} className={classes.image}>\n        <div className={classes.imageWrapper} />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        sm={8}\n        md={4}\n        component={Paper}\n        elevation={6}\n        square\n        style={{ display: 'flex' }}\n      >\n        <div className={`${classes.paper}`}>\n          <div>\n            <div className={classes.avatarWrapper}>\n              <Avatar className={classes.avatar}>\n                <LockOutlinedIcon />\n              </Avatar>\n              <Typography component=\"h1\" variant=\"h5\">\n                Sign in\n              </Typography>\n            </div>\n            <Formik\n              initialValues={{\n                email: '',\n                password: '',\n              }}\n              validationSchema={Yup.object().shape({\n                email: Yup.string()\n                  .email('Must be a valid email')\n                  .max(255)\n                  .required('Email is required'),\n                password: Yup.string()\n                  .max(255)\n                  .required('Password is required')\n              })}\n              onSubmit={values => {\n                // console.log('values', values);\n                localStorage.setItem('AgentType', values.AgentType);\n                localStorage.setItem('role', values.role);\n                localStorage.setItem('AgentSIPID', values.AgentSIPID);\n\n                // navigate('/app/dashboard', { replace: true });\n                authenticate(values);\n              }}\n            >\n              {({\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                touched,\n                values\n              }) => (\n                <form onSubmit={handleSubmit}>\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={touched.email && errors.email}\n                    label=\"Email Address\"\n                    margin=\"normal\"\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"email\"\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    error={Boolean(touched.password && errors.password)}\n                    fullWidth\n                    helperText={touched.password && errors.password}\n                    label=\"Password\"\n                    margin=\"normal\"\n                    name=\"password\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"password\"\n                    value={values.password}\n                    variant=\"outlined\"\n                  />\n\n                  {!!error && (\n                    <Box my={1}>\n                      <Typography color=\"secondary\">\n                        Invalid Username/Password\n                      </Typography>\n                    </Box>\n                  )}\n                  <Box my={2} mt={5}>\n                    <Button\n                      color=\"primary\"\n                      fullWidth\n                      size=\"large\"\n                      type=\"submit\"\n                      variant=\"contained\"\n                    >\n                      Sign in now\n                    </Button>\n                  </Box>\n                </form>\n              )}\n            </Formik>\n            <div className={classes.root1}>\n              {\n                error && <span><Alert severity=\"error\">You are not authorized to login</Alert></span>\n              }\n            </div>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </div>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\nconst mapDispatchToProps = dispatch => ({\n  setUserDetailsMain: details => dispatch(setUserDetails(details)),\n  setAccountTypeMain: type => dispatch(setAccountType(type)),\n  setLoggedInMain: val => dispatch(setLoggedIn(val))\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import Login from '../views/Login';\n\nexport default [\n  {\n    path: '/login',\n    component: Login,\n    key: 'login'\n  }\n];\n\n","import { Field, Form, Formik } from 'formik';\nimport React, { useRef, useState } from 'react';\nimport { TextField, RadioGroup } from 'formik-material-ui';\nimport { useEffect } from 'react';\nimport {\n  UPDATE_CALL_STATUS,\n  UPDATE_CURRENT_STATUS,\n  AGENT_SERVICE_URL\n} from 'src/modules/dashboard-360/utils/endpoints';\nimport {\n  Button,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  makeStyles,\n  Radio\n} from '@material-ui/core';\nimport * as yup from 'yup';\nimport Axios from 'axios';\n// import config from '../../../ticketing/views/config.json';g\nimport { Autocomplete } from '@material-ui/lab';\nimport { set } from 'lodash';\n// import { AlternateEmailTwoTone } from '@material-ui/icons';\nconst useStyle = makeStyles(() => ({\n  fieldContainer: {\n    width: '100%'\n  }\n}));\nexport default function DispositionForm({ ...props }) {\n  const config = \"http://192.168.3.45:8083/\"\n\n  const [initialValue, setInitialValue] = useState({\n\n    AgentName: '',\n    AgentEmail: '',\n    Agentcontact: '',\n    enable: false,\n    AgentType: {\n      value: \"\",\n      label: \"\"\n    },\n    Group: {\n      value: \"\",\n      label: \"\"\n    }\n  });\n  const [Groups, setGroups] = useState([]);\n  const classes = useStyle();\n  const formRef = useRef({});\n  const agentServiceURL = `${AGENT_SERVICE_URL}/`;\n  const AgentType = [\n    {\n      id: '1', value: 'L1',\n    },\n    {\n      id: '2', value: 'L2',\n    },\n\n  ]\n  // const Groups = [\n  //   {\n  //     id: '1', value: 'Grassroots DD',\n  //   },\n  //   {\n  //     id: '2', value: 'Grassroots OMR',\n  //   },\n  //   {\n  //     id: '3', value: 'Grassroots Site1',\n  //   },\n\n  // ]\n\n\n  function updateAgentCallStatus(contactNumber) {\n    console.log(\"contactNumber\", contactNumber)\n    var axios = require('axios');\n\n    var data = {\n      agentCallDispositionStatus: \"NotDisposed\",\n      agentCallType: \"Inbound\",\n      agentCallUniqueId: \"1610712538.46886\",\n      agentCallEvent: \"Bridge\",\n      agentCallStatus: \"disconnected\",\n      agentID: \"9998\",\n      agentSipID: \"9998\",\n      contactNumber: contactNumber,\n      breakStatus: \"OUT\",\n\n    };\n    var config = {\n\n      method: 'post',\n      url: `${AGENT_SERVICE_URL}/crm/currentstatuses`,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: data\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(\"update\", JSON.stringify(response.data));\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n  async function pushAgentCurrentStatusData(data) {\n    const url = agentServiceURL + 'crm/currentstatuses';\n    const result = await fetch(url, { method: 'post', body: JSON.stringify(data), headers: { 'Content-Type': 'application/json' } });\n    console.log(\"result\", result)\n    return await result.json();\n  }\n  function handleSubmit(e) {\n\n    console.log('formRef', formRef.current.values);\n    const data = {\n      \"AgentName\": formRef.current.values.AgentName,\n      \"AgentEmail\": formRef.current.values.AgentEmail,\n\n      \"Agentcontact\": formRef.current.values.Agentcontact,\n      \"AgentType\": formRef.current.values.AgentType.value,\n      \"group\": formRef.current.values.Group.group_name,\n    }\n    const url = 'http://106.51.86.75:4000/admin/agent/addAgent'\n\n    Axios.post(url, { data }, { headers: { Authorization: `Bearer ${localStorage.getItem('jwtToken')}` } })\n      .then(function (response) {\n        console.log(response);\n        if (response.data.status === 200) {\n          alert(\"Created Agent Successfully\")\n          // updateAgentCallStatus(formRef.current.values.Agentcontact)\n          const result = {\n            \"agentCallDispositionStatus\": \"NA\",\n            \"agentCallType\": \"Inbound\",\n            \"agentCallUniqueId\": \"NA\",\n            \"agentCallEvent\": \"NewState\",\n            \"agentCallStatus\": \"ringing\",\n            \"agentID\": data.Agentcontact,\n            \"agentSipID\": data.Agentcontact,\n            \"breakStatus\": \"NA\",\n            \"newstateinbound\": \"\",\n            \"newstateoutbound\": \"NA\",\n            \"bridgeUniqueid1\": \"NA\",\n            \"bridgeUniqueid2\": \"NA\",\n            \"channel\": \"NA\",\n            \"contactNumber\": data.Agentcontact,\n            \"agenttype\": data.AgentType\n          }\n\n          pushAgentCurrentStatusData(result)\n          props.TableData()\n        }\n        else {\n          alert(response.data.message)\n          console.log(\"formRef.current\", formRef.current)\n\n        }\n      })\n\n    setInitialValue({\n\n      AgentName: '',\n      AgentEmail: '',\n      Agentcontact: '',\n      location: '',\n\n      AgentType: {\n        value: \"\",\n        label: \"\",\n        id: \"\"\n      }\n    });\n\n    formRef.current.values.AgentName = \"\"\n    formRef.current.values.AgentEmail = \"\"\n    formRef.current.values.Agentcontact = \"\"\n    formRef.current.values.location = \"\"\n    formRef.current.values.AgentType.label = \"\"\n    formRef.current.values.AgentType.value = \"\"\n    formRef.current.values.AgentType.id = \"\"\n    formRef.current.values.Group = {\n      value: \"\",\n      label: \"\"\n    }\n    console.log(\"initialValue\", initialValue)\n\n    e.preventDefault()\n\n\n  }\n\n\n\n\n  useEffect(() => {\n    console.log('formRef', formRef.current.values);\n    console.log(\"initialValue\", initialValue)\n    const url = 'http://106.51.86.75:4000/admin/group/getGroup'\n\n    Axios.post(url, {}, { headers: { Authorization: `Bearer ${localStorage.getItem('jwtToken')}` } })\n      .then(function (response) {\n        console.log(response);\n        if (response.data.status === 200) {\n          // roup=response.data.data\n          setGroups(response.data.data)\n        }\n        else {\n          alert(response.data.message)\n\n\n        }\n      })\n\n\n  }, [])\n  const [autoCompleteKey, setAutoCompleteKey] = useState(0);\n  return (\n    <Formik\n      validateOnBlur={false}\n      initialValues={initialValue}\n      disform={initialValue}\n      onSubmit={(e, { validate }, { resetForm }) => {\n        console.log(\"e\", e)\n        handleSubmit(e);\n        validate(e);\n        resetForm({ e: '' })\n      }}\n      innerRef={formRef}\n      validationSchema={yup.object({\n        AgentType: yup\n          .object()\n          .required('Please select a Agent Type')\n          .typeError('Please select a valid Agent Type'),\n        Group: yup\n          .object()\n          .required('Please select a Group')\n          .typeError('Please select a Group'),\n        AgentName: yup.string().required('Please Enter Agent Name'),\n        AgentEmail: yup.string().required('Please Enter Agent Email'),\n        Agentcontact: yup.string().required('Please Enter Agent Contact Number'),\n        location: yup.string().required('Please Enter Location'),\n      })}\n    >\n      {({ setFieldValue }) => (\n        <Form>\n          <Grid container spacing={2} direction=\"column\">\n            <Grid item>\n              <Field\n                className={classes.fieldContainer}\n                name=\"AgentName\"\n                component={TextField}\n                variant=\"outlined\"\n                multiline\n                // value=\"AgentName\"\n                label=\"Agent Name\"\n\n              />\n            </Grid>\n            <Grid item>\n              <Field\n                className={classes.fieldContainer}\n                name=\"AgentEmail\"\n                component={TextField}\n                variant=\"outlined\"\n                multiline\n                label=\"Agent Email\"\n              />\n            </Grid>\n            <Grid item>\n              <Field\n                className={classes.fieldContainer}\n                name=\"Agentcontact\"\n                component={TextField}\n                variant=\"outlined\"\n                multiline\n                label=\"Agent Contact Number\"\n              />\n            </Grid>\n\n            {localStorage.getItem('role') === \"Admin\" ? <Grid item >\n              <FormControl\n                variant=\"outlined\"\n                className={classes.fieldContainer}\n              >\n\n\n                <Autocomplete\n                  options={Groups}\n                  getOptionLabel={option => option.group_name}\n                  // style={{ width: 400, overflow: \"hidden\" }}\n                  getOptionSelected={(option, value) =>\n                    value.id === option.id\n                  }\n                  key={autoCompleteKey}\n                  onChange={(event, value) => {\n\n                    setFieldValue('Group', value);\n\n                  }}\n                  renderInput={params => (\n                    <Field\n                      component={TextField}\n                      {...params}\n                      label=\"Select Groups\"\n                      variant=\"outlined\"\n                      name=\"Group\"\n                    />\n                  )}\n                  name=\"Group\"\n                />\n              </FormControl>\n\n            </Grid> : <></>}\n\n            <Grid item >\n              <FormControl\n                variant=\"outlined\"\n                className={classes.fieldContainer}\n              >\n\n\n                <Autocomplete\n                  options={AgentType}\n                  getOptionLabel={option => option.value}\n                  // style={{ width: 400, overflow: \"hidden\" }}\n                  getOptionSelected={(option, value) =>\n                    value.id === option.id\n                  }\n                  key={autoCompleteKey}\n                  onChange={(event, value) => {\n\n                    setFieldValue('AgentType', value);\n\n                  }}\n                  renderInput={params => (\n                    <Field\n                      component={TextField}\n                      {...params}\n                      label=\"Select Agent Type\"\n                      variant=\"outlined\"\n                      name=\"AgentType\"\n                    />\n                  )}\n                  name=\"AgentType\"\n                />\n              </FormControl>\n\n            </Grid>\n          </Grid>\n          <br />\n\n          <Button color=\"primary\" variant=\"contained\" disabled={localStorage.getItem('callStatus') === 'connected' ? true : false} onClick={handleSubmit}>\n            Submit\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n","import {\n    Box,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Divider,\n    Typography,\n    TextField\n} from '@material-ui/core';\nimport { AGENT_SERVICE_URL } from '../../../dashboard-360/utils/endpoints'\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n    dialog: {\n        minWidth: 400\n    }\n}));\n\nexport default function DistSelect({ InputLabelProps = {}, ...props }) {\n    const classes = useStyles();\n    const [Groups, setGroups] = useState([]);\n    //   console.log(\"EditData\",props.EditData)\n    // const [formData, setFormData] = useState({\n    //         AgentType: \"\",\n    //         EmployeeName: \"\",\n    //         External_num: \"\",\n    //         Location: \"\",\n    //         UserID: \"\",\n    //         UserName: \"\",\n    //         EmailID:\"\"\n    //     });\n    const [showModal, setShowModal] = useState(true);\n\n    const Data = props.EditData[0]\n\n    const [formData, setFormData] = useState(Data);\n    const agentServiceURL = `${AGENT_SERVICE_URL}/`;\n\n    const handleChange = (e) => {\n        console.log(\"target\", e.target)\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value\n        });\n    }\n    function updateAgentCallStatus(contactNumber) {\n        console.log(\"contactNumber\", contactNumber)\n        var axios = require('axios');\n\n        var data = {\n            agentCallDispositionStatus: \"NotDisposed\",\n            agentCallType: \"Inbound\",\n            agentCallUniqueId: \"1610712538.46886\",\n            agentCallEvent: \"Bridge\",\n            agentCallStatus: \"disconnected\",\n            agentID: \"9998\",\n            agentSipID: \"9998\",\n            contactNumber: contactNumber,\n            breakStatus: \"OUT\",\n\n        };\n        var config = {\n\n            method: 'post',\n            url: `${AGENT_SERVICE_URL}/crm/currentstatuses`,\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: data\n        };\n\n        axios(config)\n            .then(function (response) {\n                console.log(\"update\", JSON.stringify(response.data));\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    async function pushAgentCurrentStatusData(data) {\n        const url = agentServiceURL + 'crm/currentstatuses';\n        const result = await fetch(url, { method: 'post', body: JSON.stringify(data), headers: { 'Content-Type': 'application/json' } });\n        console.log(\"result\", result)\n        return await result.json();\n    }\n    const handleSubmit = (e) => {\n\n        console.log(\"formData\", formData)\n        const url = 'http://106.51.86.75:4000/admin/agent/updateAgent'\n\n        Axios.post(url, { formData }, { headers: { Authorization: `Bearer ${localStorage.getItem('jwtToken')}` } })\n            .then(function (response) {\n                console.log(response);\n                if (response.data.status === 200) {\n                    alert(\"Updated Agent Successfully\")\n                    const result = {\n                        \"agentCallDispositionStatus\": \"NA\",\n                        \"agentCallType\": \"Inbound\",\n                        \"agentCallUniqueId\": \"NA\",\n                        \"agentCallEvent\": \"NewState\",\n                        \"agentCallStatus\": \"ringing\",\n                        \"agentID\": formData.Agentcontact,\n                        \"agentSipID\": formData.Agentcontact,\n                        \"breakStatus\": \"NA\",\n                        \"newstateinbound\": \"\",\n                        \"newstateoutbound\": \"NA\",\n                        \"bridgeUniqueid1\": \"NA\",\n                        \"bridgeUniqueid2\": \"NA\",\n                        \"channel\": \"NA\",\n                        \"contactNumber\": formData.Agentcontact,\n                        \"agenttype\": formData.AgentType\n                    }\n\n                    pushAgentCurrentStatusData(result)\n                    setShowModal(false)\n                    props.TableData()\n                    updateAgentCallStatus(formData.External_num)\n                }\n            })\n\n    }\n    useEffect(() => {\n        const url = 'http://106.51.86.75:4000/admin/group/getGroup'\n\n        Axios.post(url, {}, { headers: { Authorization: `Bearer ${localStorage.getItem('jwtToken')}` } })\n            .then(function (response) {\n                console.log(response);\n                if (response.data.status === 200) {\n                    // roup=response.data.data\n                    setGroups(response.data.data)\n                }\n                else {\n                    alert(response.data.message)\n\n\n                }\n            })\n\n\n    }, [])\n    return (\n        <div>\n            {showModal && (\n                <Dialog\n                    open\n                    onClose={() => setShowModal(false)}\n                    classes={{ paper: classes.dialog }}\n                >\n                    <DialogTitle>Edit Agent Details</DialogTitle>\n                    <Divider light />\n                    <DialogContent>\n                        <Typography variant=\"h6\">\n                            <TextField\n                                fullWidth\n                                label=\"Agent Name\"\n                                name=\"EmployeeName\"\n                                onChange={handleChange}\n                                required\n\n                                SelectProps={{ native: true }}\n                                value={formData.EmployeeName}\n                                variant=\"outlined\"\n                            />\n                            <br />\n                            <br />\n                            <TextField\n                                fullWidth\n                                label=\"Agent Email\"\n                                name=\"EmailID\"\n                                onChange={handleChange}\n                                required\n\n                                SelectProps={{ native: true }}\n                                value={formData.EmailID}\n                                variant=\"outlined\"\n                            />\n                            <br />\n                            <br />\n                            <TextField\n                                fullWidth\n                                label=\"Agent Contact Number\"\n                                name=\"External_num\"\n                                onChange={handleChange}\n                                required\n\n                                SelectProps={{ native: true }}\n                                value={formData.External_num}\n                                variant=\"outlined\"\n                            />\n                            <br />\n                            <br />\n\n                            {localStorage.getItem('role') === \"Admin\" ? <TextField\n                                fullWidth\n                                label=\"Select Group\"\n                                name=\"GroupName\"\n                                onChange={handleChange}\n                                required\n                                select\n                                SelectProps={{ native: true }}\n                                value={formData.GroupName}\n                                variant=\"outlined\"\n                                InputLabelProps={{ ...InputLabelProps, shrink: true }}\n                                {...props}\n                            >\n                                {Groups.map((option) => (\n                                    <option\n                                        key={option.group_id}\n                                        value={option.group_name}\n                                    >\n                                        {option.group_name}\n                                    </option>\n                                ))}\n\n\n                            </TextField> : <></>}\n                            {/* <br/>\n                            <br/> */}\n                            <TextField\n                                fullWidth\n                                label=\"Select Agent Type\"\n                                name=\"AgentType\"\n                                onChange={handleChange}\n                                required\n                                select\n                                SelectProps={{ native: true }}\n                                value={formData.AgentType}\n                                variant=\"outlined\"\n                            >\n                                <option\n                                    key=\"L1\"\n                                    value=\"L1\"\n                                >\n                                    L1\n                                    </option>\n                                <option\n                                    key=\"L2\"\n                                    value=\"L2\"\n                                >\n                                    L2\n                                    </option>\n\n                            </TextField>\n\n                            <br />\n                            <br />\n                            <TextField\n                                fullWidth\n                                label=\"Select Agent Type\"\n                                name=\"Enabled\"\n                                onChange={handleChange}\n                                required\n                                select\n                                SelectProps={{ native: true }}\n                                value={formData.Enabled}\n                                variant=\"outlined\"\n                            >\n                                <option\n                                    key=\"1\"\n                                    value=\"True\"\n                                >\n                                    Enable\n                                    </option>\n                                <option\n                                    key=\"0\"\n                                    value=\"False\"\n                                >\n                                    Disable\n                                    </option>\n\n                            </TextField>\n                            <br />\n                            <br />\n                            <Box style={{ flexBasis: '100%' }}>\n                                <br />\n                            </Box>\n                        </Typography>\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button\n                            color=\"primary\"\n                            variant=\"contained\"\n                            onClick={\n                                (e) => {\n                                    setShowModal(false)\n                                }}\n                        >\n                            close\n                </Button>\n                        <Button\n                            color=\"primary\"\n                            variant=\"contained\"\n                            onClick={\n                                handleSubmit}\n                        >\n                            Update\n                </Button>\n\n                    </DialogActions>\n                </Dialog>\n            )}\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport Axios from 'axios';\nimport Editagent from './EditAgent'\nconst columns = [\n\n  // { field: 'id', headerName: 'ID', width: 70 },\n  { field: 'EmployeeName', headerName: 'Agent name', width: 130 },\n  { field: 'External_num', headerName: 'Contact Number', width: 200 },\n  {\n    field: 'EmailID',\n    headerName: 'Email',\n    width: 200,\n  },\n  {\n    field: 'AgentType',\n    headerName: 'Agent Type',\n    width: 160,\n\n  },\n  {\n    field: 'GroupName',\n    headerName: 'Groups',\n    width: 160,\n\n  },\n];\n\n\n\nexport default function DataGridDemo() {\n  const [agents, setAgents] = useState([]);\n  const [editform, setEditform] = useState(false);\n  const [editData, setEditData] = useState([]);\n\n  function TableData() {\n    const url = 'http://106.51.86.75:4000/admin/agent/viewAgent'\n\n    Axios.post(url, {}, { headers: { Authorization: `Bearer ${localStorage.getItem('jwtToken')}` } })\n      .then(function (response) {\n        // console.log(JSON.stringify(response.data.data));\n        setAgents(response.data.data)\n\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n  }\n  useEffect(() => {\n    TableData()\n\n\n  }, [])\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      {agents.length > 0 ? <DataGrid rows={agents.map(calls => ({\n        ...calls,\n        id: calls.UserID\n      }))} columns={columns} pageSize={5} checkboxSelection\n        onSelectionChange={(newSelection) => {\n\n\n          const url = 'http://106.51.86.75:4000/admin/agent/getAgent'\n\n\n          Axios.post(url, newSelection)\n            .then(function (response) {\n              // console.log(JSON.stringify(response.data));\n              if (response.data.status === 200) {\n                setEditform(true)\n                setEditData(response.data.data)\n              }\n\n            })\n          // setSelection(newSelection.rowIds);\n        }} /> : <></>}\n      {editData.length > 0 ? <Editagent\n        EditData={editData}\n        TableData={TableData} /> : <></>}\n    </div>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport {\n  Avatar,\n  Grid,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles,\n  Typography,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Card,\n  CardContent,\n  Container,\n  CardHeader,\n  Box\n} from '@material-ui/core';\nimport {\n  GET_INBOUND_DASHBOARD_DATA,\n  GET_INTERACTION_BY_AGENT_SIP_ID\n} from 'src/modules/dashboard-360/utils/endpoints';\nimport Axios from 'axios';\nimport { grey } from '@material-ui/core/colors';\n\nimport socketIOClient from 'socket.io-client';\n\n\nimport CreateAgent from './CreateAgentform'\nimport AgentTable from './AgentTable'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    display: 'flex'\n  },\n  grey: {\n    color: theme.palette.getContrastText(grey[50]),\n    backgroundColor: grey[50]\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  paper: {\n    textAlign: 'center'\n  },\n  list: {},\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    marginRight: '0.5vw'\n  },\n  listItem: {\n    padding: 0\n  },\n  cardcontent: {\n    padding: '0 0 0 5%',\n    '&:last-child': {\n      paddingBottom: 0\n    }\n  }\n}));\n\n\nconst AgentDashboard = () => {\n  const classes = useStyles();\n  const [agents, setAgents] = useState([]);\n\n  useEffect(() => {\n\n\n\n  }, [])\n  function TableData() {\n    const url = 'http://106.51.86.75:4000/admin/agent/viewAgent'\n\n    Axios.post(url, {}, { headers: { Authorization: `Bearer ${localStorage.getItem('jwtToken')}` } })\n      .then(function (response) {\n        // console.log(JSON.stringify(response.data.data));\n        setAgents(response.data.data)\n\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n  }\n  return (\n    // <>\n    <Container maxWidth={false}>\n      <div className={classes.root}>\n        <Grid container spacing={3}>\n\n          <Grid item xs={12} sm={4}>\n            <div>\n\n              <Card>\n                <CardHeader title={'Create Agent'} />\n                <CardContent>\n                  <CreateAgent TableData={TableData} />\n                </CardContent>\n              </Card>\n\n            </div>\n\n          </Grid>\n          <Grid item xs={12} sm={8}>\n            <div>\n              <Card>\n                <CardHeader title={'Agent Details'} />\n                <CardContent>\n                  <AgentTable />\n                </CardContent>\n              </Card>\n            </div>\n\n          </Grid>\n\n        </Grid>\n      </div>\n\n    </Container>\n    // </>\n  );\n};\n\nexport default AgentDashboard;\n","import dashboard from '../views/dashboard';\n\nexport default [\n  {\n    path: '/dashboard',\n    key: 'dashboardagent',\n    component: dashboard\n  }\n];\n","import { Field, Form, Formik } from 'formik';\nimport React, { useRef, useState } from 'react';\nimport { TextField, RadioGroup } from 'formik-material-ui';\nimport { useEffect } from 'react';\nimport {\n  UPDATE_CALL_STATUS,\n  UPDATE_CURRENT_STATUS,\n  AGENT_SERVICE_URL\n} from 'src/modules/dashboard-360/utils/endpoints';\nimport {\n  Button,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  makeStyles,\n  Radio\n} from '@material-ui/core';\nimport * as yup from 'yup';\nimport Axios from 'axios';\n// import config from '../../../ticketing/views/config.json';g\nimport { Autocomplete } from '@material-ui/lab';\nimport { set } from 'lodash';\n// import { AlternateEmailTwoTone } from '@material-ui/icons';\nconst useStyle = makeStyles(() => ({\n  fieldContainer: {\n    width: '100%'\n  }\n}));\nexport default function DispositionForm(props) {\n  const config = \"http://192.168.3.45:8083/\"\n  const [initialValue, setInitialValue] = useState({\n\n    GroupAdminName: '',\n    GroupAdminEmail: '',\n    groupcontact: '',\n\n    Group: {\n      value: \"\",\n      label: \"\"\n    }\n  });\n  const [Groups, setGroups] = useState([]);\n  const classes = useStyle();\n  const formRef = useRef({});\n  const agentServiceURL = `${AGENT_SERVICE_URL}/`;\n\n  // const Groups = [\n  //   {\n  //     id: '1', value: 'Grassroots DD',\n  //   },\n  //   {\n  //     id: '2', value: 'Grassroots OMR',\n  //   },\n  //   {\n  //     id: '3', value: 'Grassroots Site1',\n  //   },\n\n  // ]\n\n\n  function updateAgentCallStatus(contactNumber) {\n    console.log(\"contactNumber\", contactNumber)\n    var axios = require('axios');\n\n    var data = {\n      agentCallDispositionStatus: \"NotDisposed\",\n      agentCallType: \"Inbound\",\n      agentCallUniqueId: \"1610712538.46886\",\n      agentCallEvent: \"Bridge\",\n      agentCallStatus: \"disconnected\",\n      agentID: \"9998\",\n      agentSipID: \"9998\",\n      contactNumber: contactNumber,\n      breakStatus: \"OUT\",\n\n    };\n    var config = {\n\n      method: 'post',\n      url: 'https://localhost:42004/crm/currentstatuses',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: data\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(\"update\", JSON.stringify(response.data));\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n  function handleSubmit(e) {\n\n    console.log('formRef', formRef.current.values);\n    const data = {\n      \"GName\": formRef.current.values.GroupAdminName,\n      \"GEmail\": formRef.current.values.GroupAdminEmail,\n\n      \"Gcontact\": formRef.current.values.groupcontact,\n\n      \"groupslabel\": formRef.current.values.Group,\n    }\n\n    const url = 'http://106.51.86.75:4000/admin/groupdadmin/add'\n    console.log(\"data\", data)\n    Axios.post(url, data)\n      .then(function (response) {\n        console.log(response);\n        if (response.data.status === 200) {\n          alert(\"Created Successfully\")\n          // updateAgentCallStatus(formRef.current.values.Agentcontact)\n        }\n        else {\n          alert(response.data.message)\n          console.log(\"formRef.current\", formRef.current)\n\n        }\n      })\n\n    setInitialValue({\n\n      GroupAdminName: '',\n      GroupAdminEmail: '',\n      groupcontact: '',\n\n      Group: {\n        value: \"\",\n        label: \"\"\n      }\n    });\n\n    formRef.current.values.GroupAdminName = \"\"\n    formRef.current.values.GroupAdminEmail = \"\"\n    formRef.current.values.groupcontact = \"\"\n\n    formRef.current.values.Group = {\n      value: \"\",\n      label: \"\"\n    }\n    console.log(\"initialValue\", initialValue)\n\n    e.preventDefault()\n\n\n  }\n\n\n\n\n  useEffect(() => {\n    console.log('formRef', formRef.current.values);\n    console.log(\"initialValue\", initialValue)\n    const url = 'http://106.51.86.75:4000/admin/group/getGroup'\n\n    Axios.post(url, {}, { headers: { Authorization: `Bearer ${localStorage.getItem('jwtToken')}` } })\n      .then(function (response) {\n        console.log(response);\n        if (response.data.status === 200) {\n          // roup=response.data.data\n          setGroups(response.data.data)\n        }\n        else {\n          alert(response.data.message)\n\n\n        }\n      })\n\n\n  }, [])\n  const [autoCompleteKey, setAutoCompleteKey] = useState(0);\n  return (\n    <Formik\n      validateOnBlur={false}\n      initialValues={initialValue}\n      disform={initialValue}\n      onSubmit={(e, { validate }, { resetForm }) => {\n        console.log(\"e\", e)\n        handleSubmit(e);\n        validate(e);\n        resetForm({ e: '' })\n      }}\n      innerRef={formRef}\n      validationSchema={yup.object({\n\n        Group: yup\n          .object()\n          .required('Please select a Group')\n          .typeError('Please select a Group'),\n        GroupAdminName: yup.string().required('Please Enter Group Admin Name'),\n        GroupAdminEmail: yup.string().required('Please Enter Group Admin Email'),\n        groupcontact: yup.string().required('Please Enter  Group Admin Contact Number'),\n\n      })}\n    >\n      {({ setFieldValue }) => (\n        <Form>\n          <Grid container spacing={2} direction=\"column\">\n            <Grid item >\n              <FormControl\n                variant=\"outlined\"\n                className={classes.fieldContainer}\n              >\n\n\n                <Autocomplete\n                  options={Groups}\n                  getOptionLabel={option => option.group_name}\n                  // style={{ width: 400, overflow: \"hidden\" }}\n                  getOptionSelected={(option, value) =>\n                    value.id === option.id\n                  }\n                  key={autoCompleteKey}\n                  onChange={(event, value) => {\n\n                    setFieldValue('Group', value);\n\n                  }}\n                  renderInput={params => (\n                    <Field\n                      component={TextField}\n                      {...params}\n                      label=\"Select Groups\"\n                      variant=\"outlined\"\n                      name=\"Group\"\n                    />\n                  )}\n                  name=\"Group\"\n                />\n              </FormControl>\n\n            </Grid>\n            <Grid item>\n              <Field\n                className={classes.fieldContainer}\n                name=\"GroupAdminName\"\n                component={TextField}\n                variant=\"outlined\"\n                multiline\n                // value=\"AgentName\"\n                label=\"Group Admin Name\"\n\n              />\n            </Grid>\n            <Grid item>\n              <Field\n                className={classes.fieldContainer}\n                name=\"GroupAdminEmail\"\n                component={TextField}\n                variant=\"outlined\"\n                multiline\n                label=\"Group Admin Email\"\n              />\n            </Grid>\n            <Grid item>\n              <Field\n                className={classes.fieldContainer}\n                name=\"groupcontact\"\n                component={TextField}\n                variant=\"outlined\"\n                multiline\n                label=\"Group Admin Contact Number\"\n              />\n            </Grid>\n\n\n\n\n          </Grid>\n          <br />\n\n          <Button color=\"primary\" variant=\"contained\" disabled={localStorage.getItem('callStatus') === 'connected' ? true : false} onClick={handleSubmit}>\n            Submit\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n","import {\n    Box,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Divider,\n    Typography,\n    TextField\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n    dialog: {\n        minWidth: 400\n    }\n}));\n\nexport default function DistSelect({ InputLabelProps = {}, ...props }) {\n    const classes = useStyles();\n    const [Groups, setGroups] = useState([]);\n    //   console.log(\"EditData\",props.EditData)\n    // const [formData, setFormData] = useState({\n    //         AgentType: \"\",\n    //         EmployeeName: \"\",\n    //         External_num: \"\",\n    //         Location: \"\",\n    //         UserID: \"\",\n    //         UserName: \"\",\n    //         EmailID:\"\"\n    //     });\n    const [showModal, setShowModal] = useState(true);\n\n    const Data = props.EditData[0]\n\n    const [formData, setFormData] = useState(Data);\n\n\n    const handleChange = (e) => {\n        console.log(\"target\", e.target)\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value\n        });\n    }\n    function updateAgentCallStatus(contactNumber) {\n        console.log(\"contactNumber\", contactNumber)\n        var axios = require('axios');\n\n        var data = {\n            agentCallDispositionStatus: \"NotDisposed\",\n            agentCallType: \"Inbound\",\n            agentCallUniqueId: \"1610712538.46886\",\n            agentCallEvent: \"Bridge\",\n            agentCallStatus: \"disconnected\",\n            agentID: \"9998\",\n            agentSipID: \"9998\",\n            contactNumber: contactNumber,\n            breakStatus: \"OUT\",\n\n        };\n        var config = {\n\n            method: 'post',\n            url: 'https://localhost:42004/crm/currentstatuses',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: data\n        };\n\n        axios(config)\n            .then(function (response) {\n                console.log(\"update\", JSON.stringify(response.data));\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    const handleSubmit = (e) => {\n\n        console.log(\"formData\", formData)\n        const url = 'http://106.51.86.75:4000/admin/agent/updateAgent'\n\n        Axios.post(url, formData)\n            .then(function (response) {\n                console.log(response);\n                if (response.data.status === 200) {\n                    alert(\"Updated Agent Successfully\")\n                    setShowModal(false)\n                    props.TableData()\n                    updateAgentCallStatus(formData.External_num)\n                }\n            })\n\n    }\n    useEffect(() => {\n        const url = 'http://106.51.86.75:4000/admin/group/getGroup'\n\n        Axios.post(url, {}, { headers: { Authorization: `Bearer ${localStorage.getItem('jwtToken')}` } })\n            .then(function (response) {\n                console.log(response);\n                if (response.data.status === 200) {\n                    // roup=response.data.data\n                    setGroups(response.data.data)\n                }\n                else {\n                    alert(response.data.message)\n\n\n                }\n            })\n\n\n    }, [])\n    return (\n        <div>\n            {showModal && (\n                <Dialog\n                    open\n                    onClose={() => setShowModal(false)}\n                    classes={{ paper: classes.dialog }}\n                >\n                    <DialogTitle>Edit Agent Details</DialogTitle>\n                    <Divider light />\n                    <DialogContent>\n                        <Typography variant=\"h6\">\n                            <TextField\n                                fullWidth\n                                label=\"Agent Name\"\n                                name=\"EmployeeName\"\n                                onChange={handleChange}\n                                required\n\n                                SelectProps={{ native: true }}\n                                value={formData.EmployeeName}\n                                variant=\"outlined\"\n                            />\n                            <br />\n                            <br />\n                            <TextField\n                                fullWidth\n                                label=\"Agent Email\"\n                                name=\"EmailID\"\n                                onChange={handleChange}\n                                required\n\n                                SelectProps={{ native: true }}\n                                value={formData.EmailID}\n                                variant=\"outlined\"\n                            />\n                            <br />\n                            <br />\n                            <TextField\n                                fullWidth\n                                label=\"Agent Contact Number\"\n                                name=\"External_num\"\n                                onChange={handleChange}\n                                required\n\n                                SelectProps={{ native: true }}\n                                value={formData.External_num}\n                                variant=\"outlined\"\n                            />\n                            <br />\n                            <br />\n                            <TextField\n                                fullWidth\n                                label=\"Location\"\n                                name=\"Location\"\n                                onChange={handleChange}\n                                required\n\n                                SelectProps={{ native: true }}\n                                value={formData.Location}\n                                variant=\"outlined\"\n                            />\n                            <br />\n                            <br />\n                            <TextField\n                                fullWidth\n                                label=\"Select Group\"\n                                name=\"GroupName\"\n                                onChange={handleChange}\n                                required\n                                select\n                                SelectProps={{ native: true }}\n                                value={formData.GroupName}\n                                variant=\"outlined\"\n                                InputLabelProps={{ ...InputLabelProps, shrink: true }}\n                                {...props}\n                            >\n                                {Groups.map((option) => (\n                                    <option\n                                        key={option.group_id}\n                                        value={option.group_name}\n                                    >\n                                        {option.group_name}\n                                    </option>\n                                ))}\n\n\n                            </TextField>\n                            <br />\n                            <br />\n                            <TextField\n                                fullWidth\n                                label=\"Select Agent Type\"\n                                name=\"AgentType\"\n                                onChange={handleChange}\n                                required\n                                select\n                                SelectProps={{ native: true }}\n                                value={formData.AgentType}\n                                variant=\"outlined\"\n                            >\n                                <option\n                                    key=\"L1\"\n                                    value=\"L1\"\n                                >\n                                    L1\n                                    </option>\n                                <option\n                                    key=\"L2\"\n                                    value=\"L2\"\n                                >\n                                    L2\n                                    </option>\n\n                            </TextField>\n\n                            <br />\n                            <br />\n                            <TextField\n                                fullWidth\n                                label=\"Select Agent Type\"\n                                name=\"Enabled\"\n                                onChange={handleChange}\n                                required\n                                select\n                                SelectProps={{ native: true }}\n                                value={formData.Enabled}\n                                variant=\"outlined\"\n                            >\n                                <option\n                                    key=\"1\"\n                                    value=\"True\"\n                                >\n                                    Enable\n                                    </option>\n                                <option\n                                    key=\"0\"\n                                    value=\"False\"\n                                >\n                                    Disable\n                                    </option>\n\n                            </TextField>\n                            <br />\n                            <br />\n                            <Box style={{ flexBasis: '100%' }}>\n                                <br />\n                            </Box>\n                        </Typography>\n                    </DialogContent>\n\n                    <DialogActions>\n                        <Button\n                            color=\"primary\"\n                            variant=\"contained\"\n                            onClick={\n                                (e) => {\n                                    setShowModal(false)\n                                }}\n                        >\n                            close\n                </Button>\n                        <Button\n                            color=\"primary\"\n                            variant=\"contained\"\n                            onClick={\n                                handleSubmit}\n                        >\n                            Update\n                </Button>\n\n                    </DialogActions>\n                </Dialog>\n            )}\n        </div>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport Axios from 'axios';\nimport Editgroup from './Edit'\nconst columns = [\n\n  // { field: 'id', headerName: 'ID', width: 70 },\n  { field: 'EmployeeName', headerName: 'Group Admin name', width: 200 },\n  { field: 'External_num', headerName: 'Contact Number', width: 200 },\n  {\n    field: 'EmailID',\n    headerName: 'Email',\n    width: 200,\n  },\n\n  {\n    field: 'GroupName',\n    headerName: 'Groups',\n    width: 160,\n\n  },\n];\n\n\n\nexport default function DataGridDemo() {\n  const [agents, setAgents] = useState([]);\n  const [editform, setEditform] = useState(false);\n  const [editData, setEditData] = useState([]);\n\n  function TableData() {\n    const url = 'http://106.51.86.75:4000/admin/groupdadmin/view'\n\n    Axios.post(url)\n      .then(function (response) {\n        // console.log(JSON.stringify(response.data.data));\n        setAgents(response.data.data)\n\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n  }\n  useEffect(() => {\n    TableData()\n\n\n  }, [])\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      {agents.length > 0 ? <DataGrid rows={agents.map(calls => ({\n        ...calls,\n        id: calls.UserID\n      }))} columns={columns} pageSize={5} checkboxSelection\n        onSelectionChange={(newSelection) => {\n\n\n          const url = 'http://106.51.86.75:4000/admin/agent/getAgent'\n\n\n          Axios.post(url, newSelection)\n            .then(function (response) {\n              // console.log(JSON.stringify(response.data));\n              if (response.data.status === 200) {\n                setEditform(true)\n                setEditData(response.data.data)\n              }\n\n            })\n          // setSelection(newSelection.rowIds);\n        }} /> : <></>}\n      {/* {editData.length > 0 ? <Editgroup\n        EditData={editData}\n        TableData={TableData} /> : <></>} */}\n    </div>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport {\n  Avatar,\n  Grid,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles,\n  Typography,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Card,\n  CardContent,\n  Container,\n  CardHeader,\n  Box\n} from '@material-ui/core';\nimport {\n  GET_INBOUND_DASHBOARD_DATA,  \n  GET_INTERACTION_BY_AGENT_SIP_ID\n} from 'src/modules/dashboard-360/utils/endpoints';\n\nimport { grey } from '@material-ui/core/colors';\n\nimport socketIOClient from 'socket.io-client';\n\n\nimport CreateGroup from './Createform'\nimport GroupTable from './Table'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    display: 'flex'\n  },\n  grey: {\n    color: theme.palette.getContrastText(grey[50]),\n    backgroundColor: grey[50]\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  paper: {\n    textAlign: 'center'\n  },\n  list: {},\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    marginRight: '0.5vw'\n  },\n  listItem: {\n    padding: 0\n  },\n  cardcontent: {\n    padding: '0 0 0 5%',\n    '&:last-child': {\n      paddingBottom: 0\n    }\n  }\n}));\n\n\nconst AgentDashboard = () => {\n  const classes = useStyles();\n\n\n  useEffect(() => {\n\n \n\n  }, [])\n\n  return (\n    // <>\n    <Container maxWidth={false}>\n        <div className={classes.root}>\n      <Grid container spacing={3}>\n    \n        <Grid item xs={12} sm={4}>\n        <div>\n       \n         <Card>\n                  <CardHeader title={'Create Group Admin'} />\n                  <CardContent>\n                    <CreateGroup/>\n                    </CardContent>\n                    </Card>\n                  \n               </div>\n        \n        </Grid>\n        <Grid item xs={12} sm={8}>\n        <div>\n        <Card>\n                  <CardHeader title={'Group Admin Details'} />\n                  <CardContent>\n        <GroupTable/>\n        </CardContent>\n           </Card>\n               </div>\n         \n        </Grid>\n      \n      </Grid>\n    </div>\n  \n     </Container>\n    // </>\n  );\n};\n\nexport default AgentDashboard;\n","import dashboard from '../views/dashboard';\n\nexport default [\n  {\n    path: '/dashboard',\n    key: 'dashboardgroup',\n    component: dashboard\n  }\n];\n","import routes from 'src/modules/dashboard-360/routes';\nimport React from 'react';\nimport telephonyRoutes from '../modules/telephony/routes';\nimport faqRoutes from '../modules/FAQ/routes';\n\nimport authRoutes from '../modules/auth/routes';\n\nimport agentRoutes from '../modules/agentForm/routes';\nimport groupRoutes from '../modules/groupadminForm/routes';\nexport const dash360 = React.lazy(() =>\n  import('src/modules/dashboard-360/views')\n);\n\nexport const telephony = React.lazy(() =>\n  import('src/modules/telephony/views/index')\n);\n\nexport const faq = React.lazy(() =>\n  import('src/modules/FAQ/views/index')\n);\n\nexport const agentform = React.lazy(() =>\n  import('src/modules/agentForm/views/index')\n);\nexport const groupform = React.lazy(() =>\n  import('src/modules/groupadminForm/views/index')\n);\nexport const auth = React.lazy(() => import('src/modules/auth/views/index'));\n\nexport default [\n  {\n    path: '/dash360',\n    routes,\n    key: 'dash360',\n    component: dash360,\n    crumb: 'Student Interaction',\n    requiresAuth: true\n  },\n\n  {\n    path: '/telephony',\n    routes: telephonyRoutes,\n    key: 'telephony',\n    component: telephony,\n    crumb: 'Telephony',\n    requiresAuth: true\n  },\n\n  {\n    path: '/faq',\n    routes: faqRoutes,\n    key: 'faq',\n    component: faq,\n    crumb: 'faq',\n    requiresAuth: true\n  },\n  {\n    path: '/agent',\n    routes: agentRoutes,\n    key: 'dashboardagent',\n    component: agentform,\n    crumb: 'Agents',\n    requiresAuth: true\n  },\n  {\n    path: '/group',\n    routes: groupRoutes,\n    key: 'dashboardgroup',\n    component: groupform,\n    crumb: 'Groups',\n    requiresAuth: true\n  },\n  {\n    path: '/auth',\n    routes: authRoutes,\n    key: 'auth',\n    component: auth,\n    requiresAuth: false\n  }\n\n];\n","import { PinDropSharp } from '@material-ui/icons';\nimport Axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport MainLoader from './components/MainLoader';\nimport RouteSwitch from './components/RouteSwitch';\nimport TopBar from './components/TopBar';\nimport NavBar from './modules/dashboard-360/layouts/DashboardLayout/NavBar';\nimport { setAccountType, setLoggedIn, setUserDetails } from './redux/action';\nimport { ADMIN, USER } from './redux/constants';\nimport routes from './routes';\nimport { Redirect } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport axios from 'axios';\nimport {\n  SOCKETENDPOINT1, SOCKETENDPOINT2, SOCKETENDPOINT3, SOCKETENDPOINT4, SOCKETENDPOINT5, UPDATE_CURRENT_STATUS\n} from './modules/dashboard-360/utils/endpoints'\nimport { useHistory } from 'react-router-dom'\n\n\nfunction Main({\n  isLoggedIn,\n  classes,\n  setUserDetailsMain,\n  setAccountTypeMain,\n  setLoggedInMain\n}) {\n  const [loading, setLoading] = useState(true);\n  const [filteredRoutes, setfilteredRoutes] = useState(\n    routes.filter(route => route.requiresAuth === false)\n  );\n\n  const [localLoggedInState, setLocalLoggedIn] = useState(false);\n  const [routeAccess, setRouteAccess] = useState(false);\n  const dispatch = useDispatch()\n  const user_Details = useSelector(state => state.userData)\n\n  let history = useHistory()\n\n  function removeFromQueue(agentId, queue, user_Details) {\n    const axios = require('axios');\n    var APIENDPOINT = '';\n    // console.log('userDetails sdsdfgsdfgsdf', user_Details)\n    // if (user_Details.Server === 'server1') {\n    //   APIENDPOINT = SOCKETENDPOINT1\n    // }\n    // if (user_Details.Server === 'server2') {\n    //   APIENDPOINT = SOCKETENDPOINT2\n    // }\n    // if (user_Details.Server === 'server3') {\n    //   APIENDPOINT = SOCKETENDPOINT3\n    // }\n    // if (user_Details.Server === 'server4') {\n    //   APIENDPOINT = SOCKETENDPOINT4\n    // }\n    // console.log('remove', agentId);\n    const config1 = {\n      method: 'get',\n      url:\n        `${SOCKETENDPOINT1\n        }/ami/actions/rmq?Queue=${queue\n        }&Interface=${agentId}`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    axios(config1)\n      .then((response) => {\n\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n\n\n    const config2 = {\n      method: 'get',\n      url:\n        `${SOCKETENDPOINT2\n        }/ami/actions/rmq?Queue=${queue\n        }&Interface=${agentId}`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    axios(config2)\n      .then((response) => {\n\n      })\n      .catch((error) => {\n        // console.log(error);\n      });\n\n\n    const config3 = {\n      method: 'get',\n      url:\n        `${SOCKETENDPOINT3\n        }/ami/actions/rmq?Queue=${queue\n        }&Interface=${agentId}`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    axios(config3)\n      .then((response) => {\n\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n\n\n    const config4 = {\n      method: 'get',\n      url:\n        `${SOCKETENDPOINT4\n        }/ami/actions/rmq?Queue=${queue\n        }&Interface=${agentId}`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    axios(config4)\n      .then((response) => {\n\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n\n    const config5 = {\n      method: 'get',\n      url:\n        `${SOCKETENDPOINT5\n        }/ami/actions/rmq?Queue=7003&Interface=${agentId}`,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    axios(config5)\n      .then((response) => {\n\n      })\n      .catch((error) => {\n        //console.log(error);\n      });\n  }\n\n  function updateAgentCallStatusV2(callStatusId, data) {\n    // console.log(\"updateData\", updateData)\n    var axios = require('axios');\n    var config = {\n      method: 'put',\n      url: UPDATE_CURRENT_STATUS + callStatusId,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: data\n    };\n    axios(config)\n      .then(function (response) {\n        //console.log('update', JSON.stringify(response.data));\n      })\n      .catch(function (error) {\n        //console.log(error);\n      });\n  }\n\n  useEffect(() => {\n    (async function checkLoggedInState() {\n      try {\n        if (localStorage.getItem('jwtToken')) {\n          setLoggedInMain(true);\n          var test = await Axios.post('http://106.51.86.75:4000/auth/apiM/verifyClient', {}, { headers: { Authorization: `Bearer ${localStorage.getItem('jwtToken')}` } })\n            .then(async response => {\n              //console.log('respose', response)\n              var result = response.data.userDetails\n              if (response.data.status != 200) {\n                try {\n                  removeFromQueue(`Local/5${localStorage.getItem('AgentSIPID')}@from-queue`, 7001, user_Details);\n                  updateAgentCallStatusV2(localStorage.getItem('callStatusId'), { loginStatus: 'false' })\n                  const userData = localStorage.jwtToken\n\n                  const url = 'http://106.51.86.75:4000/auth/apiM/logout'\n                  axios.delete(url, { headers: { Authorization: `Bearer ${localStorage.getItem('jwtToken')}` } });\n\n                  localStorage.clear();\n\n                  dispatch(setLoggedIn(false));\n                  window.location.reload();\n                } catch (err) {\n                  //console.log(err);\n                }\n              } else {\n                const GET_CURRENT_STATUS_BY_AGENT_SIP_ID = `http://106.51.86.75:42004/crm/currentstatuses/agentSipID?agentSipID=${localStorage.getItem('AgentSIPID')}`;\n                const getCurrentStatus = await Axios.get(GET_CURRENT_STATUS_BY_AGENT_SIP_ID);\n                //console.log('getCurrentStatus',getCurrentStatus)\n\n                if (getCurrentStatus.data[0].jwtToken === localStorage.getItem('jwtToken')) {\n                  var obj = {\n                    UserID: result.UserID,\n                    AllowPublic: result.AllowPublic,\n                    UserName: result.UserName,\n                    EmployeeName: result.EmployeeName,\n                    EmailID: result.EmailID,\n                    OTP: result.OTP,\n                    tenetID: result.tenetID,\n                    tenentId: result.tenentId,\n                    tenentName: result.tenentName,\n                    roleids: result.roleids,\n                    role: result.role,\n                    modules: result.modules,\n                    External_num: result.External_num,\n                    Server: result.Server,\n                    AgentQueueStatus: result.AgentQueueStatus\n                  }\n                  setUserDetailsMain(obj)\n                  localStorage.setItem('AgentSIPID', obj.External_num);\n                  setAccountTypeMain(obj.role === 'Agent' || obj.role === 'Admin' || obj.role === 'Group admin' ? ADMIN : USER);\n                  // setAccountTypeMain(obj.role === 'Agent' ? ADMIN : USER);\n                  if (obj.role === 'Agent') {\n                    setRouteAccess(true)\n                  }\n\n                } else {\n                  localStorage.clear();\n                  setLoggedInMain(false);\n                  // history.push('/auth/login')\n\n                }\n\n              }\n\n            })\n            .catch(error => console.log(error));\n        } else {\n          setLoggedInMain(false);\n        }\n      } catch (error) {\n        setLoggedInMain(false);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    setfilteredRoutes(\n      routes.filter(route => route.requiresAuth === isLoggedIn)\n    );\n    setLocalLoggedIn(isLoggedIn);\n  }, [isLoggedIn]);\n  return loading ? (\n    <MainLoader />\n  ) : localLoggedInState ? (\n    <>\n      <TopBar />\n      <NavBar openMobile={false} onMobileClose={() => null} />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <RouteSwitch\n              routes={filteredRoutes}\n              isRoot\n              redirectPath=\"/dash360\"\n            />\n            {/* <RouteSwitch\n              routes={filteredRoutes}\n              isRoot\n              redirectPath=\"/telephony\"\n            /> */}\n\n          </div>\n        </div>\n      </div>\n    </>\n  ) : (\n    <RouteSwitch routes={filteredRoutes} isRoot redirectPath=\"/auth/login\" />\n  );\n}\n\nconst mapStateToProps = state => ({\n  isLoggedIn: state.logInState\n});\nconst mapDispatchToProps = dispatch => ({\n  setUserDetailsMain: details => dispatch(setUserDetails(details)),\n  setAccountTypeMain: type => dispatch(setAccountType(type)),\n  setLoggedInMain: val => dispatch(setLoggedIn(val))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n","import 'react-perfect-scrollbar/dist/css/styles.css';\nimport React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { makeStyles, ThemeProvider } from '@material-ui/core';\nimport GlobalStyles from 'src/modules/dashboard-360/components/GlobalStyles';\nimport 'src/modules/dashboard-360/mixins/chartjs';\nimport theme from 'src/modules/dashboard-360/theme';\nimport { Provider } from 'react-redux';\nimport rootStore from './redux/store';\nimport MainLoader from './components/MainLoader';\nimport Main from './Main';\n// import Axios from 'axios';\n\n// Axios.defaults.baseURL = '/ui';\n// Axios.defaults.withCredentials = true;\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  return (\n    <Provider store={rootStore}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <React.Suspense fallback={<MainLoader />}>\n            <div className={classes.root}>\n              <GlobalStyles />\n              <Main classes={classes} />\n            </div>\n          </React.Suspense>\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n), document.getElementById('root'));\n\nserviceWorker.unregister();\n","import { Box, Breadcrumbs, Grid } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport HomeIcon from '@material-ui/icons/Home';\n\nfunction CustomBreadcrumbs({ activatedRoute, crumbs, urlMatchFound }) {\n  const [breadCrumbLinks, setbreadCrumbLinks] = useState([]);\n  useEffect(() => {\n    if (urlMatchFound) {\n      setbreadCrumbLinks(crumbs.get(activatedRoute));\n    }\n  }, [urlMatchFound, activatedRoute]);\n  let newLink = '/';\n  return (\n    <Grid container>\n      {breadCrumbLinks?.length ? (\n        <Box style={{ margin: '1.5rem 2rem 0 1.5rem' }}>\n          <Breadcrumbs>\n            <Link to=\"/\">\n              <HomeIcon />\n            </Link>\n            {activatedRoute\n              .split('/')\n              .slice(1)\n              .map((route, index) => {\n                newLink += route + '/';\n                return breadCrumbLinks[index] ? (\n                  <Link\n                    to={\n                      index === breadCrumbLinks.length - 1\n                        ? '/' +\n                          window.location.href\n                            .split('/')\n                            .splice(3)\n                            .join('/')\n                        : newLink\n                    }\n                    key={newLink}\n                  >\n                    {breadCrumbLinks[index]}\n                  </Link>\n                ) : (\n                  ''\n                );\n              })}\n          </Breadcrumbs>\n        </Box>\n      ) : (\n        ''\n      )}\n    </Grid>\n  );\n}\n\nconst mapSTP = state => ({\n  activatedRoute: state.activatedRoute,\n  crumbs: state.crumbs,\n  urlMatchFound: state.urlMatchFound\n});\n\nexport default connect(mapSTP)(CustomBreadcrumbs);\n","import { SET_USER_DATA } from 'src/modules/dashboard-360/redux/constants';\nimport {\n  SET_LOGGED_IN,\n  SET_ACCOUNT_TYPE,\n  SET_ACTIVATED_ROUTE,\n  SET_NEW_CRUMB,\n  SET_URL_MATCH_FOUND,\n  SET_AGENT_CURRENT_STATUS,\n  SET_SEARCH_DISTRIBUTOR\n} from './constants';\n\nconst logInInitialState = false;\nconst accountTypeInitialState = '';\nconst userDataInitialState = \"\"\nconst agentInitialState = {\n  \"AgentType\": \"\",\n  \"role\": \"\",\n  \"callUniqueId\": \"\",\n  \"distributer_id\": \"\",\n  \"callStatusId\": \"\",\n  \"callDispositionStatus\": \"\",\n  \"callType\": \"\",\n  \"callEvent\": \"\",\n  \"callerNumber\": \"\",\n  \"callStatus\": \"\",\n  \"AgentSIPID\": \"\",\n\n}\n\nexport const logInState = (state = logInInitialState, action) => {\n  switch (action.type) {\n    case SET_LOGGED_IN: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n};\n\nexport const userData = (state = null, action) => {\n  switch (action.type) {\n    case SET_USER_DATA: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n};\n\nexport const agentCurrentStatus = (state = agentInitialState, action) => {\n  switch (action.type) {\n    case SET_AGENT_CURRENT_STATUS: {\n      return action.payload\n    }\n    default:\n      return state\n  }\n}\n\nexport const accountType = (state = accountTypeInitialState, action) => {\n  switch (action.type) {\n    case SET_ACCOUNT_TYPE: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n};\nexport const activatedRoute = (state = '', action) => {\n  switch (action.type) {\n    case SET_ACTIVATED_ROUTE: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n};\nexport const crumbs = (state = new Map(), action) => {\n  switch (action.type) {\n    case SET_NEW_CRUMB: {\n      // Not changing reference to prevent rerendering purposefully\n      state.set(action.key, action.value);\n      return state;\n    }\n    default:\n      return state;\n  }\n};\nexport const urlMatchFound = (state = false, action) => {\n  switch (action.type) {\n    case SET_URL_MATCH_FOUND: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n};\nexport const searchDistributor = (state = '', action) => {\n  switch (action.type) {\n    case SET_SEARCH_DISTRIBUTOR: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n};"],"sourceRoot":""}